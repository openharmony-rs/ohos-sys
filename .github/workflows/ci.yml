name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  code_quality:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo fmt --check
      - run: cargo clippy
  build-toolchains:
    strategy:
      matrix:
        toolchain: [stable, beta, nightly]
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}
      - run: cargo build
        name: Build default features
      - run: cargo build --all-features
        name: Build all features
  api_feature_levels:
    strategy:
      matrix:
        api_level: ["api-10", "api-11", "api-12"]
    name: Build with API feature levels
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo build --features ${{ matrix.api_level }} --features all-components
        name: Build with API features
  api_minimal_featueres:
    strategy:
      matrix:
        component: ["drawing", "hilog", "napi", "hitrace", "native_buffer", "native_image", "native_window", "xcomponent", "vsync"]
    name: Build with minimal features
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Build minimal features API-10
        run: cargo build --features api-10 --features ${{ matrix.component }}
      - name: Build minimal features API-11
        run: cargo build --features api-11 --features ${{ matrix.component }}
      - name: Build minimal features API-12
        run: cargo build --features api-12 --features ${{ matrix.component }}

  semver_checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Check semver
        uses: obi1kenobi/cargo-semver-checks-action@v2

  rustdoc:
    name: Build Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
      - name: Build docs
        run: cargo doc --all-features --workspace --no-deps
        env:
          RUSTDOCFLAGS: "--cfg=docsrs"

  build-result:
    name: Result
    runs-on: ubuntu-latest
    if: always()
    # needs all build to detect cancellation
    needs:
      - code_quality
      - build-toolchains
      - api_feature_levels
      - api_minimal_featueres
      - semver_checks
      - rustdoc
    steps:
      - name: Success
        if: ${{ !contains(needs.*.result, 'failure') && !contains(needs.*.result, 'cancelled') }}
        run: exit 0
      - name: Failure
        if: contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled')
        run: exit 1