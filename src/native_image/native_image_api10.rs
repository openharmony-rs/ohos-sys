/* automatically generated by rust-bindgen 0.69.4 */

#![allow(non_upper_case_globals)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
use crate::native_window::OHNativeWindow;

#[repr(C)]
pub struct OH_NativeImage {
    _unused: [u8; 0],
}
extern "C" {
    /** @brief Create a <b>OH_NativeImage</b> related to an Opengl ES texture and target. \n

    @syscap SystemCapability.Graphic.Graphic2D.NativeImage
    @param textureId Indicates the id of the Opengl ES texture which the native image attached to.
    @param textureTarget Indicates the Opengl ES target.
    @return Returns the pointer to the <b>OH_NativeImage</b> instance created if the operation is successful, \n
    returns <b>NULL</b> otherwise.
    @since 9
    @version 1.0*/
    pub fn OH_NativeImage_Create(textureId: u32, textureTarget: u32) -> *mut OH_NativeImage;
    /** @brief Acquire the OHNativeWindow for the OH_NativeImage. This OHNativeWindow should be released by \n
    OH_NativeWindow_DestroyNativeWindow when no longer needed.

    @syscap SystemCapability.Graphic.Graphic2D.NativeImage
    @param image Indicates the pointer to a <b>OH_NativeImage</b> instance.
    @return Returns the pointer to the OHNativeWindow if the operation is successful, returns <b>NULL</b> otherwise.
    @since 9
    @version 1.0*/
    pub fn OH_NativeImage_AcquireNativeWindow(image: *mut OH_NativeImage) -> *mut OHNativeWindow;
    /** @brief Attach the OH_NativeImage to Opengl ES context, and the Opengl ES texture is bound to the \n
    GL_TEXTURE_EXTERNAL_OES, which will update by the OH_NativeImage.

    @syscap SystemCapability.Graphic.Graphic2D.NativeImage
    @param image Indicates the pointer to a <b>OH_NativeImage</b> instance.
    @param textureId Indicates the id of the Opengl ES texture which the native image attached to.
    @return Returns an error code, 0 is success, otherwise, failed.
    @since 9
    @version 1.0*/
    pub fn OH_NativeImage_AttachContext(image: *mut OH_NativeImage, textureId: u32) -> i32;
    /** @brief Detach the OH_NativeImage from the Opengl ES context.

    @syscap SystemCapability.Graphic.Graphic2D.NativeImage
    @param image Indicates the pointer to a <b>OH_NativeImage</b> instance.
    @return Returns an error code, 0 is success, otherwise, failed.
    @since 9
    @version 1.0*/
    pub fn OH_NativeImage_DetachContext(image: *mut OH_NativeImage) -> i32;
    /** @brief Update the related Opengl ES texture with the OH_NativeImage acquired buffer.

    @syscap SystemCapability.Graphic.Graphic2D.NativeImage
    @param image Indicates the pointer to a <b>OH_NativeImage</b> instance.
    @return Returns an error code, 0 is success, otherwise, failed.
    @since 9
    @version 1.0*/
    pub fn OH_NativeImage_UpdateSurfaceImage(image: *mut OH_NativeImage) -> i32;
    /** @brief Get the timestamp of the texture image set by the most recent call to OH_NativeImage_UpdateSurfaceImage.

    @syscap SystemCapability.Graphic.Graphic2D.NativeImage
    @param image Indicates the pointer to a <b>OH_NativeImage</b> instance.
    @return Returns the timestamp associated to the texture image.
    @since 9
    @version 1.0*/
    pub fn OH_NativeImage_GetTimestamp(image: *mut OH_NativeImage) -> i64;
    /** @brief Return the transform matrix of the texture image set by the most recent call to \n
    OH_NativeImage_UpdateSurfaceImage.

    @syscap SystemCapability.Graphic.Graphic2D.NativeImage
    @param image Indicates the pointer to a <b>OH_NativeImage</b> instance.
    @param matrix Indicates the retrieved 4*4 transform matrix .
    @return Returns an error code, 0 is success, otherwise, failed.
    @since 9
    @version 1.0*/
    pub fn OH_NativeImage_GetTransformMatrix(image: *mut OH_NativeImage, matrix: *mut f32) -> i32;
    /** @brief Destroy the <b>OH_NativeImage</b> created by OH_NativeImage_Create, and the pointer to \n
    <b>OH_NativeImage</b> will be null after this operation.

    @syscap SystemCapability.Graphic.Graphic2D.NativeImage
    @param image Indicates the pointer to a <b>OH_NativeImage</b> pointer.
    @since 9
    @version 1.0*/
    pub fn OH_NativeImage_Destroy(image: *mut *mut OH_NativeImage);
}
