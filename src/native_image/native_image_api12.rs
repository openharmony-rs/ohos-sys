/* automatically generated by rust-bindgen 0.69.4 */

#![allow(non_upper_case_globals)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
use crate::native_window::OHNativeWindow;

#[repr(C)]
pub struct OH_NativeImage {
    _unused: [u8; 0],
}
/** @brief The callback function of frame available.

@syscap SystemCapability.Graphic.Graphic2D.NativeImage
@param context User defined context, returned to the user in the callback function
@since 11
@version 1.0*/
pub type OH_OnFrameAvailable =
    ::core::option::Option<unsafe extern "C" fn(context: *mut ::core::ffi::c_void)>;
/** @brief A listener for native image, use <b>OH_NativeImage_SetOnFrameAvailableListener</b> to register \n
the listener object to <b>OH_NativeImage</b>, the callback will be triggered when there is available frame

@since 11
@version 1.0*/
#[repr(C)]
#[derive(Debug)]
pub struct OH_OnFrameAvailableListener {
    /// User defined context, returned to the user in the callback function
    pub context: *mut ::core::ffi::c_void,
    /// The callback function of frame available.
    pub onFrameAvailable: OH_OnFrameAvailable,
}
extern "C" {
    /** @brief Create a <b>OH_NativeImage</b> related to an Opengl ES texture and target. \n

    @syscap SystemCapability.Graphic.Graphic2D.NativeImage
    @param textureId Indicates the id of the Opengl ES texture which the native image attached to.
    @param textureTarget Indicates the Opengl ES target.
    @return Returns the pointer to the <b>OH_NativeImage</b> instance created if the operation is successful, \n
    returns <b>NULL</b> otherwise.
    @since 9
    @version 1.0*/
    pub fn OH_NativeImage_Create(textureId: u32, textureTarget: u32) -> *mut OH_NativeImage;
    /** @brief Acquire the OHNativeWindow for the OH_NativeImage.

    @syscap SystemCapability.Graphic.Graphic2D.NativeImage
    @param image Indicates the pointer to a <b>OH_NativeImage</b> instance.
    @return Returns the pointer to the OHNativeWindow if the operation is successful, returns <b>NULL</b> otherwise.
    @since 9
    @version 1.0*/
    pub fn OH_NativeImage_AcquireNativeWindow(image: *mut OH_NativeImage) -> *mut OHNativeWindow;
    /** @brief Attach the OH_NativeImage to Opengl ES context, and the Opengl ES texture is bound to the \n
    GL_TEXTURE_EXTERNAL_OES, which will update by the OH_NativeImage.

    @syscap SystemCapability.Graphic.Graphic2D.NativeImage
    @param image Indicates the pointer to a <b>OH_NativeImage</b> instance.
    @param textureId Indicates the id of the Opengl ES texture which the native image attached to.
    @return Returns an error code, 0 is success, otherwise, failed.
    @since 9
    @version 1.0*/
    pub fn OH_NativeImage_AttachContext(image: *mut OH_NativeImage, textureId: u32) -> i32;
    /** @brief Detach the OH_NativeImage from the Opengl ES context.

    @syscap SystemCapability.Graphic.Graphic2D.NativeImage
    @param image Indicates the pointer to a <b>OH_NativeImage</b> instance.
    @return Returns an error code, 0 is success, otherwise, failed.
    @since 9
    @version 1.0*/
    pub fn OH_NativeImage_DetachContext(image: *mut OH_NativeImage) -> i32;
    /** @brief Update the related Opengl ES texture with the OH_NativeImage acquired buffer.

    @syscap SystemCapability.Graphic.Graphic2D.NativeImage
    @param image Indicates the pointer to a <b>OH_NativeImage</b> instance.
    @return Returns an error code, 0 is success, otherwise, failed.
    @since 9
    @version 1.0*/
    pub fn OH_NativeImage_UpdateSurfaceImage(image: *mut OH_NativeImage) -> i32;
    /** @brief Get the timestamp of the texture image set by the most recent call to OH_NativeImage_UpdateSurfaceImage.

    @syscap SystemCapability.Graphic.Graphic2D.NativeImage
    @param image Indicates the pointer to a <b>OH_NativeImage</b> instance.
    @return Returns the timestamp associated to the texture image.
    @since 9
    @version 1.0*/
    pub fn OH_NativeImage_GetTimestamp(image: *mut OH_NativeImage) -> i64;
    /** @brief Return the transform matrix of the texture image set by the most recent call to \n
    OH_NativeImage_UpdateSurfaceImage.

    @syscap SystemCapability.Graphic.Graphic2D.NativeImage
    @param image Indicates the pointer to a <b>OH_NativeImage</b> instance.
    @param matrix Indicates the retrieved 4*4 transform matrix .
    @return Returns an error code, 0 is success, otherwise, failed.
    @since 9
    @version 1.0
    @deprecated since 12
    @useinstead OH_NativeImage_GetTransformMatrixV2*/
    pub fn OH_NativeImage_GetTransformMatrix(image: *mut OH_NativeImage, matrix: *mut f32) -> i32;
    /** @brief Return the native image's surface id.

    @syscap SystemCapability.Graphic.Graphic2D.NativeImage
    @param image Indicates the pointer to a <b>OH_NativeImage</b> instance.
    @param surfaceId Indicates the surface id.
    @return Returns an error code, 0 is success, otherwise, failed.
    @since 11
    @version 1.0*/
    pub fn OH_NativeImage_GetSurfaceId(image: *mut OH_NativeImage, surfaceId: *mut u64) -> i32;
    /** @brief Set the frame available callback.

    @syscap SystemCapability.Graphic.Graphic2D.NativeImage
    @param image Indicates the pointer to a <b>OH_NativeImage</b> instance.
    @param listener Indicates the callback function.
    @return Returns an error code, 0 is success, otherwise, failed.
    @since 11
    @version 1.0*/
    pub fn OH_NativeImage_SetOnFrameAvailableListener(
        image: *mut OH_NativeImage,
        listener: OH_OnFrameAvailableListener,
    ) -> i32;
    /** @brief Unset the frame available callback.

    @syscap SystemCapability.Graphic.Graphic2D.NativeImage
    @param image Indicates the pointer to a <b>OH_NativeImage</b> instance.
    @return Returns an error code, 0 is success, otherwise, failed.
    @since 11
    @version 1.0*/
    pub fn OH_NativeImage_UnsetOnFrameAvailableListener(image: *mut OH_NativeImage) -> i32;
    /** @brief Destroy the <b>OH_NativeImage</b> created by OH_NativeImage_Create, and the pointer to \n
    <b>OH_NativeImage</b> will be null after this operation.

    @syscap SystemCapability.Graphic.Graphic2D.NativeImage
    @param image Indicates the pointer to a <b>OH_NativeImage</b> pointer.
    @since 9
    @version 1.0*/
    pub fn OH_NativeImage_Destroy(image: *mut *mut OH_NativeImage);
    /** @brief Obtains the transform matrix of the texture image by producer transform type.\n

    @syscap SystemCapability.Graphic.Graphic2D.NativeImage
    @param image Indicates the pointer to a <b>OH_NativeImage</b> instance.
    @param matrix Indicates the retrieved 4*4 transform matrix .
    @return 0 - Success.
        40001000 - image is NULL.
    @since 12
    @version 1.0*/
    pub fn OH_NativeImage_GetTransformMatrixV2(image: *mut OH_NativeImage, matrix: *mut f32)
        -> i32;
    /** @brief Acquire an <b>OHNativeWindowBuffer</b> through an <b>OH_NativeImage</b> instance for content consumer.\n
    This method can not be used at the same time with <b>OH_NativeImage_UpdateSurfaceImage</b>.\n
    This method will create an <b>OHNativeWindowBuffer</b>.\n
    When using <b>OHNativeWindowBuffer</b>, need to increase its reference count
    by <b>OH_NativeWindow_NativeObjectReference</b>.\n
    When the <b>OHNativeWindowBuffer</b> is used up, its reference count needs to be decremented
    by <b>OH_NativeWindow_NativeObjectUnreference</b>.\n
    This interface needs to be used in conjunction with <b>OH_NativeImage_ReleaseNativeWindowBuffer<\b>,
    otherwise memory leaks will occur.\n
    When the fenceFd is used up, you need to close it.\n

    @syscap SystemCapability.Graphic.Graphic2D.NativeImage
    @param image Indicates the pointer to a <b>OH_NativeImage</b> instance.
    @param nativeWindowBuffer Indicates the pointer to an <b>OHNativeWindowBuffer</b> point.
    @param fenceFd Indicates the pointer to a file descriptor handle.
    @return {@link NATIVE_ERROR_OK} 0 - Success.
        {@link NATIVE_ERROR_INVALID_ARGUMENTS} 40001000 - image, nativeWindowBuffer, fenceFd is NULL.
        {@link NATIVE_ERROR_NO_BUFFER} 40601000 - No buffer for consume.
    @since 12
    @version 1.0*/
    pub fn OH_NativeImage_AcquireNativeWindowBuffer(
        image: *mut OH_NativeImage,
        nativeWindowBuffer: *mut *mut OHNativeWindowBuffer,
        fenceFd: *mut ::core::ffi::c_int,
    ) -> i32;
    /** @brief Release the <b>OHNativeWindowBuffer</b> to the buffer queue through an
    <b>OH_NativeImage</b> instance for reuse.\n
    The fenceFd will be close by system.\n

    @syscap SystemCapability.Graphic.Graphic2D.NativeImage
    @param image Indicates the pointer to a <b>OH_NativeImage</b> instance.
    @param nativeWindowBuffer Indicates the pointer to an <b>OHNativeWindowBuffer</b> instance.
    @param fenceFd Indicates a file descriptor handle, which is used for timing synchronization.
    @return {@link NATIVE_ERROR_OK} 0 - Success.
        {@link NATIVE_ERROR_INVALID_ARGUMENTS} 40001000 - image, nativeWindowBuffer is NULL.
        {@link NATIVE_ERROR_BUFFER_STATE_INVALID} 41207000 - nativeWindowBuffer state invalid.
        {@link NATIVE_ERROR_BUFFER_NOT_IN_CACHE} 41210000 - nativeWindowBuffer not in cache.
    @since 12
    @version 1.0*/
    pub fn OH_NativeImage_ReleaseNativeWindowBuffer(
        image: *mut OH_NativeImage,
        nativeWindowBuffer: *mut OHNativeWindowBuffer,
        fenceFd: ::core::ffi::c_int,
    ) -> i32;
    /** @brief Create a <b>OH_NativeImage</b> as a consumerSurface. \n
    This method can not be used at the same time with <b>OH_NativeImage_UpdateSurfaceImage</b>.\n
    This interface needs to be used in conjunction with <b>OH_NativeImage_Destroy<\b>,
    otherwise memory leaks will occur.\n
    @syscap SystemCapability.Graphic.Graphic2D.NativeImage
    @return Returns the pointer to the <b>OH_NativeImage</b> instance created if the operation is successful, \n
    returns <b>NULL</b> otherwise.
    @since 12
    @version 1.0*/
    pub fn OH_ConsumerSurface_Create() -> *mut OH_NativeImage;
}
