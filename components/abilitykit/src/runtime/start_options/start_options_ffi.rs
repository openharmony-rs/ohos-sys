// automatically generated by rust-bindgen 0.71.1

#![allow(non_upper_case_globals)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
use crate::runtime::{
    AbilityRuntimeResult, AbilityRuntime_StartVisibility, AbilityRuntime_SupportedWindowMode,
    AbilityRuntime_WindowMode,
};
use ohos_sys_opaque_types::OH_PixelmapNative;

#[repr(C)]
pub struct AbilityRuntime_StartOptions {
    _unused: [u8; 0],
}
extern "C" {
    /// Create start options.
    ///
    ///
    /// # Returns
    ///
    /// * Returns the newly created AbilityRuntime_StartOptions object.
    ///
    ///
    /// Available since API-level: 17
    #[cfg(feature = "api-17")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-17")))]
    pub fn OH_AbilityRuntime_CreateStartOptions() -> *mut AbilityRuntime_StartOptions;
    /// Destroy input start options.
    ///
    /// # Arguments
    ///
    /// * `startOptions` - The options to be deleted.
    ///
    /// # Returns
    ///
    /// * The error code.
    /// [`ABILITY_RUNTIME_ERROR_CODE_NO_ERROR`] if the operation is successful.
    /// [`ABILITY_RUNTIME_ERROR_CODE_PARAM_INVALID`] if the startOptions is invalid.
    ///
    /// Available since API-level: 17
    #[cfg(feature = "api-17")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-17")))]
    pub fn OH_AbilityRuntime_DestroyStartOptions(
        startOptions: *mut *mut AbilityRuntime_StartOptions,
    ) -> AbilityRuntimeResult;
    /// Set window mode for start options.
    ///
    /// # Arguments
    ///
    /// * `startOptions` - The options to set window mode for.
    ///
    /// * `windowMode` - The window mode.
    ///
    /// # Returns
    ///
    /// * The error code.
    /// [`ABILITY_RUNTIME_ERROR_CODE_NO_ERROR`] if the operation is successful.
    /// [`ABILITY_RUNTIME_ERROR_CODE_PARAM_INVALID`] if the startOptions or windowMode is invalid.
    ///
    /// Available since API-level: 17
    #[cfg(feature = "api-17")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-17")))]
    pub fn OH_AbilityRuntime_SetStartOptionsWindowMode(
        startOptions: *mut AbilityRuntime_StartOptions,
        windowMode: AbilityRuntime_WindowMode,
    ) -> AbilityRuntimeResult;
    /// Get window mode from start options.
    ///
    /// # Arguments
    ///
    /// * `startOptions` - The options to get window mode from.
    ///
    /// * `windowMode` - The obtained window mode.
    ///
    /// # Returns
    ///
    /// * The error code.
    /// [`ABILITY_RUNTIME_ERROR_CODE_NO_ERROR`] if the operation is successful.
    /// [`ABILITY_RUNTIME_ERROR_CODE_PARAM_INVALID`] if the startOptions is invalid.
    ///
    /// Available since API-level: 17
    #[cfg(feature = "api-17")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-17")))]
    pub fn OH_AbilityRuntime_GetStartOptionsWindowMode(
        startOptions: *mut AbilityRuntime_StartOptions,
        windowMode: *mut AbilityRuntime_WindowMode,
    ) -> AbilityRuntimeResult;
    /// Set display id for start options.
    ///
    /// # Arguments
    ///
    /// * `startOptions` - The options to set display id for.
    ///
    /// * `displayId` - The display id.
    ///
    /// # Returns
    ///
    /// * The error code.
    /// [`ABILITY_RUNTIME_ERROR_CODE_NO_ERROR`] if the operation is successful.
    /// [`ABILITY_RUNTIME_ERROR_CODE_PARAM_INVALID`] if the startOptions is invalid.
    ///
    /// Available since API-level: 17
    #[cfg(feature = "api-17")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-17")))]
    pub fn OH_AbilityRuntime_SetStartOptionsDisplayId(
        startOptions: *mut AbilityRuntime_StartOptions,
        displayId: i32,
    ) -> AbilityRuntimeResult;
    /// Get display id from start options.
    ///
    /// # Arguments
    ///
    /// * `startOptions` - The options to get display id from.
    ///
    /// * `displayId` - The obtained display id.
    ///
    /// # Returns
    ///
    /// * The error code.
    /// [`ABILITY_RUNTIME_ERROR_CODE_NO_ERROR`] if the operation is successful.
    /// [`ABILITY_RUNTIME_ERROR_CODE_PARAM_INVALID`] if the startOptions is invalid.
    ///
    /// Available since API-level: 17
    #[cfg(feature = "api-17")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-17")))]
    pub fn OH_AbilityRuntime_GetStartOptionsDisplayId(
        startOptions: *mut AbilityRuntime_StartOptions,
        displayId: *mut i32,
    ) -> AbilityRuntimeResult;
    /// Set with animation flag for start options.
    ///
    /// # Arguments
    ///
    /// * `startOptions` - The options to set with animation for.
    ///
    /// * `withAnimation` - The with animation.
    ///
    /// # Returns
    ///
    /// * The error code.
    /// [`ABILITY_RUNTIME_ERROR_CODE_NO_ERROR`] if the operation is successful.
    /// [`ABILITY_RUNTIME_ERROR_CODE_PARAM_INVALID`] if the startOptions is invalid.
    ///
    /// Available since API-level: 17
    #[cfg(feature = "api-17")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-17")))]
    pub fn OH_AbilityRuntime_SetStartOptionsWithAnimation(
        startOptions: *mut AbilityRuntime_StartOptions,
        withAnimation: bool,
    ) -> AbilityRuntimeResult;
    /// Get with animation from start options.
    ///
    /// # Arguments
    ///
    /// * `startOptions` - The options to get with animation from.
    ///
    /// * `withAnimation` - The obtained with animation.
    ///
    /// # Returns
    ///
    /// * The error code.
    /// [`ABILITY_RUNTIME_ERROR_CODE_NO_ERROR`] if the operation is successful.
    /// [`ABILITY_RUNTIME_ERROR_CODE_PARAM_INVALID`] if the startOptions is invalid.
    ///
    /// Available since API-level: 17
    #[cfg(feature = "api-17")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-17")))]
    pub fn OH_AbilityRuntime_GetStartOptionsWithAnimation(
        startOptions: *mut AbilityRuntime_StartOptions,
        withAnimation: *mut bool,
    ) -> AbilityRuntimeResult;
    /// Set window left for start options.
    ///
    /// # Arguments
    ///
    /// * `startOptions` - The options to set window left for.
    ///
    /// * `windowLeft` - The window left.
    ///
    /// # Returns
    ///
    /// * The error code.
    /// [`ABILITY_RUNTIME_ERROR_CODE_NO_ERROR`] if the operation is successful.
    /// [`ABILITY_RUNTIME_ERROR_CODE_PARAM_INVALID`] if the startOptions is invalid.
    ///
    /// Available since API-level: 17
    #[cfg(feature = "api-17")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-17")))]
    pub fn OH_AbilityRuntime_SetStartOptionsWindowLeft(
        startOptions: *mut AbilityRuntime_StartOptions,
        windowLeft: i32,
    ) -> AbilityRuntimeResult;
    /// Get window left from start options.
    ///
    /// # Arguments
    ///
    /// * `startOptions` - The options to get window left from.
    ///
    /// * `windowLeft` - The obtained window left.
    ///
    /// # Returns
    ///
    /// * The error code.
    /// [`ABILITY_RUNTIME_ERROR_CODE_NO_ERROR`] if the operation is successful.
    /// [`ABILITY_RUNTIME_ERROR_CODE_PARAM_INVALID`] if the startOptions is invalid.
    ///
    /// Available since API-level: 17
    #[cfg(feature = "api-17")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-17")))]
    pub fn OH_AbilityRuntime_GetStartOptionsWindowLeft(
        startOptions: *mut AbilityRuntime_StartOptions,
        windowLeft: *mut i32,
    ) -> AbilityRuntimeResult;
    /// Set window top for start options.
    ///
    /// # Arguments
    ///
    /// * `startOptions` - The options to set window top for.
    ///
    /// * `windowTop` - The window top.
    ///
    /// # Returns
    ///
    /// * The error code.
    /// [`ABILITY_RUNTIME_ERROR_CODE_NO_ERROR`] if the operation is successful.
    /// [`ABILITY_RUNTIME_ERROR_CODE_PARAM_INVALID`] if the startOptions is invalid.
    ///
    /// Available since API-level: 17
    #[cfg(feature = "api-17")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-17")))]
    pub fn OH_AbilityRuntime_SetStartOptionsWindowTop(
        startOptions: *mut AbilityRuntime_StartOptions,
        windowTop: i32,
    ) -> AbilityRuntimeResult;
    /// Get window top from start options.
    ///
    /// # Arguments
    ///
    /// * `startOptions` - The options to get window top from.
    ///
    /// * `windowTop` - The obtained window top.
    ///
    /// # Returns
    ///
    /// * The error code.
    /// [`ABILITY_RUNTIME_ERROR_CODE_NO_ERROR`] if the operation is successful.
    /// [`ABILITY_RUNTIME_ERROR_CODE_PARAM_INVALID`] if the startOptions is invalid.
    ///
    /// Available since API-level: 17
    #[cfg(feature = "api-17")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-17")))]
    pub fn OH_AbilityRuntime_GetStartOptionsWindowTop(
        startOptions: *mut AbilityRuntime_StartOptions,
        windowTop: *mut i32,
    ) -> AbilityRuntimeResult;
    /// Set window height for start options.
    ///
    /// # Arguments
    ///
    /// * `startOptions` - The options to set window height for.
    ///
    /// * `windowHeight` - The window height.
    ///
    /// # Returns
    ///
    /// * The error code.
    /// [`ABILITY_RUNTIME_ERROR_CODE_NO_ERROR`] if the operation is successful.
    /// [`ABILITY_RUNTIME_ERROR_CODE_PARAM_INVALID`] if the startOptions is invalid.
    ///
    /// Available since API-level: 17
    #[cfg(feature = "api-17")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-17")))]
    pub fn OH_AbilityRuntime_SetStartOptionsWindowHeight(
        startOptions: *mut AbilityRuntime_StartOptions,
        windowHeight: i32,
    ) -> AbilityRuntimeResult;
    /// Get window height from start options.
    ///
    /// # Arguments
    ///
    /// * `startOptions` - The options to get window height from.
    ///
    /// * `windowHeight` - The obtained window height.
    ///
    /// # Returns
    ///
    /// * The error code.
    /// [`ABILITY_RUNTIME_ERROR_CODE_NO_ERROR`] if the operation is successful.
    /// [`ABILITY_RUNTIME_ERROR_CODE_PARAM_INVALID`] if the startOptions is invalid.
    ///
    /// Available since API-level: 17
    #[cfg(feature = "api-17")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-17")))]
    pub fn OH_AbilityRuntime_GetStartOptionsWindowHeight(
        startOptions: *mut AbilityRuntime_StartOptions,
        windowHeight: *mut i32,
    ) -> AbilityRuntimeResult;
    /// Set window width for start options.
    ///
    /// # Arguments
    ///
    /// * `startOptions` - The options to set window width for.
    ///
    /// * `windowWidth` - The window width.
    ///
    /// # Returns
    ///
    /// * The error code.
    /// [`ABILITY_RUNTIME_ERROR_CODE_NO_ERROR`] if the operation is successful.
    /// [`ABILITY_RUNTIME_ERROR_CODE_PARAM_INVALID`] if the startOptions is invalid.
    ///
    /// Available since API-level: 17
    #[cfg(feature = "api-17")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-17")))]
    pub fn OH_AbilityRuntime_SetStartOptionsWindowWidth(
        startOptions: *mut AbilityRuntime_StartOptions,
        windowWidth: i32,
    ) -> AbilityRuntimeResult;
    /// Get window width from start options.
    ///
    /// # Arguments
    ///
    /// * `startOptions` - The options to get window width from.
    ///
    /// * `windowWidth` - The obtained window width.
    ///
    /// # Returns
    ///
    /// * The error code.
    /// [`ABILITY_RUNTIME_ERROR_CODE_NO_ERROR`] if the operation is successful.
    /// [`ABILITY_RUNTIME_ERROR_CODE_PARAM_INVALID`] if the startOptions is invalid.
    ///
    /// Available since API-level: 17
    #[cfg(feature = "api-17")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-17")))]
    pub fn OH_AbilityRuntime_GetStartOptionsWindowWidth(
        startOptions: *mut AbilityRuntime_StartOptions,
        windowWidth: *mut i32,
    ) -> AbilityRuntimeResult;
    /// Set start visibility for start options.
    ///
    /// # Arguments
    ///
    /// * `startOptions` - The options to set start visibility for.
    ///
    /// * `startVisibility` - The start visibility.
    ///
    /// # Returns
    ///
    /// * The error code.
    /// [`ABILITY_RUNTIME_ERROR_CODE_NO_ERROR`] if the operation is successful.
    /// [`ABILITY_RUNTIME_ERROR_CODE_PARAM_INVALID`] if the startOptions is invalid.
    ///
    /// Available since API-level: 17
    #[cfg(feature = "api-17")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-17")))]
    pub fn OH_AbilityRuntime_SetStartOptionsStartVisibility(
        startOptions: *mut AbilityRuntime_StartOptions,
        startVisibility: AbilityRuntime_StartVisibility,
    ) -> AbilityRuntimeResult;
    /// Get start visibility from start options.
    ///
    /// # Arguments
    ///
    /// * `startOptions` - The options to get start visibility from.
    ///
    /// * `startVisibility` - The obtained start visibility.
    ///
    /// # Returns
    ///
    /// * The error code.
    /// [`ABILITY_RUNTIME_ERROR_CODE_NO_ERROR`] if the operation is successful.
    /// [`ABILITY_RUNTIME_ERROR_CODE_PARAM_INVALID`] if the startOptions is invalid.
    ///
    /// Available since API-level: 17
    #[cfg(feature = "api-17")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-17")))]
    pub fn OH_AbilityRuntime_GetStartOptionsStartVisibility(
        startOptions: *mut AbilityRuntime_StartOptions,
        startVisibility: *mut AbilityRuntime_StartVisibility,
    ) -> AbilityRuntimeResult;
    /// Set start window icon for start options.
    ///
    /// # Arguments
    ///
    /// * `startOptions` - The options to set start window icon for.
    ///
    /// * `startWindowIcon` - The start window icon.
    ///
    /// # Returns
    ///
    /// * The error code.
    /// [`ABILITY_RUNTIME_ERROR_CODE_NO_ERROR`] if the operation is successful.
    /// [`ABILITY_RUNTIME_ERROR_CODE_PARAM_INVALID`] if the startOptions is invalid
    /// or startWindowIcon is nullptr.
    ///
    /// Available since API-level: 17
    #[cfg(feature = "api-17")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-17")))]
    pub fn OH_AbilityRuntime_SetStartOptionsStartWindowIcon(
        startOptions: *mut AbilityRuntime_StartOptions,
        startWindowIcon: *mut OH_PixelmapNative,
    ) -> AbilityRuntimeResult;
    /// Get start window icon from start options.
    ///
    /// # Arguments
    ///
    /// * `startOptions` - The options to get start window icon from.
    ///
    /// * `startWindowIcon` - The obtained start window icon.
    ///
    /// # Returns
    ///
    /// * The error code.
    /// [`ABILITY_RUNTIME_ERROR_CODE_NO_ERROR`] if the operation is successful.
    /// [`ABILITY_RUNTIME_ERROR_CODE_PARAM_INVALID`] if the startOptions is invalid
    /// or startWindowIcon is NOT nullptr.
    ///
    /// Available since API-level: 17
    #[cfg(feature = "api-17")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-17")))]
    pub fn OH_AbilityRuntime_GetStartOptionsStartWindowIcon(
        startOptions: *mut AbilityRuntime_StartOptions,
        startWindowIcon: *mut *mut OH_PixelmapNative,
    ) -> AbilityRuntimeResult;
    /// Set start window background color for start options.
    ///
    /// # Arguments
    ///
    /// * `startOptions` - The options to set start window background color for.
    ///
    /// * `startWindowBackgroundColor` - The start window background color.
    ///
    /// # Returns
    ///
    /// * The error code.
    /// [`ABILITY_RUNTIME_ERROR_CODE_NO_ERROR`] if the operation is successful.
    /// [`ABILITY_RUNTIME_ERROR_CODE_PARAM_INVALID`] if the startOptions is invalid
    /// or startWindowBackgroundColor is nullptr.
    ///
    /// Available since API-level: 17
    #[cfg(feature = "api-17")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-17")))]
    pub fn OH_AbilityRuntime_SetStartOptionsStartWindowBackgroundColor(
        startOptions: *mut AbilityRuntime_StartOptions,
        startWindowBackgroundColor: *const ::core::ffi::c_char,
    ) -> AbilityRuntimeResult;
    /// Get start window background color from start options.
    ///
    /// # Arguments
    ///
    /// * `startOptions` - The options to get start window background color from.
    ///
    /// * `startWindowBackgroundColor` - The obtained start window background color.
    ///
    /// * `size` - The size of start window background color.
    ///
    /// # Returns
    ///
    /// * The error code.
    /// [`ABILITY_RUNTIME_ERROR_CODE_NO_ERROR`] if the operation is successful.
    /// [`ABILITY_RUNTIME_ERROR_CODE_PARAM_INVALID`] if the startOptions is invalid
    /// or startWindowBackgroundColor is NOT nullptr.
    /// [`ABILITY_RUNTIME_ERROR_CODE_INTERNAL`] if error occurred in malloc.
    ///
    /// Available since API-level: 17
    #[cfg(feature = "api-17")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-17")))]
    pub fn OH_AbilityRuntime_GetStartOptionsStartWindowBackgroundColor(
        startOptions: *mut AbilityRuntime_StartOptions,
        startWindowBackgroundColor: *mut *mut ::core::ffi::c_char,
        size: *mut usize,
    ) -> AbilityRuntimeResult;
    /// Set start window modes for start options.
    ///
    /// # Arguments
    ///
    /// * `startOptions` - The options to set start window modes for.
    ///
    /// * `supportedWindowModes` - The start window modes.
    ///
    /// * `size` - The size of start window modes.
    ///
    /// # Returns
    ///
    /// * The error code.
    /// [`ABILITY_RUNTIME_ERROR_CODE_NO_ERROR`] if the operation is successful.
    /// [`ABILITY_RUNTIME_ERROR_CODE_PARAM_INVALID`] if the startOptions or supportWindowMode
    /// or size is invalid.
    ///
    /// Available since API-level: 17
    #[cfg(feature = "api-17")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-17")))]
    pub fn OH_AbilityRuntime_SetStartOptionsSupportedWindowModes(
        startOptions: *mut AbilityRuntime_StartOptions,
        supportedWindowModes: *mut AbilityRuntime_SupportedWindowMode,
        size: usize,
    ) -> AbilityRuntimeResult;
    /// Get start window modes from start options.
    ///
    /// # Arguments
    ///
    /// * `startOptions` - The options to get start window modes from.
    ///
    /// * `supportedWindowModes` - The obtained start window modes.
    ///
    /// * `size` - The size of the returned start window modes.
    ///
    /// # Returns
    ///
    /// * The error code.
    /// [`ABILITY_RUNTIME_ERROR_CODE_NO_ERROR`] if the operation is successful.
    /// [`ABILITY_RUNTIME_ERROR_CODE_PARAM_INVALID`] if the startOptions is invallid
    /// or supportWindowMode is NOT nullptr
    /// [`ABILITY_RUNTIME_ERROR_CODE_INTERNAL`] if error occurred in malloc.
    ///
    /// Available since API-level: 17
    #[cfg(feature = "api-17")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-17")))]
    pub fn OH_AbilityRuntime_GetStartOptionsSupportedWindowModes(
        startOptions: *mut AbilityRuntime_StartOptions,
        supportedWindowModes: *mut *mut AbilityRuntime_SupportedWindowMode,
        size: *mut usize,
    ) -> AbilityRuntimeResult;
    /// Set min window width for start options.
    ///
    /// # Arguments
    ///
    /// * `startOptions` - The options to set min window width for.
    ///
    /// * `minWindowWidth` - The min window width.
    ///
    /// # Returns
    ///
    /// * The error code.
    /// [`ABILITY_RUNTIME_ERROR_CODE_NO_ERROR`] if the operation is successful.
    /// [`ABILITY_RUNTIME_ERROR_CODE_PARAM_INVALID`] if the startOptions is invalid.
    ///
    /// Available since API-level: 17
    #[cfg(feature = "api-17")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-17")))]
    pub fn OH_AbilityRuntime_SetStartOptionsMinWindowWidth(
        startOptions: *mut AbilityRuntime_StartOptions,
        minWindowWidth: i32,
    ) -> AbilityRuntimeResult;
    /// Get min window width from start options.
    ///
    /// # Arguments
    ///
    /// * `startOptions` - The options to get min window width from.
    ///
    /// * `minWindowWidth` - The obtained min window width.
    ///
    /// # Returns
    ///
    /// * The error code.
    /// [`ABILITY_RUNTIME_ERROR_CODE_NO_ERROR`] if the operation is successful.
    /// [`ABILITY_RUNTIME_ERROR_CODE_PARAM_INVALID`] if the startOptions is invalid.
    ///
    /// Available since API-level: 17
    #[cfg(feature = "api-17")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-17")))]
    pub fn OH_AbilityRuntime_GetStartOptionsMinWindowWidth(
        startOptions: *mut AbilityRuntime_StartOptions,
        minWindowWidth: *mut i32,
    ) -> AbilityRuntimeResult;
    /// Set max window width for start options.
    ///
    /// # Arguments
    ///
    /// * `startOptions` - The options to set max window width for.
    ///
    /// * `maxWindowWidth` - The max window width.
    ///
    /// # Returns
    ///
    /// * The error code.
    /// [`ABILITY_RUNTIME_ERROR_CODE_NO_ERROR`] if the operation is successful.
    /// [`ABILITY_RUNTIME_ERROR_CODE_PARAM_INVALID`] if the startOptions is invalid.
    ///
    /// Available since API-level: 17
    #[cfg(feature = "api-17")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-17")))]
    pub fn OH_AbilityRuntime_SetStartOptionsMaxWindowWidth(
        startOptions: *mut AbilityRuntime_StartOptions,
        maxWindowWidth: i32,
    ) -> AbilityRuntimeResult;
    /// Get max window width from start options.
    ///
    /// # Arguments
    ///
    /// * `startOptions` - The options to get max window width from.
    ///
    /// * `maxWindowWidth` - The obtained max window width.
    ///
    /// # Returns
    ///
    /// * The error code.
    /// [`ABILITY_RUNTIME_ERROR_CODE_NO_ERROR`] if the operation is successful.
    /// [`ABILITY_RUNTIME_ERROR_CODE_PARAM_INVALID`] if the startOptions is invalid.
    ///
    /// Available since API-level: 17
    #[cfg(feature = "api-17")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-17")))]
    pub fn OH_AbilityRuntime_GetStartOptionsMaxWindowWidth(
        startOptions: *mut AbilityRuntime_StartOptions,
        maxWindowWidth: *mut i32,
    ) -> AbilityRuntimeResult;
    /// Set min window height for start options.
    ///
    /// # Arguments
    ///
    /// * `startOptions` - The options to set min window height for.
    ///
    /// * `minWindowHeight` - The min window height.
    ///
    /// # Returns
    ///
    /// * The error code.
    /// [`ABILITY_RUNTIME_ERROR_CODE_NO_ERROR`] if the operation is successful.
    /// [`ABILITY_RUNTIME_ERROR_CODE_PARAM_INVALID`] if the startOptions is invalid.
    ///
    /// Available since API-level: 17
    #[cfg(feature = "api-17")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-17")))]
    pub fn OH_AbilityRuntime_SetStartOptionsMinWindowHeight(
        startOptions: *mut AbilityRuntime_StartOptions,
        minWindowHeight: i32,
    ) -> AbilityRuntimeResult;
    /// Get min window height from start options.
    ///
    /// # Arguments
    ///
    /// * `startOptions` - The options to get min window height from.
    ///
    /// * `minWindowHeight` - The obtained min window height.
    ///
    /// # Returns
    ///
    /// * The error code.
    /// [`ABILITY_RUNTIME_ERROR_CODE_NO_ERROR`] if the operation is successful.
    /// [`ABILITY_RUNTIME_ERROR_CODE_PARAM_INVALID`] if the startOptions is invalid.
    ///
    /// Available since API-level: 17
    #[cfg(feature = "api-17")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-17")))]
    pub fn OH_AbilityRuntime_GetStartOptionsMinWindowHeight(
        startOptions: *mut AbilityRuntime_StartOptions,
        minWindowHeight: *mut i32,
    ) -> AbilityRuntimeResult;
    /// Set max window height for start options.
    ///
    /// # Arguments
    ///
    /// * `startOptions` - The options to set max window height for.
    ///
    /// * `maxWindowHeight` - The max window height.
    ///
    /// # Returns
    ///
    /// * The error code.
    /// [`ABILITY_RUNTIME_ERROR_CODE_NO_ERROR`] if the operation is successful.
    /// [`ABILITY_RUNTIME_ERROR_CODE_PARAM_INVALID`] if the startOptions is invalid.
    ///
    /// Available since API-level: 17
    #[cfg(feature = "api-17")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-17")))]
    pub fn OH_AbilityRuntime_SetStartOptionsMaxWindowHeight(
        startOptions: *mut AbilityRuntime_StartOptions,
        maxWindowHeight: i32,
    ) -> AbilityRuntimeResult;
    /// Get max window height from start options.
    ///
    /// # Arguments
    ///
    /// * `startOptions` - The options to get max window height from.
    ///
    /// * `maxWindowHeight` - The obtained max window height.
    ///
    /// # Returns
    ///
    /// * The error code.
    /// [`ABILITY_RUNTIME_ERROR_CODE_NO_ERROR`] if the operation is successful.
    /// [`ABILITY_RUNTIME_ERROR_CODE_PARAM_INVALID`] if the startOptions is invalid.
    ///
    /// Available since API-level: 17
    #[cfg(feature = "api-17")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-17")))]
    pub fn OH_AbilityRuntime_GetStartOptionsMaxWindowHeight(
        startOptions: *mut AbilityRuntime_StartOptions,
        maxWindowHeight: *mut i32,
    ) -> AbilityRuntimeResult;
}
