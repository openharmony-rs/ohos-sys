// automatically generated by rust-bindgen 0.71.1

#![allow(non_upper_case_globals)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
use crate::native_image::common::*;
use ohos_sys_opaque_types::OH_NativeBuffer;

/// Defines an <b>OH_ImageNative</b> object.
///
///
/// Available since API-level: 12
#[cfg(feature = "api-12")]
#[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
#[repr(C)]
pub struct OH_ImageNative {
    _unused: [u8; 0],
}
extern "C" {
    /// Obtains [`Image_Size`] of an [`OH_ImageNative`] object.
    ///
    /// # Arguments
    ///
    /// * `image` - Indicates the pointer to an [`OH_ImageNative`] object.
    ///
    /// * `size` - Indicates the pointer to the [`Image_Size`] object obtained.
    ///
    /// # Returns
    ///
    /// * Returns [`Image_ErrorCode`] IMAGE_SUCCESS - if the operation is successful.
    /// returns [`Image_ErrorCode`] IMAGE_BAD_PARAMETER - if invalid parameter.
    /// returns [`Image_ErrorCode`] IMAGE_UNKNOWN_ERROR - inner unknown error.
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_ImageNative_GetImageSize(
        image: *mut OH_ImageNative,
        size: *mut Image_Size,
    ) -> ImageResult;
    /// Get type arry from an [`OH_ImageNative`] object.
    ///
    /// # Arguments
    ///
    /// * `image` - Indicates the pointer to an [`OH_ImageNative`] object.
    ///
    /// * `types` - Indicates the pointer to an [`OH_ImageNative`] component arry obtained.
    ///
    /// * `typeSize` - Indicates the pointer to the [`OH_ImageNative`] component arry size obtained.
    ///
    /// # Returns
    ///
    /// * Returns [`Image_ErrorCode`] IMAGE_SUCCESS - if the operation is successful.
    /// returns [`Image_ErrorCode`] IMAGE_BAD_PARAMETER - if bad parameter.
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_ImageNative_GetComponentTypes(
        image: *mut OH_ImageNative,
        types: *mut *mut u32,
        typeSize: *mut usize,
    ) -> ImageResult;
    /// Get byte buffer from an [`OH_ImageNative`] object by the component type.
    ///
    /// # Arguments
    ///
    /// * `image` - Indicates the pointer to an [`OH_ImageNative`] object.
    ///
    /// * `componentType` - Indicates the type of component.
    ///
    /// * `nativeBuffer` - Indicates the pointer to the component buffer obtained.
    ///
    /// # Returns
    ///
    /// * Returns [`Image_ErrorCode`] IMAGE_SUCCESS - if the operation is successful.
    /// returns [`Image_ErrorCode`] IMAGE_BAD_PARAMETER - if bad parameter.
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_ImageNative_GetByteBuffer(
        image: *mut OH_ImageNative,
        componentType: u32,
        nativeBuffer: *mut *mut OH_NativeBuffer,
    ) -> ImageResult;
    /// Get size of buffer from an [`OH_ImageNative`] object by the component type.
    ///
    /// # Arguments
    ///
    /// * `image` - Indicates the pointer to an [`OH_ImageNative`] object.
    ///
    /// * `componentType` - Indicates the type of component.
    ///
    /// * `size` - Indicates the pointer to the size of buffer obtained.
    ///
    /// # Returns
    ///
    /// * Returns [`Image_ErrorCode`] IMAGE_SUCCESS - if the operation is successful.
    /// returns [`Image_ErrorCode`] IMAGE_BAD_PARAMETER - if bad parameter.
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_ImageNative_GetBufferSize(
        image: *mut OH_ImageNative,
        componentType: u32,
        size: *mut usize,
    ) -> ImageResult;
    /// Get row stride from an [`OH_ImageNative`] object by the component type.
    ///
    /// # Arguments
    ///
    /// * `image` - Indicates the pointer to an [`OH_ImageNative`] object.
    ///
    /// * `componentType` - Indicates the type of component.
    ///
    /// * `rowStride` - Indicates the pointer to the row stride obtained.
    ///
    /// # Returns
    ///
    /// * Returns [`Image_ErrorCode`] IMAGE_SUCCESS - if the operation is successful.
    /// returns [`Image_ErrorCode`] IMAGE_BAD_PARAMETER - if bad parameter.
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_ImageNative_GetRowStride(
        image: *mut OH_ImageNative,
        componentType: u32,
        rowStride: *mut i32,
    ) -> ImageResult;
    /// Get pixel stride from an [`OH_ImageNative`] object by the component type.
    ///
    /// # Arguments
    ///
    /// * `image` - Indicates the pointer to an [`OH_ImageNative`] object.
    ///
    /// * `componentType` - Indicates the type of component.
    ///
    /// * `pixelStride` - Indicates the pointer to the pixel stride obtained.
    ///
    /// # Returns
    ///
    /// * Returns [`Image_ErrorCode`] IMAGE_SUCCESS - if the operation is successful.
    /// returns [`Image_ErrorCode`] IMAGE_BAD_PARAMETER - if bad parameter.
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_ImageNative_GetPixelStride(
        image: *mut OH_ImageNative,
        componentType: u32,
        pixelStride: *mut i32,
    ) -> ImageResult;
    /// Get timestamp from an [`OH_ImageNative`] object.
    ///
    /// # Arguments
    ///
    /// * `image` - Indicates the pointer to an [`OH_ImageNative`] object.
    ///
    /// * `timestamp` - Indicates the pointer to the timestamp obtained.
    ///
    /// # Returns
    ///
    /// * Image functions result code.
    /// [`IMAGE_SUCCESS`] if the operation is successful.
    /// [`IMAGE_BAD_PARAMETER`] if the input parameter is invalid.
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_ImageNative_GetTimestamp(
        image: *mut OH_ImageNative,
        timestamp: *mut i64,
    ) -> ImageResult;
    /// Releases an [`OH_ImageNative`] object.
    /// It is used to release the object [`OH_ImageNative`].
    ///
    /// # Arguments
    ///
    /// * `image` - Indicates the pointer to an [`OH_ImageNative`] object.
    ///
    /// # Returns
    ///
    /// * Returns [`Image_ErrorCode`] IMAGE_SUCCESS - if the operation is successful.
    /// returns [`Image_ErrorCode`] IMAGE_BAD_PARAMETER - if bad parameter.
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_ImageNative_Release(image: *mut OH_ImageNative) -> ImageResult;
}
