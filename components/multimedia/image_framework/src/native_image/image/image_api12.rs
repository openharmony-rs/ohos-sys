/* automatically generated by rust-bindgen 0.70.1 */

#![allow(non_upper_case_globals)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
use crate::native_image::common::*;

/** @brief Defines an <b>OH_ImageNative</b> object.

@since 12*/
#[repr(C)]
pub struct OH_ImageNative {
    _unused: [u8; 0],
}
extern "C" {
    /** @brief Obtains {@link Image_Size} of an {@link OH_ImageNative} object.

    @param image Indicates the pointer to an {@link OH_ImageNative} object.
    @param size Indicates the pointer to the {@link Image_Size} object obtained.
    @return Returns {@link Image_ErrorCode} IMAGE_SUCCESS - if the operation is successful.
    returns {@link Image_ErrorCode} IMAGE_BAD_PARAMETER - if invalid parameter.
    returns {@link Image_ErrorCode} IMAGE_UNKNOWN_ERROR - inner unknown error.
    @since 12*/
    pub fn OH_ImageNative_GetImageSize(
        image: *mut OH_ImageNative,
        size: *mut Image_Size,
    ) -> Image_ErrorCode;
    /** @brief Get type arry from an {@link OH_ImageNative} object.

    @param image Indicates the pointer to an {@link OH_ImageNative} object.
    @param types Indicates the pointer to an {@link OH_ImageNative} component arry obtained.
    @param typeSize Indicates the pointer to the {@link OH_ImageNative} component arry size obtained.
    @return Returns {@link Image_ErrorCode} IMAGE_SUCCESS - if the operation is successful.
    returns {@link Image_ErrorCode} IMAGE_BAD_PARAMETER - if bad parameter.
    @since 12*/
    pub fn OH_ImageNative_GetComponentTypes(
        image: *mut OH_ImageNative,
        types: *mut *mut u32,
        typeSize: *mut usize,
    ) -> Image_ErrorCode;
    /** @brief Get size of buffer from an {@link OH_ImageNative} object by the component type.

    @param image Indicates the pointer to an {@link OH_ImageNative} object.
    @param componentType Indicates the type of component.
    @param size Indicates the pointer to the size of buffer obtained.
    @return Returns {@link Image_ErrorCode} IMAGE_SUCCESS - if the operation is successful.
    returns {@link Image_ErrorCode} IMAGE_BAD_PARAMETER - if bad parameter.
    @since 12*/
    pub fn OH_ImageNative_GetBufferSize(
        image: *mut OH_ImageNative,
        componentType: u32,
        size: *mut usize,
    ) -> Image_ErrorCode;
    /** @brief Get row stride from an {@link OH_ImageNative} object by the component type.

    @param image Indicates the pointer to an {@link OH_ImageNative} object.
    @param componentType Indicates the type of component.
    @param rowStride Indicates the pointer to the row stride obtained.
    @return Returns {@link Image_ErrorCode} IMAGE_SUCCESS - if the operation is successful.
    returns {@link Image_ErrorCode} IMAGE_BAD_PARAMETER - if bad parameter.
    @since 12*/
    pub fn OH_ImageNative_GetRowStride(
        image: *mut OH_ImageNative,
        componentType: u32,
        rowStride: *mut i32,
    ) -> Image_ErrorCode;
    /** @brief Get pixel stride from an {@link OH_ImageNative} object by the component type.

    @param image Indicates the pointer to an {@link OH_ImageNative} object.
    @param componentType Indicates the type of component.
    @param pixelStride Indicates the pointer to the pixel stride obtained.
    @return Returns {@link Image_ErrorCode} IMAGE_SUCCESS - if the operation is successful.
    returns {@link Image_ErrorCode} IMAGE_BAD_PARAMETER - if bad parameter.
    @since 12*/
    pub fn OH_ImageNative_GetPixelStride(
        image: *mut OH_ImageNative,
        componentType: u32,
        pixelStride: *mut i32,
    ) -> Image_ErrorCode;
    /** @brief Get timestamp from an {@link OH_ImageNative} object.

    @param image Indicates the pointer to an {@link OH_ImageNative} object.
    @param timestamp Indicates the pointer to the timestamp obtained.
    @return Image functions result code.
            {@link IMAGE_SUCCESS} if the operation is successful.
            {@link IMAGE_BAD_PARAMETER} if the input parameter is invalid.
    @since 12*/
    pub fn OH_ImageNative_GetTimestamp(
        image: *mut OH_ImageNative,
        timestamp: *mut i64,
    ) -> Image_ErrorCode;
    /** @brief Releases an {@link OH_ImageNative} object.
    It is used to release the object {@link OH_ImageNative}.

    @param image Indicates the pointer to an {@link OH_ImageNative} object.
    @return Returns {@link Image_ErrorCode} IMAGE_SUCCESS - if the operation is successful.
    returns {@link Image_ErrorCode} IMAGE_BAD_PARAMETER - if bad parameter.
    @since 12*/
    pub fn OH_ImageNative_Release(image: *mut OH_ImageNative) -> Image_ErrorCode;
}
