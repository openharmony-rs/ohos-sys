// automatically generated by rust-bindgen 0.71.1

#![allow(non_upper_case_globals)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
use crate::native_image::common::*;
use crate::native_image::image::OH_ImageNative;

/// Defines an <b>OH_ImageReceiverNative</b> object.
///
///
/// Available since API-level: 12
#[cfg(feature = "api-12")]
#[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
#[repr(C)]
pub struct OH_ImageReceiverNative {
    _unused: [u8; 0],
}
/// Defines an image receiver options object.
///
///
/// Available since API-level: 12
#[cfg(feature = "api-12")]
#[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
#[repr(C)]
pub struct OH_ImageReceiverOptions {
    _unused: [u8; 0],
}
/// Defines the callbacks for images.
///
///
/// Available since API-level: 12
#[cfg(feature = "api-12")]
#[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
pub type OH_ImageReceiver_OnCallback =
    ::core::option::Option<unsafe extern "C" fn(receiver: *mut OH_ImageReceiverNative)>;
extern "C" {
    /// Creates an <b>OH_ImageReceiverOptions</b> object at the application layer.
    ///
    /// # Arguments
    ///
    /// * `options` - Indicates the pointer to the <b>OH_ImageReceiverOptions</b> object obtained.
    ///
    /// # Returns
    ///
    /// * Returns [`Image_ErrorCode`] IMAGE_SUCCESS - if the operation is successful.
    /// returns [`Image_ErrorCode`] IMAGE_BAD_PARAMETER - if bad parameter.
    /// returns [`Image_ErrorCode`] IMAGE_ALLOC_FAILED - if alloc failed.
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_ImageReceiverOptions_Create(
        options: *mut *mut OH_ImageReceiverOptions,
    ) -> ImageResult;
    /// Get size of an [`OH_ImageReceiverOptions`] object.
    ///
    /// # Arguments
    ///
    /// * `options` - Indicates the pointer to an [`OH_ImageReceiverOptions`] object.
    ///
    /// * `size` - Indicates the value of the [`Image_Size`] object will be obtained.
    ///
    /// # Returns
    ///
    /// * Returns [`Image_ErrorCode`] IMAGE_SUCCESS - if the operation is successful.
    /// returns [`Image_ErrorCode`] IMAGE_BAD_PARAMETER - if bad parameter.
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_ImageReceiverOptions_GetSize(
        options: *mut OH_ImageReceiverOptions,
        size: *mut Image_Size,
    ) -> ImageResult;
    /// Set size of an [`OH_ImageReceiverOptions`] object.
    ///
    /// # Arguments
    ///
    /// * `options` - Indicates the pointer to an [`OH_ImageReceiverOptions`] object.
    ///
    /// * `size` - Indicates the value of the [`Image_Size`] object will be seted.
    ///
    /// # Returns
    ///
    /// * Returns [`Image_ErrorCode`] IMAGE_SUCCESS - if the operation is successful.
    /// returns [`Image_ErrorCode`] IMAGE_BAD_PARAMETER - if bad parameter.
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_ImageReceiverOptions_SetSize(
        options: *mut OH_ImageReceiverOptions,
        size: Image_Size,
    ) -> ImageResult;
    /// Get capacity from an [`OH_ImageReceiverOptions`] object.
    ///
    /// # Arguments
    ///
    /// * `options` - Indicates the pointer to an [`OH_ImageReceiverOptions`] object.
    ///
    /// * `capacity` - Indicates the pointer to capacity will be obtained.
    ///
    /// # Returns
    ///
    /// * Returns [`Image_ErrorCode`] IMAGE_SUCCESS - if the operation is successful.
    /// returns [`Image_ErrorCode`] IMAGE_BAD_PARAMETER - if bad parameter.
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_ImageReceiverOptions_GetCapacity(
        options: *mut OH_ImageReceiverOptions,
        capacity: *mut i32,
    ) -> ImageResult;
    /// Set capacity of an [`OH_ImageReceiverOptions`] object.
    ///
    /// # Arguments
    ///
    /// * `options` - Indicates the pointer to an [`OH_ImageReceiverOptions`] object.
    ///
    /// * `capacity` - Indicates the value of capacity will be seted.
    ///
    /// # Returns
    ///
    /// * Returns [`Image_ErrorCode`] IMAGE_SUCCESS - if the operation is successful.
    /// returns [`Image_ErrorCode`] IMAGE_BAD_PARAMETER - if bad parameter.
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_ImageReceiverOptions_SetCapacity(
        options: *mut OH_ImageReceiverOptions,
        capacity: i32,
    ) -> ImageResult;
    /// Releases an [`OH_ImageReceiverOptions`] object.
    /// It is used to release the object [`OH_ImageReceiverOptions`].
    ///
    /// # Arguments
    ///
    /// * `options` - Indicates the pointer to an [`OH_ImageReceiverOptions`] object.
    ///
    /// # Returns
    ///
    /// * Returns [`Image_ErrorCode`] IMAGE_SUCCESS - if the operation is successful.
    /// returns [`Image_ErrorCode`] IMAGE_BAD_PARAMETER - if bad parameter.
    /// [`OH_ImageReceiverOptions`]
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_ImageReceiverOptions_Release(options: *mut OH_ImageReceiverOptions) -> ImageResult;
    /// Creates an <b>OH_ImageReceiverNative</b> object at the application layer.
    ///
    /// # Arguments
    ///
    /// * `options` - Indicates the options for setting the <b>OH_ImageReceiverNative</b> object.
    ///
    /// * `receiver` - Indicates the pointer to the <b>OH_ImageReceiverNative</b> object obtained.
    ///
    /// # Returns
    ///
    /// * Returns [`Image_ErrorCode`] IMAGE_SUCCESS - if the operation is successful.
    /// returns [`Image_ErrorCode`] IMAGE_BAD_PARAMETER - if bad parameter.
    /// returns [`Image_ErrorCode`] IMAGE_ALLOC_FAILED - if alloc failed.
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_ImageReceiverNative_Create(
        options: *mut OH_ImageReceiverOptions,
        receiver: *mut *mut OH_ImageReceiverNative,
    ) -> ImageResult;
    /// Obtains the receiver ID through an [`OH_ImageReceiverNative`] object.
    ///
    /// # Arguments
    ///
    /// * `receiver` - Indicates the pointer to an [`OH_ImageReceiverNative`] object.
    ///
    /// * `surfaceId` - Indicates the pointer to the surfaceID will be obtained.
    ///
    /// # Returns
    ///
    /// * Returns [`Image_ErrorCode`] IMAGE_SUCCESS - if the operation is successful.
    /// returns [`Image_ErrorCode`] IMAGE_BAD_PARAMETER - if bad parameter.
    /// returns [`Image_ErrorCode`] IMAGE_UNKNOWN_ERROR - inner unknown error.
    /// [`OH_ImageReceiverNative`]
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_ImageReceiverNative_GetReceivingSurfaceId(
        receiver: *mut OH_ImageReceiverNative,
        surfaceId: *mut u64,
    ) -> ImageResult;
    /// Obtains the latest image through an [`OH_ImageReceiverNative`] object.
    ///
    /// # Arguments
    ///
    /// * `receiver` - Indicates the pointer to an [`OH_ImageReceiverNative`] object.
    ///
    /// * `image` - Indicates the pointer to an <b>OH_ImageNative</b> object at the application layer.
    ///
    /// # Returns
    ///
    /// * Returns [`Image_ErrorCode`] IMAGE_SUCCESS - if the operation is successful.
    /// returns [`Image_ErrorCode`] IMAGE_BAD_PARAMETER - if bad parameter.
    /// returns [`Image_ErrorCode`] IMAGE_UNKNOWN_ERROR - inner unknown error.
    /// returns [`Image_ErrorCode`] IMAGE_ALLOC_FAILED - if alloc failed.
    /// [`OH_ImageReceiverNative,`] OH_ImageNative
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_ImageReceiverNative_ReadLatestImage(
        receiver: *mut OH_ImageReceiverNative,
        image: *mut *mut OH_ImageNative,
    ) -> ImageResult;
    /// Obtains the next image through an [`OH_ImageReceiverNative`] object.
    ///
    /// # Arguments
    ///
    /// * `receiver` - Indicates the pointer to an [`OH_ImageReceiverNative`] object.
    ///
    /// * `image` - Indicates the pointer to an <b>OH_ImageNative</b> object at the application layer.
    ///
    /// # Returns
    ///
    /// * Returns [`Image_ErrorCode`] IMAGE_SUCCESS - if the operation is successful.
    /// returns [`Image_ErrorCode`] IMAGE_BAD_PARAMETER - if bad parameter.
    /// returns [`Image_ErrorCode`] IMAGE_UNKNOWN_ERROR - inner unknown error.
    /// returns [`Image_ErrorCode`] IMAGE_ALLOC_FAILED - if alloc failed.
    /// [`OH_ImageReceiverNative,`] OH_ImageNative
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_ImageReceiverNative_ReadNextImage(
        receiver: *mut OH_ImageReceiverNative,
        image: *mut *mut OH_ImageNative,
    ) -> ImageResult;
    /// Registers an [`OH_ImageReceiver_OnCallback`] callback event.
    ///
    /// This callback event is triggered whenever a new image is received.
    ///
    /// # Arguments
    ///
    /// * `receiver` - Indicates the pointer to an [`OH_ImageReceiverNative`] object.
    ///
    /// * `callback` - Indicates the [`OH_ImageReceiver_OnCallback`] callback event to register.
    ///
    /// # Returns
    ///
    /// * Returns [`Image_ErrorCode`] IMAGE_SUCCESS - if the operation is successful.
    /// returns [`Image_ErrorCode`] IMAGE_BAD_PARAMETER - if bad parameter.
    /// [`OH_ImageReceiverNative,`] OH_ImageReceiver_OnCallback
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_ImageReceiverNative_On(
        receiver: *mut OH_ImageReceiverNative,
        callback: OH_ImageReceiver_OnCallback,
    ) -> ImageResult;
    /// Unregisters the [`OH_ImageReceiver_OnCallback`] callback event.
    ///
    /// Turn off the callback witch triggered by [`OH_ImageReceiverNative_On`].
    ///
    /// # Arguments
    ///
    /// * `receiver` - Indicates the pointer to an [`OH_ImageReceiverNative`] object.
    ///
    /// # Returns
    ///
    /// * Returns [`Image_ErrorCode`] IMAGE_SUCCESS - if the operation is successful.
    /// returns [`Image_ErrorCode`] IMAGE_BAD_PARAMETER - if bad parameter.
    /// [`OH_ImageReceiverNative,`] OH_ImageReceiverNative_On
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_ImageReceiverNative_Off(receiver: *mut OH_ImageReceiverNative) -> ImageResult;
    /// Obtains the size of the image receiver through an [`OH_ImageReceiverNative`] object.
    ///
    /// # Arguments
    ///
    /// * `receiver` - Indicates the pointer to an [`OH_ImageReceiverNative`] object.
    ///
    /// * `size` - Indicates the pointer to the [`Image_Size`] object will be obtained.
    ///
    /// # Returns
    ///
    /// * Returns [`Image_ErrorCode`] IMAGE_SUCCESS - if the operation is successful.
    /// returns [`Image_ErrorCode`] IMAGE_BAD_PARAMETER - if bad parameter.
    /// [`OH_ImageReceiverNative,`] Image_Size
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_ImageReceiverNative_GetSize(
        receiver: *mut OH_ImageReceiverNative,
        size: *mut Image_Size,
    ) -> ImageResult;
    /// Obtains the capacity of the image receiver through an [`OH_ImageReceiverNative`] object.
    ///
    /// # Arguments
    ///
    /// * `receiver` - Indicates the pointer to an [`OH_ImageReceiverNative`] object.
    ///
    /// * `capacity` - Indicates the pointer to the capacity will be obtained.
    ///
    /// # Returns
    ///
    /// * Returns [`Image_ErrorCode`] IMAGE_SUCCESS - if the operation is successful.
    /// returns [`Image_ErrorCode`] IMAGE_BAD_PARAMETER - if bad parameter.
    /// [`OH_ImageReceiverNative`]
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_ImageReceiverNative_GetCapacity(
        receiver: *mut OH_ImageReceiverNative,
        capacity: *mut i32,
    ) -> ImageResult;
    /// Releases an [`OH_ImageReceiverNative`] object.
    ///
    /// This API is not used to release an <b>ImageReceiver2</b> object at the application layer.
    ///
    /// # Arguments
    ///
    /// * `receiver` - Indicates the pointer to an [`OH_ImageReceiverNative`] object.
    ///
    /// # Returns
    ///
    /// * Returns [`Image_ErrorCode`] IMAGE_SUCCESS - if the operation is successful.
    /// returns [`Image_ErrorCode`] IMAGE_BAD_PARAMETER - if bad parameter.
    /// [`OH_ImageReceiverNative`]
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_ImageReceiverNative_Release(receiver: *mut OH_ImageReceiverNative) -> ImageResult;
}
