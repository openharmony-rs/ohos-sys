/* automatically generated by rust-bindgen 0.71.1 */

#![allow(non_upper_case_globals)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
use crate::native_image::common::*;
use crate::native_image::image::OH_ImageNative;

/** @brief Defines an <b>OH_ImageReceiverNative</b> object.

@since 12*/
#[cfg(feature = "api-12")]
#[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
#[repr(C)]
pub struct OH_ImageReceiverNative {
    _unused: [u8; 0],
}
/** @brief Defines an image receiver options object.

@since 12*/
#[cfg(feature = "api-12")]
#[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
#[repr(C)]
pub struct OH_ImageReceiverOptions {
    _unused: [u8; 0],
}
/** @brief Defines the callbacks for images.

@since 12*/
#[cfg(feature = "api-12")]
#[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
pub type OH_ImageReceiver_OnCallback =
    ::core::option::Option<unsafe extern "C" fn(receiver: *mut OH_ImageReceiverNative)>;
extern "C" {
    /** @brief Creates an <b>OH_ImageReceiverOptions</b> object at the application layer.

    @param options Indicates the pointer to the <b>OH_ImageReceiverOptions</b> object obtained.
    @return Returns {@link Image_ErrorCode} IMAGE_SUCCESS - if the operation is successful.
    returns {@link Image_ErrorCode} IMAGE_BAD_PARAMETER - if bad parameter.
    returns {@link Image_ErrorCode} IMAGE_ALLOC_FAILED - if alloc failed.
    @since 12*/
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_ImageReceiverOptions_Create(
        options: *mut *mut OH_ImageReceiverOptions,
    ) -> Image_ErrorCode;
    /** @brief Get size of an {@link OH_ImageReceiverOptions} object.

    @param options Indicates the pointer to an {@link OH_ImageReceiverOptions} object.
    @param size Indicates the value of the {@Link Image_Size} object will be obtained.
    @return Returns {@link Image_ErrorCode} IMAGE_SUCCESS - if the operation is successful.
    returns {@link Image_ErrorCode} IMAGE_BAD_PARAMETER - if bad parameter.
    @since 12*/
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_ImageReceiverOptions_GetSize(
        options: *mut OH_ImageReceiverOptions,
        size: *mut Image_Size,
    ) -> Image_ErrorCode;
    /** @brief Set size of an {@link OH_ImageReceiverOptions} object.

    @param options Indicates the pointer to an {@link OH_ImageReceiverOptions} object.
    @param size Indicates the value of the {@link Image_Size} object will be seted.
    @return Returns {@link Image_ErrorCode} IMAGE_SUCCESS - if the operation is successful.
    returns {@link Image_ErrorCode} IMAGE_BAD_PARAMETER - if bad parameter.
    @since 12*/
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_ImageReceiverOptions_SetSize(
        options: *mut OH_ImageReceiverOptions,
        size: Image_Size,
    ) -> Image_ErrorCode;
    /** @brief Get capacity from an {@link OH_ImageReceiverOptions} object.

    @param options Indicates the pointer to an {@link OH_ImageReceiverOptions} object.
    @param capacity Indicates the pointer to capacity will be obtained.
    @return Returns {@link Image_ErrorCode} IMAGE_SUCCESS - if the operation is successful.
    returns {@link Image_ErrorCode} IMAGE_BAD_PARAMETER - if bad parameter.
    @since 12*/
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_ImageReceiverOptions_GetCapacity(
        options: *mut OH_ImageReceiverOptions,
        capacity: *mut i32,
    ) -> Image_ErrorCode;
    /** @brief Set capacity of an {@link OH_ImageReceiverOptions} object.

    @param options Indicates the pointer to an {@link OH_ImageReceiverOptions} object.
    @param capacity Indicates the value of capacity will be seted.
    @return Returns {@link Image_ErrorCode} IMAGE_SUCCESS - if the operation is successful.
    returns {@link Image_ErrorCode} IMAGE_BAD_PARAMETER - if bad parameter.
    @since 12*/
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_ImageReceiverOptions_SetCapacity(
        options: *mut OH_ImageReceiverOptions,
        capacity: i32,
    ) -> Image_ErrorCode;
    /** @brief Releases an {@link OH_ImageReceiverOptions} object.
    It is used to release the object {@link OH_ImageReceiverOptions}.

    @param options Indicates the pointer to an {@link OH_ImageReceiverOptions} object.
    @return Returns {@link Image_ErrorCode} IMAGE_SUCCESS - if the operation is successful.
    returns {@link Image_ErrorCode} IMAGE_BAD_PARAMETER - if bad parameter.
    @see OH_ImageReceiverOptions
    @since 12*/
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_ImageReceiverOptions_Release(
        options: *mut OH_ImageReceiverOptions,
    ) -> Image_ErrorCode;
    /** @brief Creates an <b>OH_ImageReceiverNative</b> object at the application layer.

    @param options Indicates the options for setting the <b>OH_ImageReceiverNative</b> object.
    @param receiver Indicates the pointer to the <b>OH_ImageReceiverNative</b> object obtained.
    @return Returns {@link Image_ErrorCode} IMAGE_SUCCESS - if the operation is successful.
    returns {@link Image_ErrorCode} IMAGE_BAD_PARAMETER - if bad parameter.
    returns {@link Image_ErrorCode} IMAGE_ALLOC_FAILED - if alloc failed.
    @since 12*/
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_ImageReceiverNative_Create(
        options: *mut OH_ImageReceiverOptions,
        receiver: *mut *mut OH_ImageReceiverNative,
    ) -> Image_ErrorCode;
    /** @brief Obtains the receiver ID through an {@link OH_ImageReceiverNative} object.

    @param receiver Indicates the pointer to an {@link OH_ImageReceiverNative} object.
    @param surfaceId Indicates the pointer to the surfaceID will be obtained.
    @return Returns {@link Image_ErrorCode} IMAGE_SUCCESS - if the operation is successful.
    returns {@link Image_ErrorCode} IMAGE_BAD_PARAMETER - if bad parameter.
    returns {@link Image_ErrorCode} IMAGE_UNKNOWN_ERROR - inner unknown error.
    @see OH_ImageReceiverNative
    @since 12*/
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_ImageReceiverNative_GetReceivingSurfaceId(
        receiver: *mut OH_ImageReceiverNative,
        surfaceId: *mut u64,
    ) -> Image_ErrorCode;
    /** @brief Obtains the latest image through an {@link OH_ImageReceiverNative} object.

    @param receiver Indicates the pointer to an {@link OH_ImageReceiverNative} object.
    @param image Indicates the pointer to an <b>OH_ImageNative</b> object at the application layer.
    @return Returns {@link Image_ErrorCode} IMAGE_SUCCESS - if the operation is successful.
    returns {@link Image_ErrorCode} IMAGE_BAD_PARAMETER - if bad parameter.
    returns {@link Image_ErrorCode} IMAGE_UNKNOWN_ERROR - inner unknown error.
    returns {@link Image_ErrorCode} IMAGE_ALLOC_FAILED - if alloc failed.
    @see OH_ImageReceiverNative, OH_ImageNative
    @since 12*/
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_ImageReceiverNative_ReadLatestImage(
        receiver: *mut OH_ImageReceiverNative,
        image: *mut *mut OH_ImageNative,
    ) -> Image_ErrorCode;
    /** @brief Obtains the next image through an {@link OH_ImageReceiverNative} object.

    @param receiver Indicates the pointer to an {@link OH_ImageReceiverNative} object.
    @param image Indicates the pointer to an <b>OH_ImageNative</b> object at the application layer.
    @return Returns {@link Image_ErrorCode} IMAGE_SUCCESS - if the operation is successful.
    returns {@link Image_ErrorCode} IMAGE_BAD_PARAMETER - if bad parameter.
    returns {@link Image_ErrorCode} IMAGE_UNKNOWN_ERROR - inner unknown error.
    returns {@link Image_ErrorCode} IMAGE_ALLOC_FAILED - if alloc failed.
    @see OH_ImageReceiverNative, OH_ImageNative
    @since 12*/
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_ImageReceiverNative_ReadNextImage(
        receiver: *mut OH_ImageReceiverNative,
        image: *mut *mut OH_ImageNative,
    ) -> Image_ErrorCode;
    /** @brief Registers an {@link OH_ImageReceiver_OnCallback} callback event.

    This callback event is triggered whenever a new image is received.

    @param receiver Indicates the pointer to an {@link OH_ImageReceiverNative} object.
    @param callback Indicates the {@link OH_ImageReceiver_OnCallback} callback event to register.
    @return Returns {@link Image_ErrorCode} IMAGE_SUCCESS - if the operation is successful.
    returns {@link Image_ErrorCode} IMAGE_BAD_PARAMETER - if bad parameter.
    @see OH_ImageReceiverNative, OH_ImageReceiver_OnCallback
    @since 12*/
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_ImageReceiverNative_On(
        receiver: *mut OH_ImageReceiverNative,
        callback: OH_ImageReceiver_OnCallback,
    ) -> Image_ErrorCode;
    /** @brief Unregisters the {@link OH_ImageReceiver_OnCallback} callback event.

    Turn off the callback witch triggered by {@link OH_ImageReceiverNative_On}.

    @param receiver Indicates the pointer to an {@link OH_ImageReceiverNative} object.
    @return Returns {@link Image_ErrorCode} IMAGE_SUCCESS - if the operation is successful.
    returns {@link Image_ErrorCode} IMAGE_BAD_PARAMETER - if bad parameter.
    @see OH_ImageReceiverNative, OH_ImageReceiverNative_On
    @since 12*/
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_ImageReceiverNative_Off(receiver: *mut OH_ImageReceiverNative) -> Image_ErrorCode;
    /** @brief Obtains the size of the image receiver through an {@link OH_ImageReceiverNative} object.

    @param receiver Indicates the pointer to an {@link OH_ImageReceiverNative} object.
    @param size Indicates the pointer to the {@link Image_Size} object will be obtained.
    @return Returns {@link Image_ErrorCode} IMAGE_SUCCESS - if the operation is successful.
    returns {@link Image_ErrorCode} IMAGE_BAD_PARAMETER - if bad parameter.
    @see OH_ImageReceiverNative, Image_Size
    @since 12*/
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_ImageReceiverNative_GetSize(
        receiver: *mut OH_ImageReceiverNative,
        size: *mut Image_Size,
    ) -> Image_ErrorCode;
    /** @brief Obtains the capacity of the image receiver through an {@link OH_ImageReceiverNative} object.

    @param receiver Indicates the pointer to an {@link OH_ImageReceiverNative} object.
    @param capacity Indicates the pointer to the capacity will be obtained.
    @return Returns {@link Image_ErrorCode} IMAGE_SUCCESS - if the operation is successful.
    returns {@link Image_ErrorCode} IMAGE_BAD_PARAMETER - if bad parameter.
    @see OH_ImageReceiverNative
    @since 12*/
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_ImageReceiverNative_GetCapacity(
        receiver: *mut OH_ImageReceiverNative,
        capacity: *mut i32,
    ) -> Image_ErrorCode;
    /** @brief Releases an {@link OH_ImageReceiverNative} object.

    This API is not used to release an <b>ImageReceiver2</b> object at the application layer.

    @param receiver Indicates the pointer to an {@link OH_ImageReceiverNative} object.
    @return Returns {@link Image_ErrorCode} IMAGE_SUCCESS - if the operation is successful.
    returns {@link Image_ErrorCode} IMAGE_BAD_PARAMETER - if bad parameter.
    @see OH_ImageReceiverNative
    @since 12*/
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_ImageReceiverNative_Release(receiver: *mut OH_ImageReceiverNative)
        -> Image_ErrorCode;
}
