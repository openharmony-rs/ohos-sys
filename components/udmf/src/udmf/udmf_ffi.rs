// automatically generated by rust-bindgen 0.71.1

#![allow(non_upper_case_globals)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
use ohos_sys_opaque_types::*;

pub const UDMF_KEY_BUFFER_LEN: u32 = 512;
#[cfg(feature = "api-12")]
#[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
impl Udmf_Intention {
    /// The intention is drag.
    pub const DRAG: Udmf_Intention = Udmf_Intention(0);
    /// The intention is pasteboard.
    pub const PASTEBOARD: Udmf_Intention = Udmf_Intention(1);
}
#[repr(transparent)]
/// Describe the intention type of the udmf.
///
///
/// Available since API-level: 12
#[cfg(feature = "api-12")]
#[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub struct Udmf_Intention(pub ::core::ffi::c_uint);
#[cfg(feature = "api-12")]
#[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
impl Udmf_ShareOption {
    /// Invalid share option.
    pub const INVALID: Udmf_ShareOption = Udmf_ShareOption(0);
    /// Allowed to be used in the same application on this device.
    pub const IN_APP: Udmf_ShareOption = Udmf_ShareOption(1);
    /// Allowed to be used in the cross application on this device.
    pub const CROSS_APP: Udmf_ShareOption = Udmf_ShareOption(2);
}
#[repr(transparent)]
/// Describe intra-device usage range type enumeration.
///
///
/// Available since API-level: 12
#[cfg(feature = "api-12")]
#[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub struct Udmf_ShareOption(pub ::core::ffi::c_uint);
#[cfg(feature = "api-15")]
#[cfg_attr(docsrs, doc(cfg(feature = "api-15")))]
impl Udmf_FileConflictOptions {
    /// Overwrite when dest uri has file with same name.
    pub const UDMF_OVERWRITE: Udmf_FileConflictOptions = Udmf_FileConflictOptions(0);
    /// Skip when dest uri has file with same name.
    pub const UDMF_SKIP: Udmf_FileConflictOptions = Udmf_FileConflictOptions(1);
}
#[repr(transparent)]
/// Describe the types of file conflict options when getting data from the udmf.
///
///
/// Available since API-level: 15
#[cfg(feature = "api-15")]
#[cfg_attr(docsrs, doc(cfg(feature = "api-15")))]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub struct Udmf_FileConflictOptions(pub ::core::ffi::c_uint);
#[cfg(feature = "api-15")]
#[cfg_attr(docsrs, doc(cfg(feature = "api-15")))]
impl Udmf_ProgressIndicator {
    /// Getting data without system default progress indicator.
    pub const UDMF_NONE: Udmf_ProgressIndicator = Udmf_ProgressIndicator(0);
    /// Getting data with system default progress indicator.
    pub const UDMF_DEFAULT: Udmf_ProgressIndicator = Udmf_ProgressIndicator(1);
}
#[repr(transparent)]
/// Describe the types of progress indicator when getting data from the udmf.
///
///
/// Available since API-level: 15
#[cfg(feature = "api-15")]
#[cfg_attr(docsrs, doc(cfg(feature = "api-15")))]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub struct Udmf_ProgressIndicator(pub ::core::ffi::c_uint);
/// Represents the udmf progress information.
///
///
/// Available since API-level: 15
#[cfg(feature = "api-15")]
#[cfg_attr(docsrs, doc(cfg(feature = "api-15")))]
#[repr(C)]
pub struct OH_Udmf_ProgressInfo {
    _unused: [u8; 0],
}
/// Defines the callback function used to return the progress information and data.
///
/// # Arguments
///
/// * `progressInfo` - The progress information notified to Application.
///
/// * `data` - Represents the unified data.
///
/// Available since API-level: 15
#[cfg(feature = "api-15")]
#[cfg_attr(docsrs, doc(cfg(feature = "api-15")))]
pub type OH_Udmf_DataProgressListener = ::core::option::Option<
    unsafe extern "C" fn(progressInfo: *mut OH_Udmf_ProgressInfo, data: *mut OH_UdmfData),
>;
/// Defines the callback function used free the context.
/// # Arguments
///
/// * `context` - Pointer to the context which is to be free.
///
/// Available since API-level: 13
#[cfg(feature = "api-13")]
#[cfg_attr(docsrs, doc(cfg(feature = "api-13")))]
pub type UdmfData_Finalize =
    ::core::option::Option<unsafe extern "C" fn(context: *mut ::core::ffi::c_void)>;
/// Defines a callback function used to obtain data by type.
///
/// # Arguments
///
/// * `context` - Pointer to the context set by [`OH_UdmfRecordProvider_SetData`].
///
/// * `type` - Pointer to the type of data to obtain. For details, see [`udmf_meta.h`].
///
/// # Returns
///
/// * Returns the data content.
///
/// Available since API-level: 13
#[cfg(feature = "api-13")]
#[cfg_attr(docsrs, doc(cfg(feature = "api-13")))]
pub type OH_UdmfRecordProvider_GetData = ::core::option::Option<
    unsafe extern "C" fn(
        context: *mut ::core::ffi::c_void,
        type_: *const ::core::ffi::c_char,
    ) -> *mut ::core::ffi::c_void,
>;
extern "C" {
    /// Creation a pointer to the instance of the [`OH_UdmfData`].
    ///
    ///
    /// # Returns
    ///
    /// * If the operation is successful, a pointer to the instance of the [`OH_UdmfData`]
    /// structure is returned. If the operation is failed, nullptr is returned.
    /// [`OH_UdmfData.`]
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_UdmfData_Create() -> *mut OH_UdmfData;
    /// Destroy a pointer that points to the [`OH_UdmfData`] instance.
    ///
    /// # Arguments
    ///
    /// * `pThis` - Represents a pointer to an instance of [`OH_UdmfData`].
    /// [`OH_UdmfData.`]
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_UdmfData_Destroy(pThis: *mut OH_UdmfData);
    /// Add one {OH_UdmfRecord} record to the [`OH_UdmfData`] data.
    ///
    /// # Arguments
    ///
    /// * `pThis` - Represents a pointer to an instance of [`OH_UdmfData`].
    ///
    /// * `record` - Represents a pointer to an instance of [`OH_UdmfRecord`].
    ///
    /// # Returns
    ///
    /// * Returns the status code of the execution. See [`Udmf_ErrCode`].
    /// [`UDMF_E_OK`] success.
    /// [`UDMF_E_INVALID_PARAM`] The error code for common invalid args.
    /// [`OH_UdmfData`] Udmf_ErrCode.
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_UdmfData_AddRecord(
        pThis: *mut OH_UdmfData,
        record: *mut OH_UdmfRecord,
    ) -> ::core::ffi::c_int;
    /// Check whether the type exists in the [`OH_UdmfData`] data.
    ///
    /// # Arguments
    ///
    /// * `pThis` - Represents a pointer to an instance of [`OH_UdmfData`].
    ///
    /// * `type` - Represents a string pointer of the type.
    ///
    /// # Returns
    ///
    /// * Returns the status of finding type.
    /// `false` is not existed.
    /// `true` is existed.
    /// [`OH_UdmfData.`]
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_UdmfData_HasType(pThis: *mut OH_UdmfData, type_: *const ::core::ffi::c_char) -> bool;
    /// Get all types in the [`OH_UdmfData`] data.
    ///
    /// # Arguments
    ///
    /// * `pThis` - Represents a pointer to an instance of [`OH_UdmfData`].
    ///
    /// * `count` - Represents the types count that is a output param.
    ///
    /// # Returns
    ///
    /// * Returns string array that in [`OH_UdmfData`] when input parameters valid,
    /// otherwise return nullptr.
    /// [`OH_UdmfData.`]
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_UdmfData_GetTypes(
        pThis: *mut OH_UdmfData,
        count: *mut ::core::ffi::c_uint,
    ) -> *mut *mut ::core::ffi::c_char;
    /// Get all records in the [`OH_UdmfData`] data.
    ///
    /// # Arguments
    ///
    /// * `pThis` - Represents a pointer to an instance of [`OH_UdmfData`].
    ///
    /// * `count` - Represents the records count that is a output param.
    ///
    /// # Returns
    ///
    /// * Returns [`OH_UdmfRecord`] pointer array when input parameters valid, otherwise return nullptr.
    /// [`OH_UdmfData`] OH_UdmfRecord.
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_UdmfData_GetRecords(
        pThis: *mut OH_UdmfData,
        count: *mut ::core::ffi::c_uint,
    ) -> *mut *mut OH_UdmfRecord;
    /// Creates an [`OH_UdmfRecordProvider`] instance.
    ///
    ///
    /// # Returns
    ///
    /// * Returns the pointer to the [`OH_UdmfRecordProvider`] instance created if the operation is successful.
    /// Returns nullptr if the memory is not enough.
    /// [`OH_UdmfRecordProvider.`]
    /// Available since API-level: 13
    #[cfg(feature = "api-13")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-13")))]
    pub fn OH_UdmfRecordProvider_Create() -> *mut OH_UdmfRecordProvider;
    /// Destroy an [`OH_UdmfRecordProvider`] instance.
    ///
    /// # Arguments
    ///
    /// * `provider` - Pointer to the [`OH_UdmfRecordProvider`] instance to destroy.
    ///
    /// # Returns
    ///
    /// * Returns the status code of the execution. For details, see [`Udmf_ErrCode`].
    /// Returns [`UDMF_E_OK`] if the operation is successful.
    /// Returns [`UDMF_E_INVALID_PARAM`] if invalid args are detected.
    /// [`OH_UdmfRecordProvider`] Udmf_ErrCode.
    ///
    /// Available since API-level: 13
    #[cfg(feature = "api-13")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-13")))]
    pub fn OH_UdmfRecordProvider_Destroy(
        provider: *mut OH_UdmfRecordProvider,
    ) -> ::core::ffi::c_int;
    /// Sets a callback function to obtain data.
    ///
    /// # Arguments
    ///
    /// * `provider` - Pointer to the [`OH_UdmfRecordProvider`] instance.
    ///
    /// * `context` - Pointer to the context set, which is the first parameter in OH_UdmfRecordProvider_GetData.
    ///
    /// * `callback` - Callback to set. For details, see [`OH_UdmfRecordProvider_GetData`].
    ///
    /// * `finalize` - Optional callback that can free context when destroy provider.
    /// For details, see [`UdmfData_Finalize`].
    ///
    /// # Returns
    ///
    /// * Returns the status code of the execution. For details, see [`Udmf_ErrCode`].
    /// Returns [`UDMF_E_OK`] if the operation is successful.
    /// Returns [`UDMF_E_INVALID_PARAM`] if invalid args are detected.
    /// [`OH_UdmfRecordProvider`] OH_UdmfRecordProvider_GetData UdmfData_Finalize Udmf_ErrCode.
    ///
    /// Available since API-level: 13
    #[cfg(feature = "api-13")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-13")))]
    pub fn OH_UdmfRecordProvider_SetData(
        provider: *mut OH_UdmfRecordProvider,
        context: *mut ::core::ffi::c_void,
        callback: OH_UdmfRecordProvider_GetData,
        finalize: UdmfData_Finalize,
    ) -> ::core::ffi::c_int;
    /// Creation a pointer to the instance of the [`OH_UdmfRecord`], it's relate with UDS data.
    ///
    ///
    /// # Returns
    ///
    /// * If the operation is successful, a pointer to the instance of the [`OH_UdmfRecord`]
    /// structure is returned. If the operation is failed, nullptr is returned.
    /// [`OH_UdmfRecord.`]
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_UdmfRecord_Create() -> *mut OH_UdmfRecord;
    /// Destroy a pointer that points to an instance of [`OH_UdmfRecord`].
    ///
    /// # Arguments
    ///
    /// * `pThis` - Represents a pointer to an instance of [`OH_UdmfRecord`].
    /// [`OH_UdmfRecord.`]
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_UdmfRecord_Destroy(pThis: *mut OH_UdmfRecord);
    /// Add one custom data to the [`OH_UdmfRecord`] record.
    ///
    /// # Arguments
    ///
    /// * `pThis` - Represents a pointer to an instance of [`OH_UdmfRecord`].
    ///
    /// * `typeId` - Represents record type, reference udmf_meta.h.
    ///
    /// * `entry` - Represents custom data.
    ///
    /// * `count` - Represents the size of data param.
    ///
    /// # Returns
    ///
    /// * Returns the status code of the execution. See [`Udmf_ErrCode`].
    /// [`UDMF_E_OK`] success.
    /// [`UDMF_E_INVALID_PARAM`] The error code for common invalid args.
    /// [`OH_UdmfRecord`] Udmf_ErrCode.
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_UdmfRecord_AddGeneralEntry(
        pThis: *mut OH_UdmfRecord,
        typeId: *const ::core::ffi::c_char,
        entry: *mut ::core::ffi::c_uchar,
        count: ::core::ffi::c_uint,
    ) -> ::core::ffi::c_int;
    /// Add one {OH_UdsPlainText} data to the [`OH_UdmfRecord`] record.
    ///
    /// # Arguments
    ///
    /// * `pThis` - Represents a pointer to an instance of [`OH_UdmfRecord`].
    ///
    /// * `plainText` - Represents a pointer to an instance of [`OH_UdsPlainText`].
    ///
    /// # Returns
    ///
    /// * Returns the status code of the execution. See [`Udmf_ErrCode`].
    /// [`UDMF_E_OK`] success.
    /// [`UDMF_E_INVALID_PARAM`] The error code for common invalid args.
    /// [`OH_UdmfRecord`] OH_UdsPlainText Udmf_ErrCode.
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_UdmfRecord_AddPlainText(
        pThis: *mut OH_UdmfRecord,
        plainText: *mut OH_UdsPlainText,
    ) -> ::core::ffi::c_int;
    /// Add one {OH_UdsHyperlink} data to the [`OH_UdmfRecord`] record.
    ///
    /// # Arguments
    ///
    /// * `pThis` - Represents a pointer to an instance of [`OH_UdmfRecord`].
    ///
    /// * `hyperlink` - Represents a pointer to an instance of [`OH_UdsHyperlink`].
    ///
    /// # Returns
    ///
    /// * Returns the status code of the execution. See [`Udmf_ErrCode`].
    /// [`UDMF_E_OK`] success.
    /// [`UDMF_E_INVALID_PARAM`] The error code for common invalid args.
    /// [`OH_UdmfRecord`] OH_UdsHyperlink Udmf_ErrCode.
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_UdmfRecord_AddHyperlink(
        pThis: *mut OH_UdmfRecord,
        hyperlink: *mut OH_UdsHyperlink,
    ) -> ::core::ffi::c_int;
    /// Add one {OH_UdsHtml} data to the [`OH_UdmfRecord`] record.
    ///
    /// # Arguments
    ///
    /// * `pThis` - Represents a pointer to an instance of [`OH_UdmfRecord`].
    ///
    /// * `html` - Represents a pointer to an instance of [`OH_UdsHtml`].
    ///
    /// # Returns
    ///
    /// * Returns the status code of the execution. See [`Udmf_ErrCode`].
    /// [`UDMF_E_OK`] success.
    /// [`UDMF_E_INVALID_PARAM`] The error code for common invalid args.
    /// [`OH_UdmfRecord`] OH_UdsHtml Udmf_ErrCode.
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_UdmfRecord_AddHtml(
        pThis: *mut OH_UdmfRecord,
        html: *mut OH_UdsHtml,
    ) -> ::core::ffi::c_int;
    /// Add one {OH_UdsAppItem} data to the [`OH_UdmfRecord`] record.
    ///
    /// # Arguments
    ///
    /// * `pThis` - Represents a pointer to an instance of [`OH_UdmfRecord`].
    ///
    /// * `appItem` - Represents a pointer to an instance of [`OH_UdsAppItem`].
    ///
    /// # Returns
    ///
    /// * Returns the status code of the execution. See [`Udmf_ErrCode`].
    /// [`UDMF_E_OK`] success.
    /// [`UDMF_E_INVALID_PARAM`] The error code for common invalid args.
    /// [`OH_UdmfRecord`] OH_UdsAppItem Udmf_ErrCode.
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_UdmfRecord_AddAppItem(
        pThis: *mut OH_UdmfRecord,
        appItem: *mut OH_UdsAppItem,
    ) -> ::core::ffi::c_int;
    /// Add one {OH_UdsFileUri} data to the [`OH_UdmfRecord`] record.
    ///
    /// # Arguments
    ///
    /// * `pThis` - Represents a pointer to an instance of [`OH_UdmfRecord`].
    ///
    /// * `fileUri` - Represents a pointer to an instance of [`OH_UdsFileUri`].
    ///
    /// # Returns
    ///
    /// * Returns the status code of the execution. See [`Udmf_ErrCode`].
    /// [`UDMF_E_OK`] success.
    /// [`UDMF_E_INVALID_PARAM`] The error code for common invalid args.
    /// [`OH_UdmfRecord`] OH_UdsFileUri Udmf_ErrCode.
    ///
    /// Available since API-level: 13
    #[cfg(feature = "api-13")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-13")))]
    pub fn OH_UdmfRecord_AddFileUri(
        pThis: *mut OH_UdmfRecord,
        fileUri: *mut OH_UdsFileUri,
    ) -> ::core::ffi::c_int;
    /// Add one {OH_UdsPixelMap} data to the [`OH_UdmfRecord`] record.
    ///
    /// # Arguments
    ///
    /// * `pThis` - Represents a pointer to an instance of [`OH_UdmfRecord`].
    ///
    /// * `pixelMap` - Represents a pointer to an instance of [`OH_UdsPixelMap`].
    ///
    /// # Returns
    ///
    /// * Returns the status code of the execution. See [`Udmf_ErrCode`].
    /// [`UDMF_E_OK`] success.
    /// [`UDMF_E_INVALID_PARAM`] The error code for common invalid args.
    /// [`OH_UdmfRecord`] OH_UdsPixelMap Udmf_ErrCode.
    ///
    /// Available since API-level: 13
    #[cfg(feature = "api-13")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-13")))]
    pub fn OH_UdmfRecord_AddPixelMap(
        pThis: *mut OH_UdmfRecord,
        pixelMap: *mut OH_UdsPixelMap,
    ) -> ::core::ffi::c_int;
    /// Add one [`OH_UdsArrayBuffer`] data to the [`OH_UdmfRecord`] record.
    ///
    /// # Arguments
    ///
    /// * `record` - Represents a pointer to an instance of [`OH_UdmfRecord`].
    ///
    /// * `type` - Represents record type, reference udmf_meta.h.
    ///
    /// * `buffer` - Represents a pointer to an instance of [`OH_UdsArrayBuffer`].
    ///
    /// # Returns
    ///
    /// * Returns the status code of the execution. See [`Udmf_ErrCode`].
    /// [`UDMF_E_OK`] success.
    /// [`UDMF_E_INVALID_PARAM`] The error code for common invalid args.
    /// [`OH_UdmfRecord`] OH_UdsArrayBuffer Udmf_ErrCode.
    ///
    /// Available since API-level: 13
    #[cfg(feature = "api-13")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-13")))]
    pub fn OH_UdmfRecord_AddArrayBuffer(
        record: *mut OH_UdmfRecord,
        type_: *const ::core::ffi::c_char,
        buffer: *mut OH_UdsArrayBuffer,
    ) -> ::core::ffi::c_int;
    /// Add one [`OH_UdsContentForm`] data to the [`OH_UdmfRecord`] record.
    ///
    /// # Arguments
    ///
    /// * `pThis` - Represents a pointer to an instance of [`OH_UdmfRecord`].
    ///
    /// * `contentForm` - Represents a pointer to an instance of [`OH_UdsContentForm`].
    ///
    /// # Returns
    ///
    /// * Returns the status code of the execution. See [`Udmf_ErrCode`].
    /// [`UDMF_E_OK`] success.
    /// [`UDMF_E_INVALID_PARAM`] The error code for common invalid args.
    /// [`OH_UdmfRecord`] OH_UdsContentForm Udmf_ErrCode.
    ///
    /// Available since API-level: 14
    #[cfg(feature = "api-14")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-14")))]
    pub fn OH_UdmfRecord_AddContentForm(
        pThis: *mut OH_UdmfRecord,
        contentForm: *mut OH_UdsContentForm,
    ) -> ::core::ffi::c_int;
    /// Get all types in the [`OH_UdmfRecord`] record.
    ///
    /// # Arguments
    ///
    /// * `pThis` - Represents a pointer to an instance of [`OH_UdmfRecord`].
    ///
    /// * `count` - Represents the types count that is a output param.
    ///
    /// # Returns
    ///
    /// * Returns string array that in [`OH_UdmfRecord`] when input parameters valid,
    /// otherwise return nullptr.
    /// [`OH_UdmfRecord.`]
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_UdmfRecord_GetTypes(
        pThis: *mut OH_UdmfRecord,
        count: *mut ::core::ffi::c_uint,
    ) -> *mut *mut ::core::ffi::c_char;
    /// Get one entry data from the [`OH_UdmfRecord`] record.
    ///
    /// # Arguments
    ///
    /// * `pThis` - Represents a pointer to an instance of [`OH_UdmfRecord`].
    ///
    /// * `typeId` - Represents record type, reference udmf_meta.h.
    ///
    /// * `entry` - Represents a pointer to entry data that is a output param.
    ///
    /// * `count` - Represents the entry data length that is a output param.
    ///
    /// # Returns
    ///
    /// * Returns the status code of the execution. See [`Udmf_ErrCode`].
    /// [`UDMF_E_OK`] success.
    /// [`UDMF_E_INVALID_PARAM`] The error code for common invalid args.
    /// [`UDMF_ERR`] Internal data error.
    /// [`OH_UdmfRecord`] Udmf_ErrCode.
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_UdmfRecord_GetGeneralEntry(
        pThis: *mut OH_UdmfRecord,
        typeId: *const ::core::ffi::c_char,
        entry: *mut *mut ::core::ffi::c_uchar,
        count: *mut ::core::ffi::c_uint,
    ) -> ::core::ffi::c_int;
    /// Get one {OH_UdsPlainText} data from the [`OH_UdmfRecord`] record.
    ///
    /// # Arguments
    ///
    /// * `pThis` - Represents a pointer to an instance of [`OH_UdmfRecord`].
    ///
    /// * `plainText` - Represents a pointer to an instance of [`OH_UdsPlainText`].
    ///
    /// # Returns
    ///
    /// * Returns the status code of the execution. See [`Udmf_ErrCode`].
    /// [`UDMF_E_OK`] success.
    /// [`UDMF_E_INVALID_PARAM`] The error code for common invalid args.
    /// [`UDMF_ERR`] Internal data error.
    /// [`OH_UdmfRecord`] OH_UdsPlainText Udmf_ErrCode.
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_UdmfRecord_GetPlainText(
        pThis: *mut OH_UdmfRecord,
        plainText: *mut OH_UdsPlainText,
    ) -> ::core::ffi::c_int;
    /// Get one {OH_UdsHyperlink} data from the [`OH_UdmfRecord`] record.
    ///
    /// # Arguments
    ///
    /// * `pThis` - Represents a pointer to an instance of [`OH_UdmfRecord`].
    ///
    /// * `hyperlink` - Represents a pointer to an instance of [`OH_UdsHyperlink`].
    ///
    /// # Returns
    ///
    /// * Returns the status code of the execution. See [`Udmf_ErrCode`].
    /// [`UDMF_E_OK`] success.
    /// [`UDMF_E_INVALID_PARAM`] The error code for common invalid args.
    /// [`UDMF_ERR`] Internal data error.
    /// [`OH_UdmfRecord`] OH_UdsHyperlink Udmf_ErrCode.
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_UdmfRecord_GetHyperlink(
        pThis: *mut OH_UdmfRecord,
        hyperlink: *mut OH_UdsHyperlink,
    ) -> ::core::ffi::c_int;
    /// Get one {OH_UdsHtml} data from the [`OH_UdmfRecord`] record.
    ///
    /// # Arguments
    ///
    /// * `pThis` - Represents a pointer to an instance of [`OH_UdmfRecord`].
    ///
    /// * `html` - Represents a pointer to an instance of [`OH_UdsHtml`].
    ///
    /// # Returns
    ///
    /// * Returns the status code of the execution. See [`Udmf_ErrCode`].
    /// [`UDMF_E_OK`] success.
    /// [`UDMF_E_INVALID_PARAM`] The error code for common invalid args.
    /// [`UDMF_ERR`] Internal data error.
    /// [`OH_UdmfRecord`] OH_UdsHtml Udmf_ErrCode.
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_UdmfRecord_GetHtml(
        pThis: *mut OH_UdmfRecord,
        html: *mut OH_UdsHtml,
    ) -> ::core::ffi::c_int;
    /// Get one {OH_UdsAppItem} data from the [`OH_UdmfRecord`] record.
    ///
    /// # Arguments
    ///
    /// * `pThis` - Represents a pointer to an instance of [`OH_UdmfRecord`].
    ///
    /// * `appItem` - Represents a pointer to an instance of [`OH_UdsAppItem`].
    ///
    /// # Returns
    ///
    /// * Returns the status code of the execution. See [`Udmf_ErrCode`].
    /// [`UDMF_E_OK`] success.
    /// [`UDMF_E_INVALID_PARAM`] The error code for common invalid args.
    /// [`UDMF_ERR`] Internal data error.
    /// [`OH_UdmfRecord`] OH_UdsAppItem Udmf_ErrCode.
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_UdmfRecord_GetAppItem(
        pThis: *mut OH_UdmfRecord,
        appItem: *mut OH_UdsAppItem,
    ) -> ::core::ffi::c_int;
    /// Get one {OH_UdsFileUri} data from the [`OH_UdmfRecord`] record.
    ///
    /// # Arguments
    ///
    /// * `pThis` - Represents a pointer to an instance of [`OH_UdmfRecord`].
    ///
    /// * `fileUri` - Represents a pointer to an instance of [`OH_UdsFileUri`].
    ///
    /// # Returns
    ///
    /// * Returns the status code of the execution. See [`Udmf_ErrCode`].
    /// [`UDMF_E_OK`] success.
    /// [`UDMF_E_INVALID_PARAM`] The error code for common invalid args.
    /// [`OH_UdmfRecord`] OH_UdsFileUri Udmf_ErrCode.
    ///
    /// Available since API-level: 13
    #[cfg(feature = "api-13")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-13")))]
    pub fn OH_UdmfRecord_GetFileUri(
        pThis: *mut OH_UdmfRecord,
        fileUri: *mut OH_UdsFileUri,
    ) -> ::core::ffi::c_int;
    /// Get one {OH_UdsPixelMap} data from the [`OH_UdmfRecord`] record.
    ///
    /// # Arguments
    ///
    /// * `pThis` - Represents a pointer to an instance of [`OH_UdmfRecord`].
    ///
    /// * `pixelMap` - Represents a pointer to an instance of [`OH_UdsPixelMap`].
    ///
    /// # Returns
    ///
    /// * Returns the status code of the execution. See [`Udmf_ErrCode`].
    /// [`UDMF_E_OK`] success.
    /// [`UDMF_E_INVALID_PARAM`] The error code for common invalid args.
    /// [`OH_UdmfRecord`] OH_UdsPixelMap Udmf_ErrCode.
    ///
    /// Available since API-level: 13
    #[cfg(feature = "api-13")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-13")))]
    pub fn OH_UdmfRecord_GetPixelMap(
        pThis: *mut OH_UdmfRecord,
        pixelMap: *mut OH_UdsPixelMap,
    ) -> ::core::ffi::c_int;
    /// Set the data provider of the types.
    ///
    /// # Arguments
    ///
    /// * `pThis` - Represents a pointer to an instance of [`OH_UdmfRecord`].
    ///
    /// * `types` - Represents a pointer to a group of data types;
    ///
    /// * `count` - Represents the number of data types;
    ///
    /// * `provider` - Represents a pointer an instance of [`OH_UdmfRecordProvider`].
    ///
    /// # Returns
    ///
    /// * Returns the status code of the execution. See [`Udmf_ErrCode`].
    /// [`UDMF_E_OK`] success.
    /// [`UDMF_E_INVALID_PARAM`] The error code for common invalid args.
    /// [`OH_UdmfRecord`] OH_UdmfRecordProvider Udmf_ErrCode.
    ///
    /// Available since API-level: 13
    #[cfg(feature = "api-13")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-13")))]
    pub fn OH_UdmfRecord_SetProvider(
        pThis: *mut OH_UdmfRecord,
        types: *const *const ::core::ffi::c_char,
        count: ::core::ffi::c_uint,
        provider: *mut OH_UdmfRecordProvider,
    ) -> ::core::ffi::c_int;
    /// Get one [`OH_UdsArrayBuffer`] data from the [`OH_UdmfRecord`] record.
    ///
    /// # Arguments
    ///
    /// * `record` - Represents a pointer to an instance of [`OH_UdmfRecord`].
    ///
    /// * `type` - Represents record type, reference udmf_meta.h.
    ///
    /// * `buffer` - Represents a pointer to an instance of [`OH_UdsArrayBuffer`].
    ///
    /// # Returns
    ///
    /// * Returns the status code of the execution. See [`Udmf_ErrCode`].
    /// [`UDMF_E_OK`] success.
    /// [`UDMF_E_INVALID_PARAM`] The error code for common invalid args.
    /// [`OH_UdmfRecord`] OH_UdsArrayBuffer Udmf_ErrCode.
    ///
    /// Available since API-level: 13
    #[cfg(feature = "api-13")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-13")))]
    pub fn OH_UdmfRecord_GetArrayBuffer(
        record: *mut OH_UdmfRecord,
        type_: *const ::core::ffi::c_char,
        buffer: *mut OH_UdsArrayBuffer,
    ) -> ::core::ffi::c_int;
    /// Get one [`OH_UdsContentForm`] data from the [`OH_UdmfRecord`] record.
    ///
    /// # Arguments
    ///
    /// * `pThis` - Represents a pointer to an instance of [`OH_UdmfRecord`].
    ///
    /// * `contentForm` - Represents a pointer to an instance of [`OH_UdsContentForm`].
    ///
    /// # Returns
    ///
    /// * Returns the status code of the execution. See [`Udmf_ErrCode`].
    /// [`UDMF_E_OK`] success.
    /// [`UDMF_E_INVALID_PARAM`] The error code for common invalid args.
    /// [`OH_UdmfRecord`] OH_UdsContentForm Udmf_ErrCode.
    ///
    /// Available since API-level: 14
    #[cfg(feature = "api-14")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-14")))]
    pub fn OH_UdmfRecord_GetContentForm(
        pThis: *mut OH_UdmfRecord,
        contentForm: *mut OH_UdsContentForm,
    ) -> ::core::ffi::c_int;
    /// Get primary [`OH_UdsPlainText`] data from the [`OH_UdmfData`].
    ///
    /// # Arguments
    ///
    /// * `data` - Represents a pointer to an instance of [`OH_UdmfData`].
    ///
    /// * `plainText` - Represents a pointer to an instance of [`OH_UdsPlainText`].
    ///
    /// # Returns
    ///
    /// * Returns the status code of the execution. See [`Udmf_ErrCode`].
    /// [`UDMF_E_OK`] success.
    /// [`UDMF_E_INVALID_PARAM`] The error code for common invalid args.
    /// [`OH_UdmfData`] OH_UdsPlainText Udmf_ErrCode.
    ///
    /// Available since API-level: 13
    #[cfg(feature = "api-13")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-13")))]
    pub fn OH_UdmfData_GetPrimaryPlainText(
        data: *mut OH_UdmfData,
        plainText: *mut OH_UdsPlainText,
    ) -> ::core::ffi::c_int;
    /// Get one [`OH_UdsHtml`] data from the [`OH_UdmfData`].
    ///
    /// # Arguments
    ///
    /// * `data` - Represents a pointer to an instance of [`OH_UdmfData`].
    ///
    /// * `html` - Represents a pointer to an instance of [`OH_UdsHtml`].
    ///
    /// # Returns
    ///
    /// * Returns the status code of the execution. See [`Udmf_ErrCode`].
    /// [`UDMF_E_OK`] success.
    /// [`UDMF_E_INVALID_PARAM`] The error code for common invalid args.
    /// [`OH_UdmfData`] OH_UdsHtml Udmf_ErrCode.
    ///
    /// Available since API-level: 13
    #[cfg(feature = "api-13")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-13")))]
    pub fn OH_UdmfData_GetPrimaryHtml(
        data: *mut OH_UdmfData,
        html: *mut OH_UdsHtml,
    ) -> ::core::ffi::c_int;
    /// Get the count of [`OH_UdmfRecord`] in the [`OH_UdmfData`].
    ///
    /// # Arguments
    ///
    /// * `data` - Represents a pointer to an instance of [`OH_UdmfData`].
    ///
    /// # Returns
    ///
    /// * Returns the count of [`OH_UdmfRecord`]
    /// [`OH_UdmfData.`]
    /// Available since API-level: 13
    #[cfg(feature = "api-13")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-13")))]
    pub fn OH_UdmfData_GetRecordCount(data: *mut OH_UdmfData) -> ::core::ffi::c_int;
    /// Get the record of the specified index from the [`OH_UdmfData`].
    ///
    /// # Arguments
    ///
    /// * `data` - Represents a pointer to an instance of [`OH_UdmfData`].
    ///
    /// * `index` - Represents the index of [`OH_UdmfRecord`] in the [`OH_UdmfData`].
    ///
    /// # Returns
    ///
    /// * Returns [`OH_UdmfRecord`] pointer when input parameters valid, otherwise return nullptr.
    /// [`OH_UdmfData.`]
    /// Available since API-level: 13
    #[cfg(feature = "api-13")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-13")))]
    pub fn OH_UdmfData_GetRecord(
        data: *mut OH_UdmfData,
        index: ::core::ffi::c_uint,
    ) -> *mut OH_UdmfRecord;
    /// Checks whether the UDMF data is from a local device.
    ///
    /// # Arguments
    ///
    /// * `data` - Represents a pointer to an instance of [`OH_UdmfData`].
    ///
    /// # Returns
    ///
    /// * Returns a boolean value, which indicates whether the UDMF data is from a local device.
    /// The value `true` means the data is from a local device.
    /// The value `false` means the opposite.
    /// [`OH_UdmfData.`]
    /// Available since API-level: 13
    #[cfg(feature = "api-13")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-13")))]
    pub fn OH_UdmfData_IsLocal(data: *mut OH_UdmfData) -> bool;
    /// Creation a pointer to the instance of the [`OH_UdmfProperty`]
    /// from a [`OH_UdmfData`] data.
    ///
    /// # Arguments
    ///
    /// * `unifiedData` - Represents a pointer to an instance of [`OH_UdmfData`].
    ///
    /// # Returns
    ///
    /// * If the operation is successful, a pointer to the instance of the [`OH_UdmfProperty`]
    /// structure is returned. If the operation is failed, nullptr is returned.
    /// [`OH_UdmfData`] OH_UdmfProperty.
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_UdmfProperty_Create(unifiedData: *mut OH_UdmfData) -> *mut OH_UdmfProperty;
    /// Destroy a pointer that points to the [`OH_UdmfProperty`] instance.
    ///
    /// # Arguments
    ///
    /// * `pThis` - Represents a pointer to an instance of [`OH_UdmfProperty`].
    /// [`OH_UdmfProperty.`]
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_UdmfProperty_Destroy(pThis: *mut OH_UdmfProperty);
    /// Get tag value from the [`OH_UdmfProperty`].
    ///
    /// # Arguments
    ///
    /// * `pThis` - Represents a pointer to an instance of [`OH_UdmfProperty`].
    ///
    /// # Returns
    ///
    /// * Returns a pointer of the tag value string when input parameters valid, otherwise return nullptr.
    /// [`OH_UdmfProperty.`]
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_UdmfProperty_GetTag(pThis: *mut OH_UdmfProperty) -> *const ::core::ffi::c_char;
    /// Get timestamp value from the [`OH_UdmfProperty`].
    ///
    /// # Arguments
    ///
    /// * `pThis` - Represents a pointer to an instance of [`OH_UdmfProperty`].
    ///
    /// # Returns
    ///
    /// * Returns timestamp value.
    /// [`OH_UdmfProperty`]
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_UdmfProperty_GetTimestamp(pThis: *mut OH_UdmfProperty) -> i64;
    /// Get share option value from the [`OH_UdmfProperty`].
    ///
    /// # Arguments
    ///
    /// * `pThis` - Represents a pointer to an instance of [`OH_UdmfProperty`].
    ///
    /// # Returns
    ///
    /// * Returns [`Udmf_ShareOption`] value.
    /// [`OH_UdmfProperty`] Udmf_ShareOption
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_UdmfProperty_GetShareOption(pThis: *mut OH_UdmfProperty) -> Udmf_ShareOption;
    /// Get integer value by key from the [`OH_UdmfProperty`].
    ///
    /// # Arguments
    ///
    /// * `pThis` - Represents a pointer to an instance of [`OH_UdmfProperty`].
    ///
    /// * `key` - Represents key-value pair's key
    ///
    /// * `defaultValue` - Represents when get value failure.
    ///
    /// # Returns
    ///
    /// * Returns value associated with the key in successfully, otherwise return defaultValue.
    /// [`OH_UdmfProperty.`]
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_UdmfProperty_GetExtrasIntParam(
        pThis: *mut OH_UdmfProperty,
        key: *const ::core::ffi::c_char,
        defaultValue: ::core::ffi::c_int,
    ) -> ::core::ffi::c_int;
    /// Get tag value from the [`OH_UdmfProperty`].
    ///
    /// # Arguments
    ///
    /// * `pThis` - Represents a pointer to an instance of [`OH_UdmfProperty`].
    ///
    /// * `key` - Represents key-value pair's key.
    ///
    /// # Returns
    ///
    /// * Returns a pointer of the key value string when input parameters valid, otherwise return nullptr.
    /// [`OH_UdmfProperty`]
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_UdmfProperty_GetExtrasStringParam(
        pThis: *mut OH_UdmfProperty,
        key: *const ::core::ffi::c_char,
    ) -> *const ::core::ffi::c_char;
    /// Set tag value to [`OH_UdmfProperty`] .
    ///
    /// # Arguments
    ///
    /// * `pThis` - Represents a pointer to an instance of [`OH_UdmfProperty`].
    ///
    /// * `tag` - Represents new tag param.
    ///
    /// # Returns
    ///
    /// * Returns the status code of the execution. See [`Udmf_ErrCode`].
    /// [`UDMF_E_OK`] success.
    /// [`UDMF_E_INVALID_PARAM`] The error code for common invalid args.
    /// [`OH_UdmfProperty`] Udmf_ErrCode.
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_UdmfProperty_SetTag(
        pThis: *mut OH_UdmfProperty,
        tag: *const ::core::ffi::c_char,
    ) -> ::core::ffi::c_int;
    /// Set Udmf_ShareOption value to [`OH_UdmfProperty`].
    ///
    /// # Arguments
    ///
    /// * `pThis` - Represents a pointer to an instance of [`OH_UdmfProperty`].
    ///
    /// * `option` - Represents new [`Udmf_ShareOption`] param.
    ///
    /// # Returns
    ///
    /// * Returns the status code of the execution. See [`Udmf_ErrCode`].
    /// [`UDMF_E_OK`] success.
    /// [`UDMF_E_INVALID_PARAM`] The error code for common invalid args.
    /// [`OH_UdmfProperty`] Udmf_ShareOption Udmf_ErrCode.
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_UdmfProperty_SetShareOption(
        pThis: *mut OH_UdmfProperty,
        option: Udmf_ShareOption,
    ) -> ::core::ffi::c_int;
    /// Set extras param to [`OH_UdmfProperty`].
    ///
    /// # Arguments
    ///
    /// * `pThis` - Represents a pointer to an instance of [`OH_UdmfProperty`].
    ///
    /// * `key` - Represents extras param's key value.
    ///
    /// * `param` - Represents value of k-v pairs.
    ///
    /// # Returns
    ///
    /// * Returns the status code of the execution. See [`Udmf_ErrCode`].
    /// [`UDMF_E_OK`] success.
    /// [`UDMF_E_INVALID_PARAM`] The error code for common invalid args.
    /// [`OH_UdmfProperty`] Udmf_ErrCode.
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_UdmfProperty_SetExtrasIntParam(
        pThis: *mut OH_UdmfProperty,
        key: *const ::core::ffi::c_char,
        param: ::core::ffi::c_int,
    ) -> ::core::ffi::c_int;
    /// Set extras param to [`OH_UdmfProperty`].
    ///
    /// # Arguments
    ///
    /// * `pThis` - Represents a pointer to an instance of [`OH_UdmfProperty`].
    ///
    /// * `key` - Represents extras param's key value.
    ///
    /// * `param` - Represents value of k-v pairs.
    ///
    /// # Returns
    ///
    /// * Returns the status code of the execution. See [`Udmf_ErrCode`].
    /// [`UDMF_E_OK`] success.
    /// [`UDMF_E_INVALID_PARAM`] The error code for common invalid args.
    /// [`OH_UdmfProperty`] Udmf_ErrCode.
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_UdmfProperty_SetExtrasStringParam(
        pThis: *mut OH_UdmfProperty,
        key: *const ::core::ffi::c_char,
        param: *const ::core::ffi::c_char,
    ) -> ::core::ffi::c_int;
    /// Get [`OH_UdmfData`] data from udmf database.
    ///
    /// # Arguments
    ///
    /// * `key` - Represents database store's key value.
    ///
    /// * `intention` - Represents data type [`Udmf_Intention`]
    ///
    /// * `unifiedData` - Represents output params of [`OH_UdmfData`];
    ///
    /// # Returns
    ///
    /// * Returns the status code of the execution. See [`Udmf_ErrCode`].
    /// [`UDMF_E_OK`] success.
    /// [`UDMF_E_INVALID_PARAM`] The error code for common invalid args.
    /// [`UDMF_ERR`] Internal data error.
    /// [`OH_UdmfProperty`] Udmf_Intention Udmf_ErrCode.
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_Udmf_GetUnifiedData(
        key: *const ::core::ffi::c_char,
        intention: Udmf_Intention,
        unifiedData: *mut OH_UdmfData,
    ) -> ::core::ffi::c_int;
    /// Set [`OH_UdmfData`] data to database.
    ///
    /// # Arguments
    ///
    /// * `intention` - Represents data type [`Udmf_Intention`].
    ///
    /// * `unifiedData` - Represents a pointer to an instance of [`OH_UdmfData`].
    ///
    /// * `key` - Represents return value after set data to database successfully,
    /// it's memory size not less than [`UDMF_KEY_BUFFER_LEN`].
    ///
    /// * `keyLen` - Represents size of key param.
    ///
    /// # Returns
    ///
    /// * Returns the status code of the execution. See [`Udmf_ErrCode`].
    /// [`UDMF_E_OK`] success.
    /// [`UDMF_E_INVALID_PARAM`] The error code for common invalid args.
    /// [`UDMF_ERR`] Internal data error.
    /// [`OH_UdmfProperty`] Udmf_Intention Udmf_ErrCode.
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_Udmf_SetUnifiedData(
        intention: Udmf_Intention,
        unifiedData: *mut OH_UdmfData,
        key: *mut ::core::ffi::c_char,
        keyLen: ::core::ffi::c_uint,
    ) -> ::core::ffi::c_int;
    /// Gets the progress from the [`OH_Udmf_ProgressInfo`].
    ///
    /// # Arguments
    ///
    /// * `progressInfo` - Represents a pointer to an instance of [`OH_Udmf_ProgressInfo`].
    ///
    /// # Returns
    ///
    /// * Returns the progress.
    /// [`OH_Udmf_ProgressInfo`]
    /// Available since API-level: 15
    #[cfg(feature = "api-15")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-15")))]
    pub fn OH_UdmfProgressInfo_GetProgress(
        progressInfo: *mut OH_Udmf_ProgressInfo,
    ) -> ::core::ffi::c_int;
    /// Gets the status from the [`OH_Udmf_ProgressInfo`].
    ///
    /// # Arguments
    ///
    /// * `progressInfo` - Represents a pointer to an instance of [`OH_Udmf_ProgressInfo`].
    ///
    /// # Returns
    ///
    /// * Returns the status code. See [`Udmf_ListenerStatus`].
    /// [`OH_Udmf_ProgressInfo`] Udmf_ListenerStatus
    ///
    /// Available since API-level: 15
    #[cfg(feature = "api-15")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-15")))]
    pub fn OH_UdmfProgressInfo_GetStatus(
        progressInfo: *mut OH_Udmf_ProgressInfo,
    ) -> ::core::ffi::c_int;
    /// Creation a pointer to the instance of the [`OH_UdmfGetDataParams`].
    ///
    ///
    /// # Returns
    ///
    /// * If the operation is successful, a pointer to the instance of the [`OH_UdmfGetDataParams`]
    /// structure is returned. If the operation is failed, nullptr is returned.
    /// [`OH_UdmfGetDataParams`]
    /// Available since API-level: 15
    #[cfg(feature = "api-15")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-15")))]
    pub fn OH_UdmfGetDataParams_Create() -> *mut OH_UdmfGetDataParams;
    /// Destroy a pointer that points to an instance of [`OH_UdmfGetDataParams`].
    ///
    /// # Arguments
    ///
    /// * `pThis` - Represents a pointer to an instance of [`OH_UdmfGetDataParams`].
    /// [`OH_UdmfGetDataParams`]
    /// Available since API-level: 15
    #[cfg(feature = "api-15")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-15")))]
    pub fn OH_UdmfGetDataParams_Destroy(pThis: *mut OH_UdmfGetDataParams);
    /// Sets the destination uri to the [`OH_UdmfGetDataParams`].
    ///
    /// # Arguments
    ///
    /// * `params` - Represents a pointer to an instance of [`OH_UdmfGetDataParams`].
    ///
    /// * `destUri` - Pointer to a destination uri.
    /// [`OH_UdmfGetDataParams`]
    /// Available since API-level: 15
    #[cfg(feature = "api-15")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-15")))]
    pub fn OH_UdmfGetDataParams_SetDestUri(
        params: *mut OH_UdmfGetDataParams,
        destUri: *const ::core::ffi::c_char,
    );
    /// Sets the file conflict options to the [`OH_UdmfGetDataParams`].
    ///
    /// # Arguments
    ///
    /// * `params` - Represents a pointer to an instance of [`OH_UdmfGetDataParams`].
    ///
    /// * `options` - Represents to the file conflict options.
    /// [`OH_UdmfGetDataParams`] Udmf_FileConflictOptions
    ///
    /// Available since API-level: 15
    #[cfg(feature = "api-15")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-15")))]
    pub fn OH_UdmfGetDataParams_SetFileConflictOptions(
        params: *mut OH_UdmfGetDataParams,
        options: Udmf_FileConflictOptions,
    );
    /// Sets the progress indicator to the [`OH_UdmfGetDataParams`].
    ///
    /// # Arguments
    ///
    /// * `params` - Represents a pointer to an instance of [`OH_UdmfGetDataParams`].
    ///
    /// * `progressIndicator` - Represents to the progress indicator.
    /// [`OH_UdmfGetDataParams`] Udmf_ProgressIndicator
    ///
    /// Available since API-level: 15
    #[cfg(feature = "api-15")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-15")))]
    pub fn OH_UdmfGetDataParams_SetProgressIndicator(
        params: *mut OH_UdmfGetDataParams,
        progressIndicator: Udmf_ProgressIndicator,
    );
    /// Sets the progress indicator to the [`OH_UdmfGetDataParams`].
    ///
    /// # Arguments
    ///
    /// * `params` - Represents a pointer to an instance of [`OH_UdmfGetDataParams`].
    ///
    /// * `dataProgressListener` - Represents to the data progress listener.
    /// [`OH_UdmfGetDataParams`] OH_Udmf_DataProgressListener
    ///
    /// Available since API-level: 15
    #[cfg(feature = "api-15")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-15")))]
    pub fn OH_UdmfGetDataParams_SetDataProgressListener(
        params: *mut OH_UdmfGetDataParams,
        dataProgressListener: OH_Udmf_DataProgressListener,
    );
}
