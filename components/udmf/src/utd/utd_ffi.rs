// automatically generated by rust-bindgen 0.71.1

#![allow(non_upper_case_globals)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
pub use ohos_sys_opaque_types::OH_Utd;

extern "C" {
    /// Prouct a pointer to the instance of the [`OH_Utd`].
    ///
    /// # Arguments
    ///
    /// * `typeId` - Represents type of UTD, reference udmf_meta.h.
    ///
    /// # Returns
    ///
    /// * If the operation is successful, a pointer to the instance of the [`OH_Utd`]
    /// structure is returned.If the operation is failed, nullptr is returned.
    /// Must be destroyed with [`OH_Utd_DestroyTypeDescriptor`] when not needed.
    /// [`OH_Utd.`]
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_Utd_Create(typeId: *const ::core::ffi::c_char) -> *mut OH_Utd;
    /// Destroy a pointer that points to the [`OH_Utd`] instance.
    ///
    /// # Arguments
    ///
    /// * `pThis` - Represents a pointer to an instance of [`OH_Utd`].
    /// [`OH_Utd.`]
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_Utd_Destroy(pThis: *mut OH_Utd);
    /// Get type id from the [`OH_Utd`].
    ///
    /// # Arguments
    ///
    /// * `pThis` - Represents a pointer to an instance of [`OH_Utd`].
    ///
    /// # Returns
    ///
    /// * Returns a string pointer when input args normally, otherwise return nullptr.
    /// [`OH_Utd.`]
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_Utd_GetTypeId(pThis: *mut OH_Utd) -> *const ::core::ffi::c_char;
    /// Get description from the [`OH_Utd`].
    ///
    /// # Arguments
    ///
    /// * `pThis` - Represents a pointer to an instance of [`OH_Utd`].
    ///
    /// # Returns
    ///
    /// * Returns a string pointer when input args normally, otherwise return nullptr.
    /// [`OH_Utd.`]
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_Utd_GetDescription(pThis: *mut OH_Utd) -> *const ::core::ffi::c_char;
    /// Get url from the [`OH_Utd`].
    ///
    /// # Arguments
    ///
    /// * `pThis` - Represents a pointer to an instance of [`OH_Utd`].
    ///
    /// # Returns
    ///
    /// * Returns a string pointer when input args normally, otherwise return nullptr.
    /// [`OH_Utd.`]
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_Utd_GetReferenceUrl(pThis: *mut OH_Utd) -> *const ::core::ffi::c_char;
    /// Get icon file from the [`OH_Utd`].
    ///
    /// # Arguments
    ///
    /// * `pThis` - Represents a pointer to an instance of [`OH_Utd`].
    ///
    /// # Returns
    ///
    /// * Returns a string pointer when input args normally, otherwise return nullptr.
    /// [`OH_Utd.`]
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_Utd_GetIconFile(pThis: *mut OH_Utd) -> *const ::core::ffi::c_char;
    /// Get belong to type id of the current [`OH_Utd`].
    ///
    /// # Arguments
    ///
    /// * `pThis` - Represents a pointer to an instance of [`OH_Utd`].
    ///
    /// * `count` - Represents the return types count.
    ///
    /// # Returns
    ///
    /// * Returns string array when input args normally, otherwise return nullptr.
    /// [`OH_Utd.`]
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_Utd_GetBelongingToTypes(
        pThis: *mut OH_Utd,
        count: *mut ::core::ffi::c_uint,
    ) -> *mut *const ::core::ffi::c_char;
    /// Get filename extensions of the current [`OH_Utd`].
    ///
    /// # Arguments
    ///
    /// * `pThis` - Represents a pointer to an instance of [`OH_Utd`].
    ///
    /// * `count` - Represents the return file extensions count.
    ///
    /// # Returns
    ///
    /// * Returns string array when input args normally, otherwise return nullptr.
    /// [`OH_Utd.`]
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_Utd_GetFilenameExtensions(
        pThis: *mut OH_Utd,
        count: *mut ::core::ffi::c_uint,
    ) -> *mut *const ::core::ffi::c_char;
    /// Get mime types of the current [`OH_Utd`].
    ///
    /// # Arguments
    ///
    /// * `pThis` - Represents a pointer to an instance of [`OH_Utd`].
    ///
    /// * `count` - Represents the mime types count.
    ///
    /// # Returns
    ///
    /// * Returns string array when input args normally, otherwise return nullptr.
    /// [`OH_Utd.`]
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_Utd_GetMimeTypes(
        pThis: *mut OH_Utd,
        count: *mut ::core::ffi::c_uint,
    ) -> *mut *const ::core::ffi::c_char;
    /// Get type id by file name extension.
    ///
    /// # Arguments
    ///
    /// * `extension` - Represents file name extension.
    ///
    /// * `count` - Represents the types count.
    ///
    /// # Returns
    ///
    /// * Returns string list of types. Must be destroyed with [`OH_Utd_DestroyStringList`] when not needed.
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_Utd_GetTypesByFilenameExtension(
        extension: *const ::core::ffi::c_char,
        count: *mut ::core::ffi::c_uint,
    ) -> *mut *const ::core::ffi::c_char;
    /// Get type id by mime type.
    ///
    /// # Arguments
    ///
    /// * `mimeType` - Represents mime type
    ///
    /// * `count` - Represents the types count.
    ///
    /// # Returns
    ///
    /// * Returns string list of types. Must be destroyed with [`OH_Utd_DestroyStringList`] when not needed.
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_Utd_GetTypesByMimeType(
        mimeType: *const ::core::ffi::c_char,
        count: *mut ::core::ffi::c_uint,
    ) -> *mut *const ::core::ffi::c_char;
    /// Calculate relationships of two types.
    ///
    /// # Arguments
    ///
    /// * `srcTypeId` - Represents source type id.
    ///
    /// * `destTypeId` - Represents target type id.
    ///
    /// # Returns
    ///
    /// * Returns the status code of the execution.
    /// `false` Represents srcTypeId not belongs to destTypeId.
    /// `true` Represents srcTypeId belongs to destTypeId.
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_Utd_BelongsTo(
        srcTypeId: *const ::core::ffi::c_char,
        destTypeId: *const ::core::ffi::c_char,
    ) -> bool;
    /// Calculate relationships of two types.
    ///
    /// # Arguments
    ///
    /// * `srcTypeId` - Represents source type id.
    ///
    /// * `destTypeId` - Represents target type id.
    ///
    /// # Returns
    ///
    /// * Returns the status code of the execution.
    /// `false` Represents srcTypeId not lower level to destTypeId.
    /// `true` Represents srcTypeId lower level to destTypeId.
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_Utd_IsLower(
        srcTypeId: *const ::core::ffi::c_char,
        destTypeId: *const ::core::ffi::c_char,
    ) -> bool;
    /// Calculate relationships of two types.
    ///
    /// # Arguments
    ///
    /// * `srcTypeId` - Represents source type id.
    ///
    /// * `destTypeId` - Represents target type id.
    ///
    /// # Returns
    ///
    /// * Returns the status code of the execution.
    /// `false` Represents srcTypeId not higher level to destTypeId.
    /// `true` Represents srcTypeId higher level to destTypeId.
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_Utd_IsHigher(
        srcTypeId: *const ::core::ffi::c_char,
        destTypeId: *const ::core::ffi::c_char,
    ) -> bool;
    /// Calculate two [`OH_Utd`]s are equal.
    ///
    /// # Arguments
    ///
    /// * `utd1` - Represents a pointer to [`OH_Utd`] instance.
    ///
    /// * `utd2` - Represents a pointer to [`OH_Utd`] instance.
    ///
    /// # Returns
    ///
    /// * Returns the status code of the execution.
    /// `false` Represents utd1 and utd2 are not equal.
    /// `true` Represents utd1 and utd2 are equal.
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_Utd_Equals(utd1: *mut OH_Utd, utd2: *mut OH_Utd) -> bool;
    /// Destroy string list memory.
    ///
    /// # Arguments
    ///
    /// * `list` - Represents a point to string list.
    ///
    /// * `count` - Represents string count in list.
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_Utd_DestroyStringList(
        list: *mut *const ::core::ffi::c_char,
        count: ::core::ffi::c_uint,
    );
}
