// automatically generated by rust-bindgen 0.71.1

#![allow(non_upper_case_globals)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
use crate::types::*;

#[repr(C)]
pub struct InputMethod_TextAvoidInfo {
    _unused: [u8; 0],
}
extern "C" {
    /// Create a new [`InputMethod_TextAvoidInfo`] instance.
    ///
    /// # Arguments
    ///
    /// * `positionY` - The y-coordinate of the avoid area.
    ///
    /// * `height` - The height of the avoid area.
    ///
    /// # Returns
    ///
    /// * If the creation succeeds, a pointer to the newly created [`InputMethod_TextAvoidInfo`]
    /// instance is returned. If the creation fails, NULL is returned, possible cause is insufficient memory.
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_TextAvoidInfo_Create(positionY: f64, height: f64) -> *mut InputMethod_TextAvoidInfo;
    /// Destroy a [`InputMethod_TextAvoidInfo`] instance.
    ///
    /// # Arguments
    ///
    /// * `info` - Represents a pointer to an [`InputMethod_TextAvoidInfo`] instance which will be destroyed.
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_TextAvoidInfo_Destroy(info: *mut InputMethod_TextAvoidInfo);
    /// Set positionY value into [`InputMethod_TextAvoidInfo`].
    ///
    /// # Arguments
    ///
    /// * `info` - Represents a pointer to an [`InputMethod_TextAvoidInfo`] instance which will be set value.
    ///
    /// * `positionY` - Represents positionY value.
    ///
    /// # Returns
    ///
    /// * Returns a specific error code.
    /// [`IME_ERR_OK`] - success.
    /// [`IME_ERR_NULL_POINTER`] - unexpected null pointer.
    /// Specific error codes can be referenced [`InputMethod_ErrorCode`].
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_TextAvoidInfo_SetPositionY(
        info: *mut InputMethod_TextAvoidInfo,
        positionY: f64,
    ) -> InputMethod_ErrorCode;
    /// Set height value into [`InputMethod_TextAvoidInfo`].
    ///
    /// # Arguments
    ///
    /// * `info` - Represents a pointer to an [`InputMethod_TextAvoidInfo`] instance which will be set value.
    ///
    /// * `height` - Represents height value.
    ///
    /// # Returns
    ///
    /// * Returns a specific error code.
    /// [`IME_ERR_OK`] - success.
    /// [`IME_ERR_NULL_POINTER`] - unexpected null pointer.
    /// Specific error codes can be referenced [`InputMethod_ErrorCode`].
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_TextAvoidInfo_SetHeight(
        info: *mut InputMethod_TextAvoidInfo,
        height: f64,
    ) -> InputMethod_ErrorCode;
    /// Get positionY value from [`InputMethod_TextAvoidInfo`].
    ///
    /// # Arguments
    ///
    /// * `info` - Represents a pointer to an [`InputMethod_TextAvoidInfo`] instance which will be get value from.
    ///
    /// * `positionY` - Represents positionY value.
    ///
    /// # Returns
    ///
    /// * Returns a specific error code.
    /// [`IME_ERR_OK`] - success.
    /// [`IME_ERR_NULL_POINTER`] - unexpected null pointer.
    /// Specific error codes can be referenced [`InputMethod_ErrorCode`].
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_TextAvoidInfo_GetPositionY(
        info: *mut InputMethod_TextAvoidInfo,
        positionY: *mut f64,
    ) -> InputMethod_ErrorCode;
    /// Get height value into [`InputMethod_TextAvoidInfo`].
    ///
    /// # Arguments
    ///
    /// * `info` - Represents a pointer to an [`InputMethod_TextAvoidInfo`] instance which will be get value from.
    ///
    /// * `height` - Represents height value.
    ///
    /// # Returns
    ///
    /// * Returns a specific error code.
    /// [`IME_ERR_OK`] - success.
    /// [`IME_ERR_NULL_POINTER`] - unexpected null pointer.
    /// Specific error codes can be referenced [`InputMethod_ErrorCode`].
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_TextAvoidInfo_GetHeight(
        info: *mut InputMethod_TextAvoidInfo,
        height: *mut f64,
    ) -> InputMethod_ErrorCode;
}
