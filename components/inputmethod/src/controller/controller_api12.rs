/* automatically generated by rust-bindgen 0.70.1 */

#![allow(non_upper_case_globals)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
use crate::attach_options::InputMethod_AttachOptions;
use crate::inputmethod_proxy::InputMethod_InputMethodProxy;
use crate::text_editor_proxy::InputMethod_TextEditorProxy;
use crate::types::*;

extern "C" {
    /** @brief Attach application to the input method service.

    @param textEditorProxy Represents a pointer to an {@link InputMethod_TextEditorProxy} instance.
        The caller needs to manage the lifecycle of textEditorProxy.
        If the call succeeds, caller cannot release textEditorProxy until the next attach or detach call.
    @param options Represents a pointer to an {@link InputMethod_AttachOptions} instance.
        The options when attaching input method.
    @param inputMethodProxy Represents a pointer to an {@link InputMethod_InputMethodProxy} instance.
        Lifecycle is mantianed until the next attach or detach call.
    @return Returns a specific error code.
        {@link IME_ERR_OK} - success.
        {@link IME_ERR_PARAMCHECK} - parameter check failed.
        {@link IME_ERR_IMCLIENT} - input method client error.
        {@link IME_ERR_IMMS} - input method manager service error.
        {@link IME_ERR_NULL_POINTER} - unexpected null pointer.
    Specific error codes can be referenced {@link InputMethod_ErrorCode}.
    @since 12*/
    pub fn OH_InputMethodController_Attach(
        textEditorProxy: *mut InputMethod_TextEditorProxy,
        options: *mut InputMethod_AttachOptions,
        inputMethodProxy: *mut *mut InputMethod_InputMethodProxy,
    ) -> InputMethod_ErrorCode;
    /** @brief Detach application from the input method service.

    @param inputMethodProxy Represents a pointer to an {@link InputMethod_InputMethodProxy} instance.
        The inputMethodProxy is obtained from {@link OH_InputMethodController_Attach}.
    @return Returns a specific error code.
        {@link IME_ERR_OK} - success.
        {@link IME_ERR_IMCLIENT} - input method client error.
        {@link IME_ERR_IMMS} - input method manager service error.
        {@link IME_ERR_NULL_POINTER} - unexpected null pointer.
    Specific error codes can be referenced {@link InputMethod_ErrorCode}.
    @since 12*/
    pub fn OH_InputMethodController_Detach(
        inputMethodProxy: *mut InputMethod_InputMethodProxy,
    ) -> InputMethod_ErrorCode;
}
