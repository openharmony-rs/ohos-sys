/* automatically generated by rust-bindgen 0.69.4 */

#![allow(non_upper_case_globals)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
use crate::private_command::InputMethod_PrivateCommand;
use crate::text_config::InputMethod_TextConfig;
use crate::types::*;

#[repr(C)]
pub struct InputMethod_TextEditorProxy {
    _unused: [u8; 0],
}
/** @brief Defines the function called when input method getting text config.

You need to implement this function, set it to {@link InputMethod_TextEditorProxy} through {@link
OH_TextEditorProxy_SetGetTextConfigFunc}, and use {@link OH_InputMethodController_Attach} to complete the
registration.\n

@param textEditorProxy Represents a pointer to an {@link InputMethod_TextEditorProxy} instance.
@param config Represents a pointer to an {@link InputMethod_TextConfig} instance.
@since 12*/
pub type OH_TextEditorProxy_GetTextConfigFunc = ::core::option::Option<
    unsafe extern "C" fn(
        textEditorProxy: *mut InputMethod_TextEditorProxy,
        config: *mut InputMethod_TextConfig,
    ),
>;
/** @brief Defines the function called when input method inserting text.

You need to implement this function, set it to {@link InputMethod_TextEditorProxy} through {@link
OH_TextEditorProxy_SetInsertTextFunc}, and use {@link OH_InputMethodController_Attach} to complete the
registration.\n

@param textEditorProxy Represents a pointer to the {@link InputMethod_TextEditorProxy} instance which will be set
in.
@param text Represents a pointer to the text to be inserted.
@param length Represents the length of the text to be inserted.
@since 12*/
pub type OH_TextEditorProxy_InsertTextFunc = ::core::option::Option<
    unsafe extern "C" fn(
        textEditorProxy: *mut InputMethod_TextEditorProxy,
        text: *const u16,
        length: usize,
    ),
>;
/** @brief Defines the function called when input method deleting text forward.

You need to implement this function, set it to {@link InputMethod_TextEditorProxy} through {@link
OH_TextEditorProxy_SetDeleteForwardFunc}, and use {@link OH_InputMethodController_Attach} to complete the
registration.\n

@param textEditorProxy Represents a pointer to the {@link InputMethod_TextEditorProxy} instance which will be set
in.
@param length Represents the length of the text to be deleted.
@since 12*/
pub type OH_TextEditorProxy_DeleteForwardFunc = ::core::option::Option<
    unsafe extern "C" fn(textEditorProxy: *mut InputMethod_TextEditorProxy, length: i32),
>;
/** @brief Defines the function called when input method deleting text backward.

You need to implement this function, set it to {@link InputMethod_TextEditorProxy} through {@link
OH_TextEditorProxy_SetDeleteForwardFunc}, and use {@link OH_InputMethodController_Attach} to complete the
registration.\n

@param textEditorProxy Represents a pointer to the {@link InputMethod_TextEditorProxy} instance which will be set
in.
@param length Represents the length of the text to be deleted.
@since 12*/
pub type OH_TextEditorProxy_DeleteBackwardFunc = ::core::option::Option<
    unsafe extern "C" fn(textEditorProxy: *mut InputMethod_TextEditorProxy, length: i32),
>;
/** @brief Called when input method notifying keyboard status.

You need to implement this function, set it to {@link InputMethod_TextEditorProxy} through {@link
OH_TextEditorProxy_SetSendKeyboardStatusFunc}, and use {@link OH_InputMethodController_Attach} to complete the
registration.\n

@param textEditorProxy Represents a pointer to an {@link InputMethod_TextEditorProxy} instance which will be set in.
@param keyboardStatus Keyboard status, which is defined in {@link InputMethod_KeyboardStatus}.
@since 12*/
pub type OH_TextEditorProxy_SendKeyboardStatusFunc = ::core::option::Option<
    unsafe extern "C" fn(
        textEditorProxy: *mut InputMethod_TextEditorProxy,
        keyboardStatus: InputMethod_KeyboardStatus,
    ),
>;
/** @brief Called when input method sending enter key.

You need to implement this function, set it to {@link InputMethod_TextEditorProxy} through {@link
OH_TextEditorProxy_SetSendEnterKeyFunc}, and use {@link OH_InputMethodController_Attach} to complete the
registration.\n

@param textEditorProxy Represents a pointer to an {@link InputMethod_TextEditorProxy} instance which will be set in.
@param enterKeyType Enter key type, which is defined in {@link InputMethod_EnterKeyType}.
@since 12*/
pub type OH_TextEditorProxy_SendEnterKeyFunc = ::core::option::Option<
    unsafe extern "C" fn(
        textEditorProxy: *mut InputMethod_TextEditorProxy,
        enterKeyType: InputMethod_EnterKeyType,
    ),
>;
/** @brief Called when input method requesting to move cursor.

You need to implement this function, set it to {@link InputMethod_TextEditorProxy} through {@link
OH_TextEditorProxy_SetMoveCursorFunc}, and use {@link OH_InputMethodController_Attach} to complete the
registration.\n

@param textEditorProxy Represents a pointer to an {@link InputMethod_TextEditorProxy} instance which will be set in.
@param direction Represents the direction of the cursor movement, which is defined in {@link InputMethod_Direction}.
@since 12*/
pub type OH_TextEditorProxy_MoveCursorFunc = ::core::option::Option<
    unsafe extern "C" fn(
        textEditorProxy: *mut InputMethod_TextEditorProxy,
        direction: InputMethod_Direction,
    ),
>;
/** @brief Called when input method requesting to set selection.

You need to implement this function, set it to {@link InputMethod_TextEditorProxy} through {@link
OH_TextEditorProxy_SetHandleSetSelectionFunc}, and use {@link OH_InputMethodController_Attach} to complete the
registration.\n

@param textEditorProxy Represents a pointer to an {@link InputMethod_TextEditorProxy} instance which will be set in.
@param start Represents the start position of the selection.
@param end Represents the end position of the selection.
@since 12*/
pub type OH_TextEditorProxy_HandleSetSelectionFunc = ::core::option::Option<
    unsafe extern "C" fn(textEditorProxy: *mut InputMethod_TextEditorProxy, start: i32, end: i32),
>;
/** @brief Called when input method sending extend action.

You need to implement this function, set it to {@link InputMethod_TextEditorProxy} through {@link
OH_TextEditorProxy_SetHandleExtendActionFunc}, and use {@link OH_InputMethodController_Attach} to complete the
registration.\n

@param textEditorProxy Represents a pointer to an {@link InputMethod_TextEditorProxy} instance which will be set in.
@param action Represents the extend action, which is defined in {@link InputMethod_ExtendAction}.
@since 12*/
pub type OH_TextEditorProxy_HandleExtendActionFunc = ::core::option::Option<
    unsafe extern "C" fn(
        textEditorProxy: *mut InputMethod_TextEditorProxy,
        action: InputMethod_ExtendAction,
    ),
>;
/** @brief Called when input method requesting to get left text of cursor.

You need to implement this function, set it to {@link InputMethod_TextEditorProxy} through {@link
OH_TextEditorProxy_SetGetLeftTextOfCursorFunc}, and use {@link OH_InputMethodController_Attach} to complete the
registration.\n

@param textEditorProxy Represents a pointer to an {@link InputMethod_TextEditorProxy} instance which will be set in.
@param number Represents the number of characters to be get.
@param text Represents the left text of cursor, you need to assing this parameter.
@param length Represents the length of the left text of cursor, you need to assing this parameter.
@since 12*/
pub type OH_TextEditorProxy_GetLeftTextOfCursorFunc = ::core::option::Option<
    unsafe extern "C" fn(
        textEditorProxy: *mut InputMethod_TextEditorProxy,
        number: i32,
        text: *mut u16,
        length: *mut usize,
    ),
>;
/** @brief Called when input method requesting to get right text of cursor.

You need to implement this function, set it to {@link InputMethod_TextEditorProxy} through {@link
OH_TextEditorProxy_SetGetRightTextOfCursorFunc}, and use {@link OH_InputMethodController_Attach} to complete the
registration.\n

@param textEditorProxy Represents a pointer to an {@link InputMethod_TextEditorProxy} instance which will be set in.
@param number Represents the number of characters to be get.
@param text Represents the right text of cursor, you need to assing this parameter.
@param length Represents the length of the right text of cursor.
@since 12*/
pub type OH_TextEditorProxy_GetRightTextOfCursorFunc = ::core::option::Option<
    unsafe extern "C" fn(
        textEditorProxy: *mut InputMethod_TextEditorProxy,
        number: i32,
        text: *mut u16,
        length: *mut usize,
    ),
>;
/** @brief Called when input method requesting to get text index at cursor.

You need to implement this function, set it to {@link InputMethod_TextEditorProxy} through {@link
OH_TextEditorProxy_SetGetTextIndexAtCursorFunc}, and use {@link OH_InputMethodController_Attach} to complete the
registration.\n

@param textEditorProxy Represents a pointer to an {@link InputMethod_TextEditorProxy} instance which will be set in.
@return Returns the index of text at cursor.
@since 12*/
pub type OH_TextEditorProxy_GetTextIndexAtCursorFunc = ::core::option::Option<
    unsafe extern "C" fn(textEditorProxy: *mut InputMethod_TextEditorProxy) -> i32,
>;
/** @brief Called when input method sending private command.

You need to implement this function, set it to {@link InputMethod_TextEditorProxy} through {@link
OH_TextEditorProxy_SetReceivePrivateCommandFunc}, and use {@link OH_InputMethodController_Attach} to complete the
registration.\n

@param textEditorProxy Represents a pointer to an {@link InputMethod_TextEditorProxy} instance which will be set in.
@param privateCommand Private command from input method.
@param size Size of private command.
@return Returns the result of handling private command.
@since 12*/
pub type OH_TextEditorProxy_ReceivePrivateCommandFunc = ::core::option::Option<
    unsafe extern "C" fn(
        textEditorProxy: *mut InputMethod_TextEditorProxy,
        privateCommand: *mut *mut InputMethod_PrivateCommand,
        size: usize,
    ) -> i32,
>;
/** @brief Called when input method setting preview text.

You need to implement this function, set it to {@link InputMethod_TextEditorProxy} through {@link
OH_TextEditorProxy_SetReceivePrivateCommandFunc}, and use {@link OH_InputMethodController_Attach} to complete the
registration.\n

@param textEditorProxy Represents a pointer to an {@link InputMethod_TextEditorProxy} instance which will be set in.
@param text Represents text to be previewd.
@param length Length of preview text.
@param start Start position of preview text.
@param end End position of preview text.
@return Returns the result of setting preview text.
@since 12*/
pub type OH_TextEditorProxy_SetPreviewTextFunc = ::core::option::Option<
    unsafe extern "C" fn(
        textEditorProxy: *mut InputMethod_TextEditorProxy,
        text: *const u16,
        length: usize,
        start: i32,
        end: i32,
    ) -> i32,
>;
/** @brief Called when input method finishing preview text.

You need to implement this function, set it to {@link InputMethod_TextEditorProxy} through {@link
OH_TextEditorProxy_SetReceivePrivateCommandFunc}, and use {@link OH_InputMethodController_Attach} to complete the
registration.\n

@param textEditorProxy Represents a pointer to an {@link InputMethod_TextEditorProxy} instance which will be set in.
@since 12*/
pub type OH_TextEditorProxy_FinishTextPreviewFunc =
    ::core::option::Option<unsafe extern "C" fn(textEditorProxy: *mut InputMethod_TextEditorProxy)>;
extern "C" {
    /** @brief Create a new {@link InputMethod_TextEditorProxy} instance.

    @return If the creation succeeds, a pointer to the newly created {@link InputMethod_TextEditorProxy}
    instance is returned. If the creation fails, NULL is returned, possible cause is insufficient memory.
    @since 12*/
    pub fn OH_TextEditorProxy_Create() -> *mut InputMethod_TextEditorProxy;
    /** @brief Destroy a {@link InputMethod_TextEditorProxy} instance.

    @param proxy The {@link InputMethod_TextEditorProxy} instance to be destroyed.
    @since 12*/
    pub fn OH_TextEditorProxy_Destroy(proxy: *mut InputMethod_TextEditorProxy);
    /** @brief Set function {@link OH_TextEditorProxy_GetTextConfigFunc} into {@link InputMethod_TextEditorProxy}.

    @param proxy Represents a pointer to an {@link InputMethod_TextEditorProxy} instance which will be set function in.
    @param getTextConfigFunc Represents function {@link OH_TextEditorProxy_GetTextConfigFunc} which will be set.
    @return Returns a specific error code.
        {@link IME_ERR_OK} - success.
        {@link IME_ERR_NULL_POINTER} - unexpected null pointer.
    Specific error codes can be referenced {@link InputMethod_ErrorCode}.
    @since 12*/
    pub fn OH_TextEditorProxy_SetGetTextConfigFunc(
        proxy: *mut InputMethod_TextEditorProxy,
        getTextConfigFunc: OH_TextEditorProxy_GetTextConfigFunc,
    ) -> InputMethod_ErrorCode;
    /** @brief Set function {@link OH_TextEditorProxy_InsertTextFunc} into {@link InputMethod_TextEditorProxy}.

    @param proxy Represents a pointer to an {@link InputMethod_TextEditorProxy} instance which will be set function in.
    @param insertTextFunc Represents function {@link OH_TextEditorProxy_InsertTextFunc} which will be set.
    @return Returns a specific error code.
        {@link IME_ERR_OK} - success.
        {@link IME_ERR_NULL_POINTER} - unexpected null pointer.
    Specific error codes can be referenced {@link InputMethod_ErrorCode}.
    @since 12*/
    pub fn OH_TextEditorProxy_SetInsertTextFunc(
        proxy: *mut InputMethod_TextEditorProxy,
        insertTextFunc: OH_TextEditorProxy_InsertTextFunc,
    ) -> InputMethod_ErrorCode;
    /** @brief Set function {@link OH_TextEditorProxy_SetDeleteForwardFunc} into {@link InputMethod_TextEditorProxy}.

    @param proxy Represents a pointer to an {@link InputMethod_TextEditorProxy} instance which will be set function in.
    @param deleteForwardFunc Represents function {@link OH_TextEditorProxy_DeleteForwardFunc} which will be set.
    @return Returns a specific error code.
        {@link IME_ERR_OK} - success.
        {@link IME_ERR_NULL_POINTER} - unexpected null pointer.
    Specific error codes can be referenced {@link InputMethod_ErrorCode}.
    @since 12*/
    pub fn OH_TextEditorProxy_SetDeleteForwardFunc(
        proxy: *mut InputMethod_TextEditorProxy,
        deleteForwardFunc: OH_TextEditorProxy_DeleteForwardFunc,
    ) -> InputMethod_ErrorCode;
    /** @brief Set function {@link OH_TextEditorProxy_DeleteBackwardFunc} into {@link InputMethod_TextEditorProxy}.

    @param proxy Represents a pointer to an {@link InputMethod_TextEditorProxy} instance which will be set function in.
    @param deleteBackwardFunc Represents function {@link OH_TextEditorProxy_DeleteBackwardFunc} which will be set.
    @return Returns a specific error code.
        {@link IME_ERR_OK} - success.
        {@link IME_ERR_NULL_POINTER} - unexpected null pointer.
    Specific error codes can be referenced {@link InputMethod_ErrorCode}.
    @since 12*/
    pub fn OH_TextEditorProxy_SetDeleteBackwardFunc(
        proxy: *mut InputMethod_TextEditorProxy,
        deleteBackwardFunc: OH_TextEditorProxy_DeleteBackwardFunc,
    ) -> InputMethod_ErrorCode;
    /** @brief Set function {@link OH_TextEditorProxy_SendKeyboardStatusFunc} into {@link InputMethod_TextEditorProxy}.

    @param proxy Represents a pointer to an {@link InputMethod_TextEditorProxy} instance which will be set function in.
    @param sendKeyboardStatusFunc Represents function {@link OH_TextEditorProxy_SendKeyboardStatusFunc} which will be
    set.
    @return Returns a specific error code.
        {@link IME_ERR_OK} - success.
        {@link IME_ERR_NULL_POINTER} - unexpected null pointer.
    Specific error codes can be referenced {@link InputMethod_ErrorCode}.
    @since 12*/
    pub fn OH_TextEditorProxy_SetSendKeyboardStatusFunc(
        proxy: *mut InputMethod_TextEditorProxy,
        sendKeyboardStatusFunc: OH_TextEditorProxy_SendKeyboardStatusFunc,
    ) -> InputMethod_ErrorCode;
    /** @brief Set function {@link OH_TextEditorProxy_SendEnterKeyFunc} into {@link InputMethod_TextEditorProxy}.

    @param proxy Represents a pointer to an {@link InputMethod_TextEditorProxy} instance which will be set function in.
    @param sendEnterKeyFunc Represents function {@link OH_TextEditorProxy_SendEnterKeyFunc} which will be set.
    @return Returns a specific error code.
        {@link IME_ERR_OK} - success.
        {@link IME_ERR_NULL_POINTER} - unexpected null pointer.
    Specific error codes can be referenced {@link InputMethod_ErrorCode}.
    @since 12*/
    pub fn OH_TextEditorProxy_SetSendEnterKeyFunc(
        proxy: *mut InputMethod_TextEditorProxy,
        sendEnterKeyFunc: OH_TextEditorProxy_SendEnterKeyFunc,
    ) -> InputMethod_ErrorCode;
    /** @brief Set function {@link OH_TextEditorProxy_MoveCursorFunc} into {@link InputMethod_TextEditorProxy}.

    @param proxy Represents a pointer to an {@link InputMethod_TextEditorProxy} instance which will be set function in.
    @param moveCursorFunc Represents function {@link OH_TextEditorProxy_MoveCursorFunc} which will be set.
    @return Returns a specific error code.
        {@link IME_ERR_OK} - success.
        {@link IME_ERR_NULL_POINTER} - unexpected null pointer.
    Specific error codes can be referenced {@link InputMethod_ErrorCode}.
    @since 12*/
    pub fn OH_TextEditorProxy_SetMoveCursorFunc(
        proxy: *mut InputMethod_TextEditorProxy,
        moveCursorFunc: OH_TextEditorProxy_MoveCursorFunc,
    ) -> InputMethod_ErrorCode;
    /** @brief Set function {@link OH_TextEditorProxy_HandleSetSelectionFunc} into {@link InputMethod_TextEditorProxy}.

    @param proxy Represents a pointer to an {@link InputMethod_TextEditorProxy} instance which will be set function in.
    @param handleSetSelectionFunc Represents function {@link OH_TextEditorProxy_HandleSetSelectionFunc} which will be
    set.
    @return Returns a specific error code.
        {@link IME_ERR_OK} - success.
        {@link IME_ERR_NULL_POINTER} - unexpected null pointer.
    Specific error codes can be referenced {@link InputMethod_ErrorCode}.
    @since 12*/
    pub fn OH_TextEditorProxy_SetHandleSetSelectionFunc(
        proxy: *mut InputMethod_TextEditorProxy,
        handleSetSelectionFunc: OH_TextEditorProxy_HandleSetSelectionFunc,
    ) -> InputMethod_ErrorCode;
    /** @brief Set function {@link OH_TextEditorProxy_HandleExtendActionFunc} into {@link InputMethod_TextEditorProxy}.

    @param proxy Represents a pointer to an {@link InputMethod_TextEditorProxy} instance which will be set function in.
    @param handleExtendActionFunc Represents function {@link OH_TextEditorProxy_HandleExtendActionFunc} which will be
    set.
    @return Returns a specific error code.
        {@link IME_ERR_OK} - success.
        {@link IME_ERR_NULL_POINTER} - unexpected null pointer.
    Specific error codes can be referenced {@link InputMethod_ErrorCode}.
    @since 12*/
    pub fn OH_TextEditorProxy_SetHandleExtendActionFunc(
        proxy: *mut InputMethod_TextEditorProxy,
        handleExtendActionFunc: OH_TextEditorProxy_HandleExtendActionFunc,
    ) -> InputMethod_ErrorCode;
    /** @brief Set function {@link OH_TextEditorProxy_GetLeftTextOfCursorFunc} into {@link InputMethod_TextEditorProxy}.

    @param proxy Represents a pointer to an {@link InputMethod_TextEditorProxy} instance which will be set function in.
    @param getLeftTextOfCursorFunc Represents function {@link OH_TextEditorProxy_GetLeftTextOfCursorFunc} which will
    be set.
    @return Returns a specific error code.
        {@link IME_ERR_OK} - success.
        {@link IME_ERR_NULL_POINTER} - unexpected null pointer.
    Specific error codes can be referenced {@link InputMethod_ErrorCode}.
    @since 12*/
    pub fn OH_TextEditorProxy_SetGetLeftTextOfCursorFunc(
        proxy: *mut InputMethod_TextEditorProxy,
        getLeftTextOfCursorFunc: OH_TextEditorProxy_GetLeftTextOfCursorFunc,
    ) -> InputMethod_ErrorCode;
    /** @brief Set function {@link OH_TextEditorProxy_GetRightTextOfCursorFunc} into {@link InputMethod_TextEditorProxy}.

    @param proxy Represents a pointer to an {@link InputMethod_TextEditorProxy} instance which will be set function in.
    @param getRightTextOfCursorFunc Represents function {@link OH_TextEditorProxy_GetRightTextOfCursorFunc} which
    will be set.
    @return Returns a specific error code.
        {@link IME_ERR_OK} - success.
        {@link IME_ERR_NULL_POINTER} - unexpected null pointer.
    Specific error codes can be referenced {@link InputMethod_ErrorCode}.
    @since 12*/
    pub fn OH_TextEditorProxy_SetGetRightTextOfCursorFunc(
        proxy: *mut InputMethod_TextEditorProxy,
        getRightTextOfCursorFunc: OH_TextEditorProxy_GetRightTextOfCursorFunc,
    ) -> InputMethod_ErrorCode;
    /** @brief Set function {@link OH_TextEditorProxy_GetTextIndexAtCursorFunc} into {@link InputMethod_TextEditorProxy}.

    @param proxy Represents a pointer to an {@link InputMethod_TextEditorProxy} instance which will be set function in.
    @param getTextIndexAtCursorFunc Represents function {@link OH_TextEditorProxy_GetTextIndexAtCursorFunc} which
    will be set.
    @return Returns a specific error code.
        {@link IME_ERR_OK} - success.
        {@link IME_ERR_NULL_POINTER} - unexpected null pointer.
    Specific error codes can be referenced {@link InputMethod_ErrorCode}.
    @since 12*/
    pub fn OH_TextEditorProxy_SetGetTextIndexAtCursorFunc(
        proxy: *mut InputMethod_TextEditorProxy,
        getTextIndexAtCursorFunc: OH_TextEditorProxy_GetTextIndexAtCursorFunc,
    ) -> InputMethod_ErrorCode;
    /** @brief Set function {@link OH_TextEditorProxy_ReceivePrivateCommandFunc} into {@link InputMethod_TextEditorProxy}.

    @param proxy Represents a pointer to an {@link InputMethod_TextEditorProxy} instance which will be set function in.
    @param receivePrivateCommandFunc Represents function {@link OH_TextEditorProxy_ReceivePrivateCommandFunc} which
    will be set.
    @return Returns a specific error code.
        {@link IME_ERR_OK} - success.
        {@link IME_ERR_NULL_POINTER} - unexpected null pointer.
    Specific error codes can be referenced {@link InputMethod_ErrorCode}.
    @since 12*/
    pub fn OH_TextEditorProxy_SetReceivePrivateCommandFunc(
        proxy: *mut InputMethod_TextEditorProxy,
        receivePrivateCommandFunc: OH_TextEditorProxy_ReceivePrivateCommandFunc,
    ) -> InputMethod_ErrorCode;
    /** @brief Set function {@link OH_TextEditorProxy_SetPreviewTextFunc} into {@link InputMethod_TextEditorProxy}.

    @param proxy Represents a pointer to an {@link InputMethod_TextEditorProxy} instance which will be set function in.
    @param setPreviewTextFunc Represents function {@link OH_TextEditorProxy_SetPreviewTextFunc} which will be set.
    @return Returns a specific error code.
        {@link IME_ERR_OK} - success.
        {@link IME_ERR_NULL_POINTER} - unexpected null pointer.
    Specific error codes can be referenced {@link InputMethod_ErrorCode}.
    @since 12*/
    pub fn OH_TextEditorProxy_SetSetPreviewTextFunc(
        proxy: *mut InputMethod_TextEditorProxy,
        setPreviewTextFunc: OH_TextEditorProxy_SetPreviewTextFunc,
    ) -> InputMethod_ErrorCode;
    /** @brief Set function {@link OH_TextEditorProxy_FinishTextPreviewFunc} into {@link InputMethod_TextEditorProxy}.

    @param proxy Represents a pointer to an {@link InputMethod_TextEditorProxy} instance which will be set function in.
    @param finishTextPreviewFunc Represents function {@link OH_TextEditorProxy_FinishTextPreviewFunc} which will be
    set.
    @return Returns a specific error code.
        {@link IME_ERR_OK} - success.
        {@link IME_ERR_NULL_POINTER} - unexpected null pointer.
    Specific error codes can be referenced {@link InputMethod_ErrorCode}.
    @since 12*/
    pub fn OH_TextEditorProxy_SetFinishTextPreviewFunc(
        proxy: *mut InputMethod_TextEditorProxy,
        finishTextPreviewFunc: OH_TextEditorProxy_FinishTextPreviewFunc,
    ) -> InputMethod_ErrorCode;
    /** @brief Get function {@link OH_TextEditorProxy_GetTextConfigFunc} from {@link InputMethod_TextEditorProxy}.

    @param proxy Represents a pointer to an {@link InputMethod_TextEditorProxy} instance which will be get function
    from.
    @param getTextConfigFunc Represents function {@link OH_TextEditorProxy_GetTextConfigFunc} which will be get.
    @return Returns a specific error code.
        {@link IME_ERR_OK} - success.
        {@link IME_ERR_NULL_POINTER} - unexpected null pointer.
    Specific error codes can be referenced {@link InputMethod_ErrorCode}.
    @since 12*/
    pub fn OH_TextEditorProxy_GetGetTextConfigFunc(
        proxy: *mut InputMethod_TextEditorProxy,
        getTextConfigFunc: *mut OH_TextEditorProxy_GetTextConfigFunc,
    ) -> InputMethod_ErrorCode;
    /** @brief Get function {@link OH_TextEditorProxy_InsertTextFunc} from {@link InputMethod_TextEditorProxy}.

    @param proxy Represents a pointer to an {@link InputMethod_TextEditorProxy} instance which will be get function
    from.
    @param insertTextFunc Represents function {@link OH_TextEditorProxy_InsertTextFunc} which will be get.
    @return Returns a specific error code.
        {@link IME_ERR_OK} - success.
        {@link IME_ERR_NULL_POINTER} - unexpected null pointer.
    Specific error codes can be referenced {@link InputMethod_ErrorCode}.
    @since 12*/
    pub fn OH_TextEditorProxy_GetInsertTextFunc(
        proxy: *mut InputMethod_TextEditorProxy,
        insertTextFunc: *mut OH_TextEditorProxy_InsertTextFunc,
    ) -> InputMethod_ErrorCode;
    /** @brief Get function {@link OH_TextEditorProxy_DeleteForwardFunc} from {@link InputMethod_TextEditorProxy}.

    @param proxy Represents a pointer to an {@link InputMethod_TextEditorProxy} instance which will be get function
    from.
    @param deleteForwardFunc Represents function {@link OH_TextEditorProxy_DeleteForwardFunc} which will be get.
    @return Returns a specific error code.
        {@link IME_ERR_OK} - success.
        {@link IME_ERR_NULL_POINTER} - unexpected null pointer.
    Specific error codes can be referenced {@link InputMethod_ErrorCode}.
    @since 12*/
    pub fn OH_TextEditorProxy_GetDeleteForwardFunc(
        proxy: *mut InputMethod_TextEditorProxy,
        deleteForwardFunc: *mut OH_TextEditorProxy_DeleteForwardFunc,
    ) -> InputMethod_ErrorCode;
    /** @brief Get function {@link OH_TextEditorProxy_DeleteBackwardFunc} from {@link InputMethod_TextEditorProxy}.

    @param proxy Represents a pointer to an {@link InputMethod_TextEditorProxy} instance which will be get function
    from.
    @param deleteBackwardFunc Represents function {@link OH_TextEditorProxy_DeleteBackwardFunc} which will be get.
    @return Returns a specific error code.
        {@link IME_ERR_OK} - success.
        {@link IME_ERR_NULL_POINTER} - unexpected null pointer.
    Specific error codes can be referenced {@link InputMethod_ErrorCode}.
    @since 12*/
    pub fn OH_TextEditorProxy_GetDeleteBackwardFunc(
        proxy: *mut InputMethod_TextEditorProxy,
        deleteBackwardFunc: *mut OH_TextEditorProxy_DeleteBackwardFunc,
    ) -> InputMethod_ErrorCode;
    /** @brief Get function {@link OH_TextEditorProxy_SendKeyboardStatusFunc} from {@link InputMethod_TextEditorProxy}.

    @param proxy Represents a pointer to an {@link InputMethod_TextEditorProxy} instance which will be get function
    from.
    @param sendKeyboardStatusFunc Represents function {@link OH_TextEditorProxy_SendKeyboardStatusFunc} which will be
    get.
    @return Returns a specific error code.
        {@link IME_ERR_OK} - success.
        {@link IME_ERR_NULL_POINTER} - unexpected null pointer.
    Specific error codes can be referenced {@link InputMethod_ErrorCode}.
    @since 12*/
    pub fn OH_TextEditorProxy_GetSendKeyboardStatusFunc(
        proxy: *mut InputMethod_TextEditorProxy,
        sendKeyboardStatusFunc: *mut OH_TextEditorProxy_SendKeyboardStatusFunc,
    ) -> InputMethod_ErrorCode;
    /** @brief Get function {@link OH_TextEditorProxy_SendEnterKeyFunc} from {@link InputMethod_TextEditorProxy}.

    @param proxy Represents a pointer to an {@link InputMethod_TextEditorProxy} instance which will be get function
    from.
    @param sendEnterKeyFunc Represents function {@link OH_TextEditorProxy_SendEnterKeyFunc} which will be get.
    @return Returns a specific error code.
        {@link IME_ERR_OK} - success.
        {@link IME_ERR_NULL_POINTER} - unexpected null pointer.
    Specific error codes can be referenced {@link InputMethod_ErrorCode}.
    @since 12*/
    pub fn OH_TextEditorProxy_GetSendEnterKeyFunc(
        proxy: *mut InputMethod_TextEditorProxy,
        sendEnterKeyFunc: *mut OH_TextEditorProxy_SendEnterKeyFunc,
    ) -> InputMethod_ErrorCode;
    /** @brief Get function {@link OH_TextEditorProxy_MoveCursorFunc} from {@link InputMethod_TextEditorProxy}.

    @param proxy Represents a pointer to an {@link InputMethod_TextEditorProxy} instance which will be get function
    from.
    @param moveCursorFunc Represents function {@link OH_TextEditorProxy_MoveCursorFunc} which will be get.
    @return Returns a specific error code.
        {@link IME_ERR_OK} - success.
        {@link IME_ERR_NULL_POINTER} - unexpected null pointer.
    Specific error codes can be referenced {@link InputMethod_ErrorCode}.
    @since 12*/
    pub fn OH_TextEditorProxy_GetMoveCursorFunc(
        proxy: *mut InputMethod_TextEditorProxy,
        moveCursorFunc: *mut OH_TextEditorProxy_MoveCursorFunc,
    ) -> InputMethod_ErrorCode;
    /** @brief Get function {@link OH_TextEditorProxy_HandleSetSelectionFunc} from {@link InputMethod_TextEditorProxy}.

    @param proxy Represents a pointer to an {@link InputMethod_TextEditorProxy} instance which will be get function
    from.
    @param handleSetSelectionFunc Represents function {@link OH_TextEditorProxy_HandleSetSelectionFunc} which will be
    get.
    @return Returns a specific error code.
        {@link IME_ERR_OK} - success.
        {@link IME_ERR_NULL_POINTER} - unexpected null pointer.
    Specific error codes can be referenced {@link InputMethod_ErrorCode}.
    @since 12*/
    pub fn OH_TextEditorProxy_GetHandleSetSelectionFunc(
        proxy: *mut InputMethod_TextEditorProxy,
        handleSetSelectionFunc: *mut OH_TextEditorProxy_HandleSetSelectionFunc,
    ) -> InputMethod_ErrorCode;
    /** @brief Get function {@link OH_TextEditorProxy_HandleExtendActionFunc} from {@link InputMethod_TextEditorProxy}.

    @param proxy Represents a pointer to an {@link InputMethod_TextEditorProxy} instance which will be get function
    from.
    @param handleExtendActionFunc Represents function {@link OH_TextEditorProxy_HandleExtendActionFunc} which will be
    get.
    @return Returns a specific error code.
        {@link IME_ERR_OK} - success.
        {@link IME_ERR_NULL_POINTER} - unexpected null pointer.
    Specific error codes can be referenced {@link InputMethod_ErrorCode}.
    @since 12*/
    pub fn OH_TextEditorProxy_GetHandleExtendActionFunc(
        proxy: *mut InputMethod_TextEditorProxy,
        handleExtendActionFunc: *mut OH_TextEditorProxy_HandleExtendActionFunc,
    ) -> InputMethod_ErrorCode;
    /** @brief Get function {@link OH_TextEditorProxy_GetLeftTextOfCursorFunc} from {@link InputMethod_TextEditorProxy}.

    @param proxy Represents a pointer to an {@link InputMethod_TextEditorProxy} instance which will be get function
    from.
    @param getLeftTextOfCursorFunc Represents function {@link OH_TextEditorProxy_GetLeftTextOfCursorFunc} which will
    be get.
    @return Returns a specific error code.
        {@link IME_ERR_OK} - success.
        {@link IME_ERR_NULL_POINTER} - unexpected null pointer.
    Specific error codes can be referenced {@link InputMethod_ErrorCode}.
    @since 12*/
    pub fn OH_TextEditorProxy_GetGetLeftTextOfCursorFunc(
        proxy: *mut InputMethod_TextEditorProxy,
        getLeftTextOfCursorFunc: *mut OH_TextEditorProxy_GetLeftTextOfCursorFunc,
    ) -> InputMethod_ErrorCode;
    /** @brief Get function {@link OH_TextEditorProxy_GetRightTextOfCursorFunc} from {@link InputMethod_TextEditorProxy}.

    @param proxy Represents a pointer to an {@link InputMethod_TextEditorProxy} instance which will be get function
    from.
    @param getRightTextOfCursorFunc Represents function {@link OH_TextEditorProxy_GetRightTextOfCursorFunc} which
    will be get.
    @return Returns a specific error code.
        {@link IME_ERR_OK} - success.
        {@link IME_ERR_NULL_POINTER} - unexpected null pointer.
    Specific error codes can be referenced {@link InputMethod_ErrorCode}.
    @since 12*/
    pub fn OH_TextEditorProxy_GetGetRightTextOfCursorFunc(
        proxy: *mut InputMethod_TextEditorProxy,
        getRightTextOfCursorFunc: *mut OH_TextEditorProxy_GetRightTextOfCursorFunc,
    ) -> InputMethod_ErrorCode;
    /** @brief Get function {@link OH_TextEditorProxy_GetTextIndexAtCursorFunc} from {@link InputMethod_TextEditorProxy}.

    @param proxy Represents a pointer to an {@link InputMethod_TextEditorProxy} instance which will be get function
    from.
    @param getTextIndexAtCursorFunc Represents function {@link OH_TextEditorProxy_GetTextIndexAtCursorFunc} which
    will be get.
    @return Returns a specific error code.
        {@link IME_ERR_OK} - success.
        {@link IME_ERR_NULL_POINTER} - unexpected null pointer.
    Specific error codes can be referenced {@link InputMethod_ErrorCode}.
    @since 12*/
    pub fn OH_TextEditorProxy_GetGetTextIndexAtCursorFunc(
        proxy: *mut InputMethod_TextEditorProxy,
        getTextIndexAtCursorFunc: *mut OH_TextEditorProxy_GetTextIndexAtCursorFunc,
    ) -> InputMethod_ErrorCode;
    /** @brief Get function {@link OH_TextEditorProxy_ReceivePrivateCommandFunc} from {@link InputMethod_TextEditorProxy}.

    @param proxy Represents a pointer to an {@link InputMethod_TextEditorProxy} instance which will be get function
    from.
    @param receivePrivateCommandFunc Represents function {@link OH_TextEditorProxy_ReceivePrivateCommandFunc} which
    will be get.
    @return Returns a specific error code.
        {@link IME_ERR_OK} - success.
        {@link IME_ERR_NULL_POINTER} - unexpected null pointer.
    Specific error codes can be referenced {@link InputMethod_ErrorCode}.
    @since 12*/
    pub fn OH_TextEditorProxy_GetReceivePrivateCommandFunc(
        proxy: *mut InputMethod_TextEditorProxy,
        receivePrivateCommandFunc: *mut OH_TextEditorProxy_ReceivePrivateCommandFunc,
    ) -> InputMethod_ErrorCode;
    /** @brief Get function {@link OH_TextEditorProxy_SetPreviewTextFunc} from {@link InputMethod_TextEditorProxy}.

    @param proxy Represents a pointer to an {@link InputMethod_TextEditorProxy} instance which will be get function
    from.
    @param setPreviewTextFunc Represents function {@link OH_TextEditorProxy_SetPreviewTextFunc} which will be get.
    @return Returns a specific error code.
        {@link IME_ERR_OK} - success.
        {@link IME_ERR_NULL_POINTER} - unexpected null pointer.
    Specific error codes can be referenced {@link InputMethod_ErrorCode}.
    @since 12*/
    pub fn OH_TextEditorProxy_GetSetPreviewTextFunc(
        proxy: *mut InputMethod_TextEditorProxy,
        setPreviewTextFunc: *mut OH_TextEditorProxy_SetPreviewTextFunc,
    ) -> InputMethod_ErrorCode;
    /** @brief Get function {@link OH_TextEditorProxy_FinishTextPreviewFunc} from {@link InputMethod_TextEditorProxy}.

    @param proxy Represents a pointer to an {@link InputMethod_TextEditorProxy} instance which will be get function
    from.
    @param finishTextPreviewFunc Represents function {@link OH_TextEditorProxy_FinishTextPreviewFunc} which will be
    get.
    @return Returns a specific error code.
        {@link IME_ERR_OK} - success.
        {@link IME_ERR_NULL_POINTER} - unexpected null pointer.
    Specific error codes can be referenced {@link InputMethod_ErrorCode}.
    @since 12*/
    pub fn OH_TextEditorProxy_GetFinishTextPreviewFunc(
        proxy: *mut InputMethod_TextEditorProxy,
        finishTextPreviewFunc: *mut OH_TextEditorProxy_FinishTextPreviewFunc,
    ) -> InputMethod_ErrorCode;
}
