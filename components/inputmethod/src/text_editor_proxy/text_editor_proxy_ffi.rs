// automatically generated by rust-bindgen 0.71.1

#![allow(non_upper_case_globals)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
use crate::private_command::InputMethod_PrivateCommand;
use crate::text_config::InputMethod_TextConfig;
use crate::types::*;

#[repr(C)]
pub struct InputMethod_TextEditorProxy {
    _unused: [u8; 0],
}
/// Defines the function called when input method getting text config.
///
/// You need to implement this function, set it to [`InputMethod_TextEditorProxy`] through [`OH_TextEditorProxy_SetGetTextConfigFunc`], and use [`OH_InputMethodController_Attach`] to complete the
/// registration.
///
///
/// # Arguments
///
/// * `textEditorProxy` - Represents a pointer to an [`InputMethod_TextEditorProxy`] instance.
///
/// * `config` - Represents a pointer to an [`InputMethod_TextConfig`] instance.
///
/// Available since API-level: 12
#[cfg(feature = "api-12")]
#[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
pub type OH_TextEditorProxy_GetTextConfigFunc = ::core::option::Option<
    unsafe extern "C" fn(
        textEditorProxy: *mut InputMethod_TextEditorProxy,
        config: *mut InputMethod_TextConfig,
    ),
>;
/// Defines the function called when input method inserting text.
///
/// You need to implement this function, set it to [`InputMethod_TextEditorProxy`] through [`OH_TextEditorProxy_SetInsertTextFunc`], and use [`OH_InputMethodController_Attach`] to complete the
/// registration.
///
///
/// # Arguments
///
/// * `textEditorProxy` - Represents a pointer to the [`InputMethod_TextEditorProxy`] instance which will be set
/// in.
///
/// * `text` - Represents a pointer to the text to be inserted.
///
/// * `length` - Represents the length of the text to be inserted.
///
/// Available since API-level: 12
#[cfg(feature = "api-12")]
#[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
pub type OH_TextEditorProxy_InsertTextFunc = ::core::option::Option<
    unsafe extern "C" fn(
        textEditorProxy: *mut InputMethod_TextEditorProxy,
        text: *const u16,
        length: usize,
    ),
>;
/// Defines the function called when input method deleting text forward.
///
/// You need to implement this function, set it to [`InputMethod_TextEditorProxy`] through [`OH_TextEditorProxy_SetDeleteForwardFunc`], and use [`OH_InputMethodController_Attach`] to complete the
/// registration.
///
///
/// # Arguments
///
/// * `textEditorProxy` - Represents a pointer to the [`InputMethod_TextEditorProxy`] instance which will be set
/// in.
///
/// * `length` - Represents the length of the text to be deleted.
///
/// Available since API-level: 12
#[cfg(feature = "api-12")]
#[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
pub type OH_TextEditorProxy_DeleteForwardFunc = ::core::option::Option<
    unsafe extern "C" fn(textEditorProxy: *mut InputMethod_TextEditorProxy, length: i32),
>;
/// Defines the function called when input method deleting text backward.
///
/// You need to implement this function, set it to [`InputMethod_TextEditorProxy`] through [`OH_TextEditorProxy_SetDeleteForwardFunc`], and use [`OH_InputMethodController_Attach`] to complete the
/// registration.
///
///
/// # Arguments
///
/// * `textEditorProxy` - Represents a pointer to the [`InputMethod_TextEditorProxy`] instance which will be set
/// in.
///
/// * `length` - Represents the length of the text to be deleted.
///
/// Available since API-level: 12
#[cfg(feature = "api-12")]
#[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
pub type OH_TextEditorProxy_DeleteBackwardFunc = ::core::option::Option<
    unsafe extern "C" fn(textEditorProxy: *mut InputMethod_TextEditorProxy, length: i32),
>;
/// Called when input method notifying keyboard status.
///
/// You need to implement this function, set it to [`InputMethod_TextEditorProxy`] through [`OH_TextEditorProxy_SetSendKeyboardStatusFunc`], and use [`OH_InputMethodController_Attach`] to complete the
/// registration.
///
///
/// # Arguments
///
/// * `textEditorProxy` - Represents a pointer to an [`InputMethod_TextEditorProxy`] instance which will be set in.
///
/// * `keyboardStatus` - Keyboard status, which is defined in [`InputMethod_KeyboardStatus`].
///
/// Available since API-level: 12
#[cfg(feature = "api-12")]
#[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
pub type OH_TextEditorProxy_SendKeyboardStatusFunc = ::core::option::Option<
    unsafe extern "C" fn(
        textEditorProxy: *mut InputMethod_TextEditorProxy,
        keyboardStatus: InputMethod_KeyboardStatus,
    ),
>;
/// Called when input method sending enter key.
///
/// You need to implement this function, set it to [`InputMethod_TextEditorProxy`] through [`OH_TextEditorProxy_SetSendEnterKeyFunc`], and use [`OH_InputMethodController_Attach`] to complete the
/// registration.
///
///
/// # Arguments
///
/// * `textEditorProxy` - Represents a pointer to an [`InputMethod_TextEditorProxy`] instance which will be set in.
///
/// * `enterKeyType` - Enter key type, which is defined in [`InputMethod_EnterKeyType`].
///
/// Available since API-level: 12
#[cfg(feature = "api-12")]
#[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
pub type OH_TextEditorProxy_SendEnterKeyFunc = ::core::option::Option<
    unsafe extern "C" fn(
        textEditorProxy: *mut InputMethod_TextEditorProxy,
        enterKeyType: InputMethod_EnterKeyType,
    ),
>;
/// Called when input method requesting to move cursor.
///
/// You need to implement this function, set it to [`InputMethod_TextEditorProxy`] through [`OH_TextEditorProxy_SetMoveCursorFunc`], and use [`OH_InputMethodController_Attach`] to complete the
/// registration.
///
///
/// # Arguments
///
/// * `textEditorProxy` - Represents a pointer to an [`InputMethod_TextEditorProxy`] instance which will be set in.
///
/// * `direction` - Represents the direction of the cursor movement, which is defined in [`InputMethod_Direction`].
///
/// Available since API-level: 12
#[cfg(feature = "api-12")]
#[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
pub type OH_TextEditorProxy_MoveCursorFunc = ::core::option::Option<
    unsafe extern "C" fn(
        textEditorProxy: *mut InputMethod_TextEditorProxy,
        direction: InputMethod_Direction,
    ),
>;
/// Called when input method requesting to set selection.
///
/// You need to implement this function, set it to [`InputMethod_TextEditorProxy`] through [`OH_TextEditorProxy_SetHandleSetSelectionFunc`], and use [`OH_InputMethodController_Attach`] to complete the
/// registration.
///
///
/// # Arguments
///
/// * `textEditorProxy` - Represents a pointer to an [`InputMethod_TextEditorProxy`] instance which will be set in.
///
/// * `start` - Represents the start position of the selection.
///
/// * `end` - Represents the end position of the selection.
///
/// Available since API-level: 12
#[cfg(feature = "api-12")]
#[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
pub type OH_TextEditorProxy_HandleSetSelectionFunc = ::core::option::Option<
    unsafe extern "C" fn(textEditorProxy: *mut InputMethod_TextEditorProxy, start: i32, end: i32),
>;
/// Called when input method sending extend action.
///
/// You need to implement this function, set it to [`InputMethod_TextEditorProxy`] through [`OH_TextEditorProxy_SetHandleExtendActionFunc`], and use [`OH_InputMethodController_Attach`] to complete the
/// registration.
///
///
/// # Arguments
///
/// * `textEditorProxy` - Represents a pointer to an [`InputMethod_TextEditorProxy`] instance which will be set in.
///
/// * `action` - Represents the extend action, which is defined in [`InputMethod_ExtendAction`].
///
/// Available since API-level: 12
#[cfg(feature = "api-12")]
#[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
pub type OH_TextEditorProxy_HandleExtendActionFunc = ::core::option::Option<
    unsafe extern "C" fn(
        textEditorProxy: *mut InputMethod_TextEditorProxy,
        action: InputMethod_ExtendAction,
    ),
>;
/// Called when input method requesting to get left text of cursor.
///
/// You need to implement this function, set it to [`InputMethod_TextEditorProxy`] through [`OH_TextEditorProxy_SetGetLeftTextOfCursorFunc`], and use [`OH_InputMethodController_Attach`] to complete the
/// registration.
///
///
/// # Arguments
///
/// * `textEditorProxy` - Represents a pointer to an [`InputMethod_TextEditorProxy`] instance which will be set in.
///
/// * `number` - Represents the number of characters to be get.
///
/// * `text` - Represents the left text of cursor, you need to assing this parameter.
///
/// * `length` - Represents the length of the left text of cursor, you need to assing this parameter.
///
/// Available since API-level: 12
#[cfg(feature = "api-12")]
#[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
pub type OH_TextEditorProxy_GetLeftTextOfCursorFunc = ::core::option::Option<
    unsafe extern "C" fn(
        textEditorProxy: *mut InputMethod_TextEditorProxy,
        number: i32,
        text: *mut u16,
        length: *mut usize,
    ),
>;
/// Called when input method requesting to get right text of cursor.
///
/// You need to implement this function, set it to [`InputMethod_TextEditorProxy`] through [`OH_TextEditorProxy_SetGetRightTextOfCursorFunc`], and use [`OH_InputMethodController_Attach`] to complete the
/// registration.
///
///
/// # Arguments
///
/// * `textEditorProxy` - Represents a pointer to an [`InputMethod_TextEditorProxy`] instance which will be set in.
///
/// * `number` - Represents the number of characters to be get.
///
/// * `text` - Represents the right text of cursor, you need to assing this parameter.
///
/// * `length` - Represents the length of the right text of cursor.
///
/// Available since API-level: 12
#[cfg(feature = "api-12")]
#[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
pub type OH_TextEditorProxy_GetRightTextOfCursorFunc = ::core::option::Option<
    unsafe extern "C" fn(
        textEditorProxy: *mut InputMethod_TextEditorProxy,
        number: i32,
        text: *mut u16,
        length: *mut usize,
    ),
>;
/// Called when input method requesting to get text index at cursor.
///
/// You need to implement this function, set it to [`InputMethod_TextEditorProxy`] through [`OH_TextEditorProxy_SetGetTextIndexAtCursorFunc`], and use [`OH_InputMethodController_Attach`] to complete the
/// registration.
///
///
/// # Arguments
///
/// * `textEditorProxy` - Represents a pointer to an [`InputMethod_TextEditorProxy`] instance which will be set in.
///
/// # Returns
///
/// * Returns the index of text at cursor.
///
/// Available since API-level: 12
#[cfg(feature = "api-12")]
#[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
pub type OH_TextEditorProxy_GetTextIndexAtCursorFunc = ::core::option::Option<
    unsafe extern "C" fn(textEditorProxy: *mut InputMethod_TextEditorProxy) -> i32,
>;
/// Called when input method sending private command.
///
/// You need to implement this function, set it to [`InputMethod_TextEditorProxy`] through [`OH_TextEditorProxy_SetReceivePrivateCommandFunc`], and use [`OH_InputMethodController_Attach`] to complete the
/// registration.
///
///
/// # Arguments
///
/// * `textEditorProxy` - Represents a pointer to an [`InputMethod_TextEditorProxy`] instance which will be set in.
///
/// * `privateCommand` - Private command from input method.
///
/// * `size` - Size of private command.
///
/// # Returns
///
/// * Returns the result of handling private command.
///
/// Available since API-level: 12
#[cfg(feature = "api-12")]
#[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
pub type OH_TextEditorProxy_ReceivePrivateCommandFunc = ::core::option::Option<
    unsafe extern "C" fn(
        textEditorProxy: *mut InputMethod_TextEditorProxy,
        privateCommand: *mut *mut InputMethod_PrivateCommand,
        size: usize,
    ) -> i32,
>;
/// Called when input method setting preview text.
///
/// You need to implement this function, set it to [`InputMethod_TextEditorProxy`] through [`OH_TextEditorProxy_SetReceivePrivateCommandFunc`], and use [`OH_InputMethodController_Attach`] to complete the
/// registration.
///
///
/// # Arguments
///
/// * `textEditorProxy` - Represents a pointer to an [`InputMethod_TextEditorProxy`] instance which will be set in.
///
/// * `text` - Represents text to be previewd.
///
/// * `length` - Length of preview text.
///
/// * `start` - Start position of preview text.
///
/// * `end` - End position of preview text.
///
/// # Returns
///
/// * Returns the result of setting preview text.
///
/// Available since API-level: 12
#[cfg(feature = "api-12")]
#[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
pub type OH_TextEditorProxy_SetPreviewTextFunc = ::core::option::Option<
    unsafe extern "C" fn(
        textEditorProxy: *mut InputMethod_TextEditorProxy,
        text: *const u16,
        length: usize,
        start: i32,
        end: i32,
    ) -> i32,
>;
/// Called when input method finishing preview text.
///
/// You need to implement this function, set it to [`InputMethod_TextEditorProxy`] through [`OH_TextEditorProxy_SetReceivePrivateCommandFunc`], and use [`OH_InputMethodController_Attach`] to complete the
/// registration.
///
///
/// # Arguments
///
/// * `textEditorProxy` - Represents a pointer to an [`InputMethod_TextEditorProxy`] instance which will be set in.
///
/// Available since API-level: 12
#[cfg(feature = "api-12")]
#[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
pub type OH_TextEditorProxy_FinishTextPreviewFunc =
    ::core::option::Option<unsafe extern "C" fn(textEditorProxy: *mut InputMethod_TextEditorProxy)>;
extern "C" {
    /// Create a new [`InputMethod_TextEditorProxy`] instance.
    ///
    ///
    /// # Returns
    ///
    /// * If the creation succeeds, a pointer to the newly created [`InputMethod_TextEditorProxy`]
    /// instance is returned. If the creation fails, NULL is returned, possible cause is insufficient memory.
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_TextEditorProxy_Create() -> *mut InputMethod_TextEditorProxy;
    /// Destroy a [`InputMethod_TextEditorProxy`] instance.
    ///
    /// # Arguments
    ///
    /// * `proxy` - The [`InputMethod_TextEditorProxy`] instance to be destroyed.
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_TextEditorProxy_Destroy(proxy: *mut InputMethod_TextEditorProxy);
    /// Set function [`OH_TextEditorProxy_GetTextConfigFunc`] into [`InputMethod_TextEditorProxy`].
    ///
    /// # Arguments
    ///
    /// * `proxy` - Represents a pointer to an [`InputMethod_TextEditorProxy`] instance which will be set function in.
    ///
    /// * `getTextConfigFunc` - Represents function [`OH_TextEditorProxy_GetTextConfigFunc`] which will be set.
    ///
    /// # Returns
    ///
    /// * Returns a specific error code.
    /// [`IME_ERR_OK`] - success.
    /// [`IME_ERR_NULL_POINTER`] - unexpected null pointer.
    /// Specific error codes can be referenced [`InputMethod_ErrorCode`].
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_TextEditorProxy_SetGetTextConfigFunc(
        proxy: *mut InputMethod_TextEditorProxy,
        getTextConfigFunc: OH_TextEditorProxy_GetTextConfigFunc,
    ) -> InputMethod_ErrorCode;
    /// Set function [`OH_TextEditorProxy_InsertTextFunc`] into [`InputMethod_TextEditorProxy`].
    ///
    /// # Arguments
    ///
    /// * `proxy` - Represents a pointer to an [`InputMethod_TextEditorProxy`] instance which will be set function in.
    ///
    /// * `insertTextFunc` - Represents function [`OH_TextEditorProxy_InsertTextFunc`] which will be set.
    ///
    /// # Returns
    ///
    /// * Returns a specific error code.
    /// [`IME_ERR_OK`] - success.
    /// [`IME_ERR_NULL_POINTER`] - unexpected null pointer.
    /// Specific error codes can be referenced [`InputMethod_ErrorCode`].
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_TextEditorProxy_SetInsertTextFunc(
        proxy: *mut InputMethod_TextEditorProxy,
        insertTextFunc: OH_TextEditorProxy_InsertTextFunc,
    ) -> InputMethod_ErrorCode;
    /// Set function [`OH_TextEditorProxy_SetDeleteForwardFunc`] into [`InputMethod_TextEditorProxy`].
    ///
    /// # Arguments
    ///
    /// * `proxy` - Represents a pointer to an [`InputMethod_TextEditorProxy`] instance which will be set function in.
    ///
    /// * `deleteForwardFunc` - Represents function [`OH_TextEditorProxy_DeleteForwardFunc`] which will be set.
    ///
    /// # Returns
    ///
    /// * Returns a specific error code.
    /// [`IME_ERR_OK`] - success.
    /// [`IME_ERR_NULL_POINTER`] - unexpected null pointer.
    /// Specific error codes can be referenced [`InputMethod_ErrorCode`].
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_TextEditorProxy_SetDeleteForwardFunc(
        proxy: *mut InputMethod_TextEditorProxy,
        deleteForwardFunc: OH_TextEditorProxy_DeleteForwardFunc,
    ) -> InputMethod_ErrorCode;
    /// Set function [`OH_TextEditorProxy_DeleteBackwardFunc`] into [`InputMethod_TextEditorProxy`].
    ///
    /// # Arguments
    ///
    /// * `proxy` - Represents a pointer to an [`InputMethod_TextEditorProxy`] instance which will be set function in.
    ///
    /// * `deleteBackwardFunc` - Represents function [`OH_TextEditorProxy_DeleteBackwardFunc`] which will be set.
    ///
    /// # Returns
    ///
    /// * Returns a specific error code.
    /// [`IME_ERR_OK`] - success.
    /// [`IME_ERR_NULL_POINTER`] - unexpected null pointer.
    /// Specific error codes can be referenced [`InputMethod_ErrorCode`].
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_TextEditorProxy_SetDeleteBackwardFunc(
        proxy: *mut InputMethod_TextEditorProxy,
        deleteBackwardFunc: OH_TextEditorProxy_DeleteBackwardFunc,
    ) -> InputMethod_ErrorCode;
    /// Set function [`OH_TextEditorProxy_SendKeyboardStatusFunc`] into [`InputMethod_TextEditorProxy`].
    ///
    /// # Arguments
    ///
    /// * `proxy` - Represents a pointer to an [`InputMethod_TextEditorProxy`] instance which will be set function in.
    ///
    /// * `sendKeyboardStatusFunc` - Represents function [`OH_TextEditorProxy_SendKeyboardStatusFunc`] which will be
    /// set.
    ///
    /// # Returns
    ///
    /// * Returns a specific error code.
    /// [`IME_ERR_OK`] - success.
    /// [`IME_ERR_NULL_POINTER`] - unexpected null pointer.
    /// Specific error codes can be referenced [`InputMethod_ErrorCode`].
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_TextEditorProxy_SetSendKeyboardStatusFunc(
        proxy: *mut InputMethod_TextEditorProxy,
        sendKeyboardStatusFunc: OH_TextEditorProxy_SendKeyboardStatusFunc,
    ) -> InputMethod_ErrorCode;
    /// Set function [`OH_TextEditorProxy_SendEnterKeyFunc`] into [`InputMethod_TextEditorProxy`].
    ///
    /// # Arguments
    ///
    /// * `proxy` - Represents a pointer to an [`InputMethod_TextEditorProxy`] instance which will be set function in.
    ///
    /// * `sendEnterKeyFunc` - Represents function [`OH_TextEditorProxy_SendEnterKeyFunc`] which will be set.
    ///
    /// # Returns
    ///
    /// * Returns a specific error code.
    /// [`IME_ERR_OK`] - success.
    /// [`IME_ERR_NULL_POINTER`] - unexpected null pointer.
    /// Specific error codes can be referenced [`InputMethod_ErrorCode`].
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_TextEditorProxy_SetSendEnterKeyFunc(
        proxy: *mut InputMethod_TextEditorProxy,
        sendEnterKeyFunc: OH_TextEditorProxy_SendEnterKeyFunc,
    ) -> InputMethod_ErrorCode;
    /// Set function [`OH_TextEditorProxy_MoveCursorFunc`] into [`InputMethod_TextEditorProxy`].
    ///
    /// # Arguments
    ///
    /// * `proxy` - Represents a pointer to an [`InputMethod_TextEditorProxy`] instance which will be set function in.
    ///
    /// * `moveCursorFunc` - Represents function [`OH_TextEditorProxy_MoveCursorFunc`] which will be set.
    ///
    /// # Returns
    ///
    /// * Returns a specific error code.
    /// [`IME_ERR_OK`] - success.
    /// [`IME_ERR_NULL_POINTER`] - unexpected null pointer.
    /// Specific error codes can be referenced [`InputMethod_ErrorCode`].
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_TextEditorProxy_SetMoveCursorFunc(
        proxy: *mut InputMethod_TextEditorProxy,
        moveCursorFunc: OH_TextEditorProxy_MoveCursorFunc,
    ) -> InputMethod_ErrorCode;
    /// Set function [`OH_TextEditorProxy_HandleSetSelectionFunc`] into [`InputMethod_TextEditorProxy`].
    ///
    /// # Arguments
    ///
    /// * `proxy` - Represents a pointer to an [`InputMethod_TextEditorProxy`] instance which will be set function in.
    ///
    /// * `handleSetSelectionFunc` - Represents function [`OH_TextEditorProxy_HandleSetSelectionFunc`] which will be
    /// set.
    ///
    /// # Returns
    ///
    /// * Returns a specific error code.
    /// [`IME_ERR_OK`] - success.
    /// [`IME_ERR_NULL_POINTER`] - unexpected null pointer.
    /// Specific error codes can be referenced [`InputMethod_ErrorCode`].
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_TextEditorProxy_SetHandleSetSelectionFunc(
        proxy: *mut InputMethod_TextEditorProxy,
        handleSetSelectionFunc: OH_TextEditorProxy_HandleSetSelectionFunc,
    ) -> InputMethod_ErrorCode;
    /// Set function [`OH_TextEditorProxy_HandleExtendActionFunc`] into [`InputMethod_TextEditorProxy`].
    ///
    /// # Arguments
    ///
    /// * `proxy` - Represents a pointer to an [`InputMethod_TextEditorProxy`] instance which will be set function in.
    ///
    /// * `handleExtendActionFunc` - Represents function [`OH_TextEditorProxy_HandleExtendActionFunc`] which will be
    /// set.
    ///
    /// # Returns
    ///
    /// * Returns a specific error code.
    /// [`IME_ERR_OK`] - success.
    /// [`IME_ERR_NULL_POINTER`] - unexpected null pointer.
    /// Specific error codes can be referenced [`InputMethod_ErrorCode`].
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_TextEditorProxy_SetHandleExtendActionFunc(
        proxy: *mut InputMethod_TextEditorProxy,
        handleExtendActionFunc: OH_TextEditorProxy_HandleExtendActionFunc,
    ) -> InputMethod_ErrorCode;
    /// Set function [`OH_TextEditorProxy_GetLeftTextOfCursorFunc`] into [`InputMethod_TextEditorProxy`].
    ///
    /// # Arguments
    ///
    /// * `proxy` - Represents a pointer to an [`InputMethod_TextEditorProxy`] instance which will be set function in.
    ///
    /// * `getLeftTextOfCursorFunc` - Represents function [`OH_TextEditorProxy_GetLeftTextOfCursorFunc`] which will
    /// be set.
    ///
    /// # Returns
    ///
    /// * Returns a specific error code.
    /// [`IME_ERR_OK`] - success.
    /// [`IME_ERR_NULL_POINTER`] - unexpected null pointer.
    /// Specific error codes can be referenced [`InputMethod_ErrorCode`].
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_TextEditorProxy_SetGetLeftTextOfCursorFunc(
        proxy: *mut InputMethod_TextEditorProxy,
        getLeftTextOfCursorFunc: OH_TextEditorProxy_GetLeftTextOfCursorFunc,
    ) -> InputMethod_ErrorCode;
    /// Set function [`OH_TextEditorProxy_GetRightTextOfCursorFunc`] into [`InputMethod_TextEditorProxy`].
    ///
    /// # Arguments
    ///
    /// * `proxy` - Represents a pointer to an [`InputMethod_TextEditorProxy`] instance which will be set function in.
    ///
    /// * `getRightTextOfCursorFunc` - Represents function [`OH_TextEditorProxy_GetRightTextOfCursorFunc`] which
    /// will be set.
    ///
    /// # Returns
    ///
    /// * Returns a specific error code.
    /// [`IME_ERR_OK`] - success.
    /// [`IME_ERR_NULL_POINTER`] - unexpected null pointer.
    /// Specific error codes can be referenced [`InputMethod_ErrorCode`].
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_TextEditorProxy_SetGetRightTextOfCursorFunc(
        proxy: *mut InputMethod_TextEditorProxy,
        getRightTextOfCursorFunc: OH_TextEditorProxy_GetRightTextOfCursorFunc,
    ) -> InputMethod_ErrorCode;
    /// Set function [`OH_TextEditorProxy_GetTextIndexAtCursorFunc`] into [`InputMethod_TextEditorProxy`].
    ///
    /// # Arguments
    ///
    /// * `proxy` - Represents a pointer to an [`InputMethod_TextEditorProxy`] instance which will be set function in.
    ///
    /// * `getTextIndexAtCursorFunc` - Represents function [`OH_TextEditorProxy_GetTextIndexAtCursorFunc`] which
    /// will be set.
    ///
    /// # Returns
    ///
    /// * Returns a specific error code.
    /// [`IME_ERR_OK`] - success.
    /// [`IME_ERR_NULL_POINTER`] - unexpected null pointer.
    /// Specific error codes can be referenced [`InputMethod_ErrorCode`].
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_TextEditorProxy_SetGetTextIndexAtCursorFunc(
        proxy: *mut InputMethod_TextEditorProxy,
        getTextIndexAtCursorFunc: OH_TextEditorProxy_GetTextIndexAtCursorFunc,
    ) -> InputMethod_ErrorCode;
    /// Set function [`OH_TextEditorProxy_ReceivePrivateCommandFunc`] into [`InputMethod_TextEditorProxy`].
    ///
    /// # Arguments
    ///
    /// * `proxy` - Represents a pointer to an [`InputMethod_TextEditorProxy`] instance which will be set function in.
    ///
    /// * `receivePrivateCommandFunc` - Represents function [`OH_TextEditorProxy_ReceivePrivateCommandFunc`] which
    /// will be set.
    ///
    /// # Returns
    ///
    /// * Returns a specific error code.
    /// [`IME_ERR_OK`] - success.
    /// [`IME_ERR_NULL_POINTER`] - unexpected null pointer.
    /// Specific error codes can be referenced [`InputMethod_ErrorCode`].
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_TextEditorProxy_SetReceivePrivateCommandFunc(
        proxy: *mut InputMethod_TextEditorProxy,
        receivePrivateCommandFunc: OH_TextEditorProxy_ReceivePrivateCommandFunc,
    ) -> InputMethod_ErrorCode;
    /// Set function [`OH_TextEditorProxy_SetPreviewTextFunc`] into [`InputMethod_TextEditorProxy`].
    ///
    /// # Arguments
    ///
    /// * `proxy` - Represents a pointer to an [`InputMethod_TextEditorProxy`] instance which will be set function in.
    ///
    /// * `setPreviewTextFunc` - Represents function [`OH_TextEditorProxy_SetPreviewTextFunc`] which will be set.
    ///
    /// # Returns
    ///
    /// * Returns a specific error code.
    /// [`IME_ERR_OK`] - success.
    /// [`IME_ERR_NULL_POINTER`] - unexpected null pointer.
    /// Specific error codes can be referenced [`InputMethod_ErrorCode`].
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_TextEditorProxy_SetSetPreviewTextFunc(
        proxy: *mut InputMethod_TextEditorProxy,
        setPreviewTextFunc: OH_TextEditorProxy_SetPreviewTextFunc,
    ) -> InputMethod_ErrorCode;
    /// Set function [`OH_TextEditorProxy_FinishTextPreviewFunc`] into [`InputMethod_TextEditorProxy`].
    ///
    /// # Arguments
    ///
    /// * `proxy` - Represents a pointer to an [`InputMethod_TextEditorProxy`] instance which will be set function in.
    ///
    /// * `finishTextPreviewFunc` - Represents function [`OH_TextEditorProxy_FinishTextPreviewFunc`] which will be
    /// set.
    ///
    /// # Returns
    ///
    /// * Returns a specific error code.
    /// [`IME_ERR_OK`] - success.
    /// [`IME_ERR_NULL_POINTER`] - unexpected null pointer.
    /// Specific error codes can be referenced [`InputMethod_ErrorCode`].
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_TextEditorProxy_SetFinishTextPreviewFunc(
        proxy: *mut InputMethod_TextEditorProxy,
        finishTextPreviewFunc: OH_TextEditorProxy_FinishTextPreviewFunc,
    ) -> InputMethod_ErrorCode;
    /// Get function [`OH_TextEditorProxy_GetTextConfigFunc`] from [`InputMethod_TextEditorProxy`].
    ///
    /// # Arguments
    ///
    /// * `proxy` - Represents a pointer to an [`InputMethod_TextEditorProxy`] instance which will be get function
    /// from.
    ///
    /// * `getTextConfigFunc` - Represents function [`OH_TextEditorProxy_GetTextConfigFunc`] which will be get.
    ///
    /// # Returns
    ///
    /// * Returns a specific error code.
    /// [`IME_ERR_OK`] - success.
    /// [`IME_ERR_NULL_POINTER`] - unexpected null pointer.
    /// Specific error codes can be referenced [`InputMethod_ErrorCode`].
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_TextEditorProxy_GetGetTextConfigFunc(
        proxy: *mut InputMethod_TextEditorProxy,
        getTextConfigFunc: *mut OH_TextEditorProxy_GetTextConfigFunc,
    ) -> InputMethod_ErrorCode;
    /// Get function [`OH_TextEditorProxy_InsertTextFunc`] from [`InputMethod_TextEditorProxy`].
    ///
    /// # Arguments
    ///
    /// * `proxy` - Represents a pointer to an [`InputMethod_TextEditorProxy`] instance which will be get function
    /// from.
    ///
    /// * `insertTextFunc` - Represents function [`OH_TextEditorProxy_InsertTextFunc`] which will be get.
    ///
    /// # Returns
    ///
    /// * Returns a specific error code.
    /// [`IME_ERR_OK`] - success.
    /// [`IME_ERR_NULL_POINTER`] - unexpected null pointer.
    /// Specific error codes can be referenced [`InputMethod_ErrorCode`].
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_TextEditorProxy_GetInsertTextFunc(
        proxy: *mut InputMethod_TextEditorProxy,
        insertTextFunc: *mut OH_TextEditorProxy_InsertTextFunc,
    ) -> InputMethod_ErrorCode;
    /// Get function [`OH_TextEditorProxy_DeleteForwardFunc`] from [`InputMethod_TextEditorProxy`].
    ///
    /// # Arguments
    ///
    /// * `proxy` - Represents a pointer to an [`InputMethod_TextEditorProxy`] instance which will be get function
    /// from.
    ///
    /// * `deleteForwardFunc` - Represents function [`OH_TextEditorProxy_DeleteForwardFunc`] which will be get.
    ///
    /// # Returns
    ///
    /// * Returns a specific error code.
    /// [`IME_ERR_OK`] - success.
    /// [`IME_ERR_NULL_POINTER`] - unexpected null pointer.
    /// Specific error codes can be referenced [`InputMethod_ErrorCode`].
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_TextEditorProxy_GetDeleteForwardFunc(
        proxy: *mut InputMethod_TextEditorProxy,
        deleteForwardFunc: *mut OH_TextEditorProxy_DeleteForwardFunc,
    ) -> InputMethod_ErrorCode;
    /// Get function [`OH_TextEditorProxy_DeleteBackwardFunc`] from [`InputMethod_TextEditorProxy`].
    ///
    /// # Arguments
    ///
    /// * `proxy` - Represents a pointer to an [`InputMethod_TextEditorProxy`] instance which will be get function
    /// from.
    ///
    /// * `deleteBackwardFunc` - Represents function [`OH_TextEditorProxy_DeleteBackwardFunc`] which will be get.
    ///
    /// # Returns
    ///
    /// * Returns a specific error code.
    /// [`IME_ERR_OK`] - success.
    /// [`IME_ERR_NULL_POINTER`] - unexpected null pointer.
    /// Specific error codes can be referenced [`InputMethod_ErrorCode`].
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_TextEditorProxy_GetDeleteBackwardFunc(
        proxy: *mut InputMethod_TextEditorProxy,
        deleteBackwardFunc: *mut OH_TextEditorProxy_DeleteBackwardFunc,
    ) -> InputMethod_ErrorCode;
    /// Get function [`OH_TextEditorProxy_SendKeyboardStatusFunc`] from [`InputMethod_TextEditorProxy`].
    ///
    /// # Arguments
    ///
    /// * `proxy` - Represents a pointer to an [`InputMethod_TextEditorProxy`] instance which will be get function
    /// from.
    ///
    /// * `sendKeyboardStatusFunc` - Represents function [`OH_TextEditorProxy_SendKeyboardStatusFunc`] which will be
    /// get.
    ///
    /// # Returns
    ///
    /// * Returns a specific error code.
    /// [`IME_ERR_OK`] - success.
    /// [`IME_ERR_NULL_POINTER`] - unexpected null pointer.
    /// Specific error codes can be referenced [`InputMethod_ErrorCode`].
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_TextEditorProxy_GetSendKeyboardStatusFunc(
        proxy: *mut InputMethod_TextEditorProxy,
        sendKeyboardStatusFunc: *mut OH_TextEditorProxy_SendKeyboardStatusFunc,
    ) -> InputMethod_ErrorCode;
    /// Get function [`OH_TextEditorProxy_SendEnterKeyFunc`] from [`InputMethod_TextEditorProxy`].
    ///
    /// # Arguments
    ///
    /// * `proxy` - Represents a pointer to an [`InputMethod_TextEditorProxy`] instance which will be get function
    /// from.
    ///
    /// * `sendEnterKeyFunc` - Represents function [`OH_TextEditorProxy_SendEnterKeyFunc`] which will be get.
    ///
    /// # Returns
    ///
    /// * Returns a specific error code.
    /// [`IME_ERR_OK`] - success.
    /// [`IME_ERR_NULL_POINTER`] - unexpected null pointer.
    /// Specific error codes can be referenced [`InputMethod_ErrorCode`].
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_TextEditorProxy_GetSendEnterKeyFunc(
        proxy: *mut InputMethod_TextEditorProxy,
        sendEnterKeyFunc: *mut OH_TextEditorProxy_SendEnterKeyFunc,
    ) -> InputMethod_ErrorCode;
    /// Get function [`OH_TextEditorProxy_MoveCursorFunc`] from [`InputMethod_TextEditorProxy`].
    ///
    /// # Arguments
    ///
    /// * `proxy` - Represents a pointer to an [`InputMethod_TextEditorProxy`] instance which will be get function
    /// from.
    ///
    /// * `moveCursorFunc` - Represents function [`OH_TextEditorProxy_MoveCursorFunc`] which will be get.
    ///
    /// # Returns
    ///
    /// * Returns a specific error code.
    /// [`IME_ERR_OK`] - success.
    /// [`IME_ERR_NULL_POINTER`] - unexpected null pointer.
    /// Specific error codes can be referenced [`InputMethod_ErrorCode`].
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_TextEditorProxy_GetMoveCursorFunc(
        proxy: *mut InputMethod_TextEditorProxy,
        moveCursorFunc: *mut OH_TextEditorProxy_MoveCursorFunc,
    ) -> InputMethod_ErrorCode;
    /// Get function [`OH_TextEditorProxy_HandleSetSelectionFunc`] from [`InputMethod_TextEditorProxy`].
    ///
    /// # Arguments
    ///
    /// * `proxy` - Represents a pointer to an [`InputMethod_TextEditorProxy`] instance which will be get function
    /// from.
    ///
    /// * `handleSetSelectionFunc` - Represents function [`OH_TextEditorProxy_HandleSetSelectionFunc`] which will be
    /// get.
    ///
    /// # Returns
    ///
    /// * Returns a specific error code.
    /// [`IME_ERR_OK`] - success.
    /// [`IME_ERR_NULL_POINTER`] - unexpected null pointer.
    /// Specific error codes can be referenced [`InputMethod_ErrorCode`].
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_TextEditorProxy_GetHandleSetSelectionFunc(
        proxy: *mut InputMethod_TextEditorProxy,
        handleSetSelectionFunc: *mut OH_TextEditorProxy_HandleSetSelectionFunc,
    ) -> InputMethod_ErrorCode;
    /// Get function [`OH_TextEditorProxy_HandleExtendActionFunc`] from [`InputMethod_TextEditorProxy`].
    ///
    /// # Arguments
    ///
    /// * `proxy` - Represents a pointer to an [`InputMethod_TextEditorProxy`] instance which will be get function
    /// from.
    ///
    /// * `handleExtendActionFunc` - Represents function [`OH_TextEditorProxy_HandleExtendActionFunc`] which will be
    /// get.
    ///
    /// # Returns
    ///
    /// * Returns a specific error code.
    /// [`IME_ERR_OK`] - success.
    /// [`IME_ERR_NULL_POINTER`] - unexpected null pointer.
    /// Specific error codes can be referenced [`InputMethod_ErrorCode`].
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_TextEditorProxy_GetHandleExtendActionFunc(
        proxy: *mut InputMethod_TextEditorProxy,
        handleExtendActionFunc: *mut OH_TextEditorProxy_HandleExtendActionFunc,
    ) -> InputMethod_ErrorCode;
    /// Get function [`OH_TextEditorProxy_GetLeftTextOfCursorFunc`] from [`InputMethod_TextEditorProxy`].
    ///
    /// # Arguments
    ///
    /// * `proxy` - Represents a pointer to an [`InputMethod_TextEditorProxy`] instance which will be get function
    /// from.
    ///
    /// * `getLeftTextOfCursorFunc` - Represents function [`OH_TextEditorProxy_GetLeftTextOfCursorFunc`] which will
    /// be get.
    ///
    /// # Returns
    ///
    /// * Returns a specific error code.
    /// [`IME_ERR_OK`] - success.
    /// [`IME_ERR_NULL_POINTER`] - unexpected null pointer.
    /// Specific error codes can be referenced [`InputMethod_ErrorCode`].
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_TextEditorProxy_GetGetLeftTextOfCursorFunc(
        proxy: *mut InputMethod_TextEditorProxy,
        getLeftTextOfCursorFunc: *mut OH_TextEditorProxy_GetLeftTextOfCursorFunc,
    ) -> InputMethod_ErrorCode;
    /// Get function [`OH_TextEditorProxy_GetRightTextOfCursorFunc`] from [`InputMethod_TextEditorProxy`].
    ///
    /// # Arguments
    ///
    /// * `proxy` - Represents a pointer to an [`InputMethod_TextEditorProxy`] instance which will be get function
    /// from.
    ///
    /// * `getRightTextOfCursorFunc` - Represents function [`OH_TextEditorProxy_GetRightTextOfCursorFunc`] which
    /// will be get.
    ///
    /// # Returns
    ///
    /// * Returns a specific error code.
    /// [`IME_ERR_OK`] - success.
    /// [`IME_ERR_NULL_POINTER`] - unexpected null pointer.
    /// Specific error codes can be referenced [`InputMethod_ErrorCode`].
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_TextEditorProxy_GetGetRightTextOfCursorFunc(
        proxy: *mut InputMethod_TextEditorProxy,
        getRightTextOfCursorFunc: *mut OH_TextEditorProxy_GetRightTextOfCursorFunc,
    ) -> InputMethod_ErrorCode;
    /// Get function [`OH_TextEditorProxy_GetTextIndexAtCursorFunc`] from [`InputMethod_TextEditorProxy`].
    ///
    /// # Arguments
    ///
    /// * `proxy` - Represents a pointer to an [`InputMethod_TextEditorProxy`] instance which will be get function
    /// from.
    ///
    /// * `getTextIndexAtCursorFunc` - Represents function [`OH_TextEditorProxy_GetTextIndexAtCursorFunc`] which
    /// will be get.
    ///
    /// # Returns
    ///
    /// * Returns a specific error code.
    /// [`IME_ERR_OK`] - success.
    /// [`IME_ERR_NULL_POINTER`] - unexpected null pointer.
    /// Specific error codes can be referenced [`InputMethod_ErrorCode`].
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_TextEditorProxy_GetGetTextIndexAtCursorFunc(
        proxy: *mut InputMethod_TextEditorProxy,
        getTextIndexAtCursorFunc: *mut OH_TextEditorProxy_GetTextIndexAtCursorFunc,
    ) -> InputMethod_ErrorCode;
    /// Get function [`OH_TextEditorProxy_ReceivePrivateCommandFunc`] from [`InputMethod_TextEditorProxy`].
    ///
    /// # Arguments
    ///
    /// * `proxy` - Represents a pointer to an [`InputMethod_TextEditorProxy`] instance which will be get function
    /// from.
    ///
    /// * `receivePrivateCommandFunc` - Represents function [`OH_TextEditorProxy_ReceivePrivateCommandFunc`] which
    /// will be get.
    ///
    /// # Returns
    ///
    /// * Returns a specific error code.
    /// [`IME_ERR_OK`] - success.
    /// [`IME_ERR_NULL_POINTER`] - unexpected null pointer.
    /// Specific error codes can be referenced [`InputMethod_ErrorCode`].
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_TextEditorProxy_GetReceivePrivateCommandFunc(
        proxy: *mut InputMethod_TextEditorProxy,
        receivePrivateCommandFunc: *mut OH_TextEditorProxy_ReceivePrivateCommandFunc,
    ) -> InputMethod_ErrorCode;
    /// Get function [`OH_TextEditorProxy_SetPreviewTextFunc`] from [`InputMethod_TextEditorProxy`].
    ///
    /// # Arguments
    ///
    /// * `proxy` - Represents a pointer to an [`InputMethod_TextEditorProxy`] instance which will be get function
    /// from.
    ///
    /// * `setPreviewTextFunc` - Represents function [`OH_TextEditorProxy_SetPreviewTextFunc`] which will be get.
    ///
    /// # Returns
    ///
    /// * Returns a specific error code.
    /// [`IME_ERR_OK`] - success.
    /// [`IME_ERR_NULL_POINTER`] - unexpected null pointer.
    /// Specific error codes can be referenced [`InputMethod_ErrorCode`].
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_TextEditorProxy_GetSetPreviewTextFunc(
        proxy: *mut InputMethod_TextEditorProxy,
        setPreviewTextFunc: *mut OH_TextEditorProxy_SetPreviewTextFunc,
    ) -> InputMethod_ErrorCode;
    /// Get function [`OH_TextEditorProxy_FinishTextPreviewFunc`] from [`InputMethod_TextEditorProxy`].
    ///
    /// # Arguments
    ///
    /// * `proxy` - Represents a pointer to an [`InputMethod_TextEditorProxy`] instance which will be get function
    /// from.
    ///
    /// * `finishTextPreviewFunc` - Represents function [`OH_TextEditorProxy_FinishTextPreviewFunc`] which will be
    /// get.
    ///
    /// # Returns
    ///
    /// * Returns a specific error code.
    /// [`IME_ERR_OK`] - success.
    /// [`IME_ERR_NULL_POINTER`] - unexpected null pointer.
    /// Specific error codes can be referenced [`InputMethod_ErrorCode`].
    ///
    /// Available since API-level: 12
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_TextEditorProxy_GetFinishTextPreviewFunc(
        proxy: *mut InputMethod_TextEditorProxy,
        finishTextPreviewFunc: *mut OH_TextEditorProxy_FinishTextPreviewFunc,
    ) -> InputMethod_ErrorCode;
}
