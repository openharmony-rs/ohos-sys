/* automatically generated by rust-bindgen 0.69.4 */

#![allow(non_upper_case_globals)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
use crate::types::*;

impl OH_Drawing_RegionOpMode {
    /// Difference operation.
    pub const REGION_OP_MODE_DIFFERENCE: OH_Drawing_RegionOpMode = OH_Drawing_RegionOpMode(0);
}
impl OH_Drawing_RegionOpMode {
    /// Intersect operation.
    pub const REGION_OP_MODE_INTERSECT: OH_Drawing_RegionOpMode = OH_Drawing_RegionOpMode(1);
}
impl OH_Drawing_RegionOpMode {
    /// Union operation.
    pub const REGION_OP_MODE_UNION: OH_Drawing_RegionOpMode = OH_Drawing_RegionOpMode(2);
}
impl OH_Drawing_RegionOpMode {
    /// Xor operation.
    pub const REGION_OP_MODE_XOR: OH_Drawing_RegionOpMode = OH_Drawing_RegionOpMode(3);
}
impl OH_Drawing_RegionOpMode {
    /// Reverse difference operation.
    pub const REGION_OP_MODE_REVERSE_DIFFERENCE: OH_Drawing_RegionOpMode =
        OH_Drawing_RegionOpMode(4);
}
impl OH_Drawing_RegionOpMode {
    /// Replace operation.
    pub const REGION_OP_MODE_REPLACE: OH_Drawing_RegionOpMode = OH_Drawing_RegionOpMode(5);
}
#[repr(transparent)]
/** @brief Operations when two regions are combined.

@since 12
@version 1.0*/
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub struct OH_Drawing_RegionOpMode(pub ::core::ffi::c_uint);
extern "C" {
    /** @brief Creates an <b>OH_Drawing_Region</b> object.

    @syscap SystemCapability.Graphic.Graphic2D.NativeDrawing
    @return Returns the pointer to the <b>OH_Drawing_Region</b> object created.
    @since 12
    @version 1.0*/
    pub fn OH_Drawing_RegionCreate() -> *mut OH_Drawing_Region;
    /** @brief Determines whether the region contains the specified coordinates.

    @syscap SystemCapability.Graphic.Graphic2D.NativeDrawing
    @param region Indicates the pointer to an <b>OH_Drawing_Region</b> object.
    @param int32_t x-coordinate.
    @param int32_t y-coordinate.
    @return Returns <b>true</b> if (x, y) is inside region; returns <b>false</b> otherwise.
    @since 12
    @version 1.0*/
    pub fn OH_Drawing_RegionContains(region: *mut OH_Drawing_Region, x: i32, y: i32) -> bool;
    /** @brief Combines two regions.

    @syscap SystemCapability.Graphic.Graphic2D.NativeDrawing
    @param region Indicates the pointer to an <b>OH_Drawing_Region</b> object.
    @param other Indicates the pointer to an <b>OH_Drawing_Region</b> object.
    @param op Indicates the operation to apply to combine.
    @return Returns <b>true</b> if constructed Region is not empty; returns <b>false</b> otherwise.
    @since 12
    @version 1.0*/
    pub fn OH_Drawing_RegionOp(
        region: *mut OH_Drawing_Region,
        other: *const OH_Drawing_Region,
        op: OH_Drawing_RegionOpMode,
    ) -> bool;
    /** @brief Sets the region to the specified rect.

    @syscap SystemCapability.Graphic.Graphic2D.NativeDrawing
    @param OH_Drawing_Region Indicates the pointer to an <b>OH_Drawing_Region</b> object.
    @param OH_Drawing_Rect Indicates the pointer to an <b>OH_Drawing_Rect</b> object.
    @return Return true if constructed Region is not empty.
    @since 12
    @version 1.0*/
    pub fn OH_Drawing_RegionSetRect(
        region: *mut OH_Drawing_Region,
        rect: *const OH_Drawing_Rect,
    ) -> bool;
    /** @brief Constructs region that matchs outline of path within clip.

    @syscap SystemCapability.Graphic.Graphic2D.NativeDrawing
    @param region Indicates the pointer to an <b>OH_Drawing_Region</b> object.
    @param path Indicates the pointer to an <b>OH_Drawing_Path</b> object.
    @param clip Indicates the pointer to an <b>OH_Drawing_Region</b> object.
    @return Returns <b>true</b> if constructed Region is not empty; returns <b>false</b> otherwise.
    @since 12
    @version 1.0*/
    pub fn OH_Drawing_RegionSetPath(
        region: *mut OH_Drawing_Region,
        path: *const OH_Drawing_Path,
        clip: *const OH_Drawing_Region,
    ) -> bool;
    /** @brief Destroys an <b>OH_Drawing_Region</b> object and reclaims the memory occupied by the object.

    @syscap SystemCapability.Graphic.Graphic2D.NativeDrawing
    @param OH_Drawing_Region Indicates the pointer to an <b>OH_Drawing_Region</b> object.
    @since 12
    @version 1.0*/
    pub fn OH_Drawing_RegionDestroy(arg1: *mut OH_Drawing_Region);
}
