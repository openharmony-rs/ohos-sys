// automatically generated by rust-bindgen 0.71.1

#![allow(non_upper_case_globals)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
use crate::types::*;

#[allow(unused_imports)]
#[cfg(feature = "api-12")]
use crate::error_code::OH_Drawing_ErrorCode;

#[cfg(feature = "api-12")]
#[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
impl OH_Drawing_RegionOpMode {
    /// Difference operation.
    pub const REGION_OP_MODE_DIFFERENCE: OH_Drawing_RegionOpMode = OH_Drawing_RegionOpMode(0);
}
#[cfg(feature = "api-12")]
#[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
impl OH_Drawing_RegionOpMode {
    /// Intersect operation.
    pub const REGION_OP_MODE_INTERSECT: OH_Drawing_RegionOpMode = OH_Drawing_RegionOpMode(1);
}
#[cfg(feature = "api-12")]
#[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
impl OH_Drawing_RegionOpMode {
    /// Union operation.
    pub const REGION_OP_MODE_UNION: OH_Drawing_RegionOpMode = OH_Drawing_RegionOpMode(2);
}
#[cfg(feature = "api-12")]
#[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
impl OH_Drawing_RegionOpMode {
    /// Xor operation.
    pub const REGION_OP_MODE_XOR: OH_Drawing_RegionOpMode = OH_Drawing_RegionOpMode(3);
}
#[cfg(feature = "api-12")]
#[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
impl OH_Drawing_RegionOpMode {
    /// Reverse difference operation.
    pub const REGION_OP_MODE_REVERSE_DIFFERENCE: OH_Drawing_RegionOpMode =
        OH_Drawing_RegionOpMode(4);
}
#[cfg(feature = "api-12")]
#[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
impl OH_Drawing_RegionOpMode {
    /// Replace operation.
    pub const REGION_OP_MODE_REPLACE: OH_Drawing_RegionOpMode = OH_Drawing_RegionOpMode(5);
}
#[repr(transparent)]
/// Operations when two regions are combined.
///
///
/// Available since API-level: 12
///
/// Version: 1.0
#[cfg(feature = "api-12")]
#[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub struct OH_Drawing_RegionOpMode(pub ::core::ffi::c_uint);
extern "C" {
    /// Creates an <b>OH_Drawing_Region</b> object.
    ///
    ///
    /// Required System Capabilities: SystemCapability.Graphic.Graphic2D.NativeDrawing
    ///
    /// # Returns
    ///
    /// * Returns the pointer to the <b>OH_Drawing_Region</b> object created.
    ///
    /// Available since API-level: 12
    ///
    /// Version: 1.0
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_Drawing_RegionCreate() -> *mut OH_Drawing_Region;
    /// Determines whether the region contains the specified coordinates.
    ///
    ///
    /// Required System Capabilities: SystemCapability.Graphic.Graphic2D.NativeDrawing
    /// # Arguments
    ///
    /// * `region` - Indicates the pointer to an <b>OH_Drawing_Region</b> object.
    ///
    /// * `x` - x-coordinate.
    ///
    /// * `y` - y-coordinate.
    ///
    /// # Returns
    ///
    /// * Returns <b>true</b> if (x, y) is inside region; returns <b>false</b> otherwise.
    ///
    /// Available since API-level: 12
    ///
    /// Version: 1.0
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_Drawing_RegionContains(region: *mut OH_Drawing_Region, x: i32, y: i32) -> bool;
    /// Combines two regions.
    ///
    ///
    /// Required System Capabilities: SystemCapability.Graphic.Graphic2D.NativeDrawing
    /// # Arguments
    ///
    /// * `region` - Indicates the pointer to an <b>OH_Drawing_Region</b> object.
    ///
    /// * `other` - Indicates the pointer to an <b>OH_Drawing_Region</b> object.
    ///
    /// * `op` - Indicates the operation to apply to combine.
    ///
    /// # Returns
    ///
    /// * Returns <b>true</b> if constructed Region is not empty; returns <b>false</b> otherwise.
    ///
    /// Available since API-level: 12
    ///
    /// Version: 1.0
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_Drawing_RegionOp(
        region: *mut OH_Drawing_Region,
        other: *const OH_Drawing_Region,
        op: OH_Drawing_RegionOpMode,
    ) -> bool;
    /// Sets the region to the specified rect.
    ///
    ///
    /// Required System Capabilities: SystemCapability.Graphic.Graphic2D.NativeDrawing
    /// # Arguments
    ///
    /// * `region` - Indicates the pointer to an <b>OH_Drawing_Region</b> object.
    ///
    /// * `rect` - Indicates the pointer to an <b>OH_Drawing_Rect</b> object.
    ///
    /// # Returns
    ///
    /// * Return true if constructed Region is not empty.
    ///
    /// Available since API-level: 12
    ///
    /// Version: 1.0
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_Drawing_RegionSetRect(
        region: *mut OH_Drawing_Region,
        rect: *const OH_Drawing_Rect,
    ) -> bool;
    /// Constructs region that matchs outline of path within clip.
    ///
    ///
    /// Required System Capabilities: SystemCapability.Graphic.Graphic2D.NativeDrawing
    /// # Arguments
    ///
    /// * `region` - Indicates the pointer to an <b>OH_Drawing_Region</b> object.
    ///
    /// * `path` - Indicates the pointer to an <b>OH_Drawing_Path</b> object.
    ///
    /// * `clip` - Indicates the pointer to an <b>OH_Drawing_Region</b> object.
    ///
    /// # Returns
    ///
    /// * Returns <b>true</b> if constructed Region is not empty; returns <b>false</b> otherwise.
    ///
    /// Available since API-level: 12
    ///
    /// Version: 1.0
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_Drawing_RegionSetPath(
        region: *mut OH_Drawing_Region,
        path: *const OH_Drawing_Path,
        clip: *const OH_Drawing_Region,
    ) -> bool;
    /// Destroys an <b>OH_Drawing_Region</b> object and reclaims the memory occupied by the object.
    ///
    ///
    /// Required System Capabilities: SystemCapability.Graphic.Graphic2D.NativeDrawing
    /// # Arguments
    ///
    /// * `region` - Indicates the pointer to an <b>OH_Drawing_Region</b> object.
    ///
    /// Available since API-level: 12
    ///
    /// Version: 1.0
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_Drawing_RegionDestroy(region: *mut OH_Drawing_Region);
}
