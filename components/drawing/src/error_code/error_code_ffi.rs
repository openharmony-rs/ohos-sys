// automatically generated by rust-bindgen 0.71.1

#![allow(non_upper_case_globals)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
use crate::types::*;

#[cfg(feature = "api-12")]
#[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
impl DrawingErrorCode {
    /// Permission verification failed.
    pub const NO_PERMISSION: DrawingErrorCode =
        DrawingErrorCode(const { core::num::NonZero::new(201).unwrap() });
}
#[cfg(feature = "api-12")]
#[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
impl DrawingErrorCode {
    /// Invalid input parameter. For example, the pointer in the parameter is a nullptr.
    pub const INVALID_PARAMETER: DrawingErrorCode =
        DrawingErrorCode(const { core::num::NonZero::new(401).unwrap() });
}
#[cfg(feature = "api-12")]
#[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
impl DrawingErrorCode {
    /// The parameter is not in the valid range.
    pub const PARAMETER_OUT_OF_RANGE: DrawingErrorCode =
        DrawingErrorCode(const { core::num::NonZero::new(26200001).unwrap() });
}
#[cfg(feature = "api-12")]
#[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
impl DrawingErrorCode {
    /// mem allocate failed.
    ///
    /// Available since API-level: 13
    #[cfg(feature = "api-13")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-13")))]
    pub const ALLOCATION_FAILED: DrawingErrorCode =
        DrawingErrorCode(const { core::num::NonZero::new(26200002).unwrap() });
}
pub type DrawingResult = Result<(), DrawingErrorCode>;
#[repr(transparent)]
/// Enumerates error codes of drawing.
///
/// Available since API-level: 12
#[cfg(feature = "api-12")]
#[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub struct DrawingErrorCode(pub core::num::NonZero<::core::ffi::c_uint>);
extern "C" {
    /// Obtains the error code of the drawing module.
    ///
    ///
    /// Required System Capabilities: SystemCapability.Graphic.Graphic2D.NativeDrawing
    ///
    /// # Returns
    ///
    /// * Returns the error code.
    ///
    /// Available since API-level: 12
    ///
    /// Version: 1.0
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_Drawing_ErrorCodeGet() -> DrawingResult;
}
