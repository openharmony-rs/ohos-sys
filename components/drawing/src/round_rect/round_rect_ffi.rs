// automatically generated by rust-bindgen 0.71.1

#![allow(non_upper_case_globals)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
use crate::types::*;

#[cfg(feature = "api-12")]
#[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
impl OH_Drawing_CornerPos {
    /// Index of top-left corner radii.
    pub const CORNER_POS_TOP_LEFT: OH_Drawing_CornerPos = OH_Drawing_CornerPos(0);
    /// Index of top-right corner radii.
    pub const CORNER_POS_TOP_RIGHT: OH_Drawing_CornerPos = OH_Drawing_CornerPos(1);
    /// Index of bottom-right corner radii.
    pub const CORNER_POS_BOTTOM_RIGHT: OH_Drawing_CornerPos = OH_Drawing_CornerPos(2);
    /// Index of bottom-left corner radii.
    pub const CORNER_POS_BOTTOM_LEFT: OH_Drawing_CornerPos = OH_Drawing_CornerPos(3);
}
#[repr(transparent)]
/// Enumerates of corner radii position.
///
///
/// Available since API-level: 12
///
/// Version: 1.0
#[cfg(feature = "api-12")]
#[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub struct OH_Drawing_CornerPos(pub ::core::ffi::c_uint);
extern "C" {
    /// Creates an <b>OH_Drawing_RoundRect</b> object.
    ///
    ///
    /// Required System Capabilities: SystemCapability.Graphic.Graphic2D.NativeDrawing
    /// # Arguments
    ///
    /// * `rect` - Indicates the pointer to an <b>OH_Drawing_Rect</b> object.
    ///
    /// * `xRad` - Indicates the corner radii on x-axis.
    ///
    /// * `yRad` - Indicates the corner radii on y-axis.
    ///
    /// # Returns
    ///
    /// * Returns the pointer to the <b>OH_Drawing_RoundRect</b> object created.
    ///
    /// Available since API-level: 11
    ///
    /// Version: 1.0
    #[cfg(feature = "api-11")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-11")))]
    pub fn OH_Drawing_RoundRectCreate(
        rect: *const OH_Drawing_Rect,
        xRad: f32,
        yRad: f32,
    ) -> *mut OH_Drawing_RoundRect;
    /// Sets the radiusX and radiusY for a specific corner position.
    ///
    ///
    /// Required System Capabilities: SystemCapability.Graphic.Graphic2D.NativeDrawing
    /// # Arguments
    ///
    /// * `roundRect` - Indicates the pointer to an <b>OH_Drawing_Rect</b> object.
    ///
    /// * `pos` - Indicates the corner radii position.
    ///
    /// * `radii` - Indicates the corner radii on x-axis and y-axis.
    ///
    /// Available since API-level: 12
    ///
    /// Version: 1.0
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_Drawing_RoundRectSetCorner(
        roundRect: *mut OH_Drawing_RoundRect,
        pos: OH_Drawing_CornerPos,
        radii: OH_Drawing_Corner_Radii,
    );
    /// Gets an <b>OH_Drawing_Corner_Radii</b> struct, the point is round corner radiusX and radiusY.
    ///
    ///
    /// Required System Capabilities: SystemCapability.Graphic.Graphic2D.NativeDrawing
    /// # Arguments
    ///
    /// * `roundRect` - Indicates the pointer to an <b>OH_Drawing_RoundRect</b> object.
    ///
    /// * `pos` - Indicates the corner radii position.
    ///
    /// # Returns
    ///
    /// * Returns the corner radii of <b>OH_Drawing_Corner_Radii</b> struct.
    ///
    /// Available since API-level: 12
    ///
    /// Version: 1.0
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_Drawing_RoundRectGetCorner(
        roundRect: *mut OH_Drawing_RoundRect,
        pos: OH_Drawing_CornerPos,
    ) -> OH_Drawing_Corner_Radii;
    /// Destroys an <b>OH_Drawing_RoundRect</b> object and reclaims the memory occupied by the object.
    ///
    ///
    /// Required System Capabilities: SystemCapability.Graphic.Graphic2D.NativeDrawing
    /// # Arguments
    ///
    /// * `roundRect` - Indicates the pointer to an <b>OH_Drawing_RoundRect</b> object.
    ///
    /// Available since API-level: 11
    ///
    /// Version: 1.0
    #[cfg(feature = "api-11")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-11")))]
    pub fn OH_Drawing_RoundRectDestroy(roundRect: *mut OH_Drawing_RoundRect);
    /// Translates round rect by (dx, dy).
    ///
    ///
    /// Required System Capabilities: SystemCapability.Graphic.Graphic2D.NativeDrawing
    /// # Arguments
    ///
    /// * `roundRect` - Indicates the pointer to an <b>OH_Drawing_RoundRect</b> object.
    ///
    /// * `dx` - Indicates the offsets added to rect left and rect right.
    ///
    /// * `dy` - Indicates the offsets added to rect top and rect bottom.
    ///
    /// # Returns
    ///
    /// * Returns the error code.
    /// Returns [`OH_DRAWING_SUCCESS`] if the operation is successful.
    /// Returns [`OH_DRAWING_ERROR_INVALID_PARAMETER`] if roundRect is nullptr.
    ///
    /// Available since API-level: 12
    ///
    /// Version: 1.0
    #[cfg(feature = "api-12")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-12")))]
    pub fn OH_Drawing_RoundRectOffset(
        roundRect: *mut OH_Drawing_RoundRect,
        dx: f32,
        dy: f32,
    ) -> crate::error_code::DrawingResult;
}
