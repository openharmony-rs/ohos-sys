// automatically generated by rust-bindgen 0.71.1

#![allow(non_upper_case_globals)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
use crate::text_declaration::{
    OH_Drawing_LineTypography, OH_Drawing_TextLine, OH_Drawing_TypographyCreate,
};
use crate::types::*;

extern "C" {
    /// Creates an <b>OH_Drawing_LineTypography</b> object.
    ///
    ///
    /// Required System Capabilities: SystemCapability.Graphic.Graphic2D.NativeDrawing
    /// # Arguments
    ///
    /// * `handler` - Indicates the pointer to an <b>OH_Drawing_TypographyCreate</b> object.
    ///
    /// # Returns
    ///
    /// * Returns the pointer to the <b>OH_Drawing_LineTypography</b> object created.
    ///
    /// Available since API-level: 18
    #[cfg(feature = "api-18")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-18")))]
    pub fn OH_Drawing_CreateLineTypography(
        handler: *mut OH_Drawing_TypographyCreate,
    ) -> *mut OH_Drawing_LineTypography;
    /// Releases the memory occupied by an <b>OH_Drawing_LineTypography</b> object.
    ///
    ///
    /// Required System Capabilities: SystemCapability.Graphic.Graphic2D.NativeDrawing
    /// # Arguments
    ///
    /// * `lineTypography` - Indicates the pointer to an <b>OH_Drawing_LineTypography</b> object.
    ///
    /// Available since API-level: 18
    #[cfg(feature = "api-18")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-18")))]
    pub fn OH_Drawing_DestroyLineTypography(lineTypography: *mut OH_Drawing_LineTypography);
    /// Calculate the line breakpoint based on the width provided.
    ///
    ///
    /// Required System Capabilities: SystemCapability.Graphic.Graphic2D.NativeDrawing
    /// # Arguments
    ///
    /// * `lineTypography` - Indicates the pointer to an <b>OH_Drawing_TypographyCreate</b> object.
    ///
    /// * `startIndex` - Indicates the starting point for the line-break calculations.
    ///
    /// * `width` - Indicates the requested line-break width.
    ///
    /// # Returns
    ///
    /// * Returns the count of the characters from startIndex that would cause the line break.
    ///
    /// Available since API-level: 18
    #[cfg(feature = "api-18")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-18")))]
    pub fn OH_Drawing_LineTypographyGetLineBreak(
        lineTypography: *mut OH_Drawing_LineTypography,
        startIndex: usize,
        width: f64,
    ) -> usize;
    /// Creates a text line object based on the text range provided.
    ///
    ///
    /// Required System Capabilities: SystemCapability.Graphic.Graphic2D.NativeDrawing
    /// # Arguments
    ///
    /// * `lineTypography` - Indicates the pointer to an <b>OH_Drawing_TypographyCreate</b> object.
    ///
    /// * `startIndex` - Indicates the starting index of the text range.
    ///
    /// * `count` - Indicates the characters count of the text range.
    ///
    /// # Returns
    ///
    /// * Returns the pointer to the <b>OH_Drawing_TextLine</b> object created.
    ///
    /// Available since API-level: 18
    #[cfg(feature = "api-18")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-18")))]
    pub fn OH_Drawing_LineTypographyCreateLine(
        lineTypography: *mut OH_Drawing_LineTypography,
        startIndex: usize,
        count: usize,
    ) -> *mut OH_Drawing_TextLine;
}
