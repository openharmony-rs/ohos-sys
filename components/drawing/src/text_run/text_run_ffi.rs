// automatically generated by rust-bindgen 0.71.1

#![allow(non_upper_case_globals)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
use crate::text_declaration::OH_Drawing_Run;
use crate::types::*;

extern "C" {
    /// Gets the run glyph indices ,the offset of the index relative to the entire paragraph.
    ///
    ///
    /// Required System Capabilities: SystemCapability.Graphic.Graphic2D.NativeDrawing
    /// # Arguments
    ///
    /// * `run` - Indicates the pointer to an <b>OH_Drawing_Run</b> object.
    ///
    /// * `start` - The run of start index.
    ///
    /// * `length` - The run of length, if start and length are set to 0, then get all of the current run.
    ///
    /// # Returns
    ///
    /// * Run of glyph indices array object <b>OH_Drawing_Array</b>.
    ///
    /// Available since API-level: 18
    #[cfg(feature = "api-18")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-18")))]
    pub fn OH_Drawing_GetRunStringIndices(
        run: *mut OH_Drawing_Run,
        start: i64,
        length: i64,
    ) -> *mut OH_Drawing_Array;
    /// Gets the run glyph indices by index.
    ///
    ///
    /// Required System Capabilities: SystemCapability.Graphic.Graphic2D.NativeDrawing
    /// # Arguments
    ///
    /// * `stringIndices` - the run glyph indices array object <b>OH_Drawing_Array</b>.
    ///
    /// * `index` - The run of glyph index.
    ///
    /// # Returns
    ///
    /// * Run of glyph indices element.
    ///
    /// Available since API-level: 18
    #[cfg(feature = "api-18")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-18")))]
    pub fn OH_Drawing_GetRunStringIndicesByIndex(
        stringIndices: *mut OH_Drawing_Array,
        index: usize,
    ) -> u64;
    /// Releases the memory run glyph indices array.
    ///
    ///
    /// Required System Capabilities: SystemCapability.Graphic.Graphic2D.NativeDrawing
    /// # Arguments
    ///
    /// * `stringIndices` - glyph indices array object <b>OH_Drawing_Array</b>.
    ///
    /// Available since API-level: 18
    #[cfg(feature = "api-18")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-18")))]
    pub fn OH_Drawing_DestroyRunStringIndices(stringIndices: *mut OH_Drawing_Array);
    /// Gets the range run glyph location and length.
    ///
    ///
    /// Required System Capabilities: SystemCapability.Graphic.Graphic2D.NativeDrawing
    /// # Arguments
    ///
    /// * `run` - Indicates the pointer to an <b>OH_Drawing_Run</b> object.
    ///
    /// * `location` - The run of glyph location.
    ///
    /// * `length` - The run of glyph length.
    ///
    /// Available since API-level: 18
    #[cfg(feature = "api-18")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-18")))]
    pub fn OH_Drawing_GetRunStringRange(
        run: *mut OH_Drawing_Run,
        location: *mut u64,
        length: *mut u64,
    );
    /// Gets the run typographic bound.
    ///
    ///
    /// Required System Capabilities: SystemCapability.Graphic.Graphic2D.NativeDrawing
    /// # Arguments
    ///
    /// * `run` - Indicates the pointer to an <b>OH_Drawing_Run</b> object.
    ///
    /// * `ascent` - The run of ascent.
    ///
    /// * `descent` - The run of descent.
    ///
    /// * `leading` - The run of leading.
    ///
    /// # Returns
    ///
    /// * run typographic width.
    ///
    /// Available since API-level: 18
    #[cfg(feature = "api-18")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-18")))]
    pub fn OH_Drawing_GetRunTypographicBounds(
        run: *mut OH_Drawing_Run,
        ascent: *mut f32,
        descent: *mut f32,
        leading: *mut f32,
    ) -> f32;
    /// Paints text on the canvas.
    ///
    ///
    /// Required System Capabilities: SystemCapability.Graphic.Graphic2D.NativeDrawing
    /// # Arguments
    ///
    /// * `canvas` - Indicates the pointer to an <b>OH_Drawing_Canvas</b> object.
    ///
    /// * `run` - Indicates the pointer to an <b>OH_Drawing_Run</b> object.
    ///
    /// * `x` - Indicates the x coordinate.
    ///
    /// * `y` - Indicates the y coordinate.
    ///
    /// Available since API-level: 18
    #[cfg(feature = "api-18")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-18")))]
    pub fn OH_Drawing_RunPaint(
        canvas: *mut OH_Drawing_Canvas,
        run: *mut OH_Drawing_Run,
        x: f64,
        y: f64,
    );
    /// Gets the run image bound.
    ///
    ///
    /// Required System Capabilities: SystemCapability.Graphic.Graphic2D.NativeDrawing
    /// # Arguments
    ///
    /// * `run` - Indicates the pointer to an <b>OH_Drawing_Run</b> object.
    ///
    /// # Returns
    ///
    /// * The run image bounds to an <b>OH_Drawing_Rect</b> object.
    ///
    /// Available since API-level: 18
    #[cfg(feature = "api-18")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-18")))]
    pub fn OH_Drawing_GetRunImageBounds(run: *mut OH_Drawing_Run) -> *mut OH_Drawing_Rect;
    /// Releases the memory run image bounds pointer.
    ///
    ///
    /// Required System Capabilities: SystemCapability.Graphic.Graphic2D.NativeDrawing
    /// # Arguments
    ///
    /// * `rect` - Run image bounds to an <b>OH_Drawing_Rect</b> object.
    ///
    /// Available since API-level: 18
    #[cfg(feature = "api-18")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-18")))]
    pub fn OH_Drawing_DestroyRunImageBounds(rect: *mut OH_Drawing_Rect);
    /// Gets the range glyph identifier for each character.
    ///
    ///
    /// Required System Capabilities: SystemCapability.Graphic.Graphic2D.NativeDrawing
    /// # Arguments
    ///
    /// * `run` - Indicates the pointer to an <b>OH_Drawing_Run</b> object.
    ///
    /// * `start` - The run of start index.
    ///
    /// * `length` - The run of length, if start and length are set to 0, then get all of the current run.
    ///
    /// # Returns
    ///
    /// * Run of glyph array object <b>OH_Drawing_Array</b.
    ///
    /// Available since API-level: 18
    #[cfg(feature = "api-18")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-18")))]
    pub fn OH_Drawing_GetRunGlyphs(
        run: *mut OH_Drawing_Run,
        start: i64,
        length: i64,
    ) -> *mut OH_Drawing_Array;
    /// Gets the glyph identifier by index.
    ///
    ///
    /// Required System Capabilities: SystemCapability.Graphic.Graphic2D.NativeDrawing
    /// # Arguments
    ///
    /// * `glyphs` - The run of glyph array object <b>OH_Drawing_Array</b>.
    ///
    /// * `index` - The run of glyph index.
    ///
    /// # Returns
    ///
    /// * Run of glyph element.
    ///
    /// Available since API-level: 18
    ///
    /// Version: 1.0
    #[cfg(feature = "api-18")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-18")))]
    pub fn OH_Drawing_GetRunGlyphsByIndex(glyphs: *mut OH_Drawing_Array, index: usize) -> u16;
    /// Releases the memory run glyph array.
    ///
    ///
    /// Required System Capabilities: SystemCapability.Graphic.Graphic2D.NativeDrawing
    /// # Arguments
    ///
    /// * `glyphs` - The run of glyph array object <b>OH_Drawing_Array</b>.
    ///
    /// Available since API-level: 18
    #[cfg(feature = "api-18")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-18")))]
    pub fn OH_Drawing_DestroyRunGlyphs(glyphs: *mut OH_Drawing_Array);
    /// Gets the range glyph position array.
    ///
    ///
    /// Required System Capabilities: SystemCapability.Graphic.Graphic2D.NativeDrawing
    /// # Arguments
    ///
    /// * `run` - Indicates the pointer to an <b>OH_Drawing_Run</b> object.
    ///
    /// * `start` - The run of start index.
    ///
    /// * `length` - The run of length, if start and length are set to 0, then get all of the current run.
    ///
    /// # Returns
    ///
    /// * Run of position array object <b>OH_Drawing_Array</b>.
    ///
    /// Available since API-level: 18
    #[cfg(feature = "api-18")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-18")))]
    pub fn OH_Drawing_GetRunPositions(
        run: *mut OH_Drawing_Run,
        start: i64,
        length: i64,
    ) -> *mut OH_Drawing_Array;
    /// Gets the glyph position by index.
    ///
    ///
    /// Required System Capabilities: SystemCapability.Graphic.Graphic2D.NativeDrawing
    /// # Arguments
    ///
    /// * `positions` - The run of position array object <b>OH_Drawing_Array</b>.
    ///
    /// * `index` - The run of glyph index.
    ///
    /// # Returns
    ///
    /// * Run of glyph position pointer to an <b>OH_Drawing_Point</b> object.
    ///
    /// Available since API-level: 18
    ///
    /// Version: 1.0
    #[cfg(feature = "api-18")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-18")))]
    pub fn OH_Drawing_GetRunPositionsByIndex(
        positions: *mut OH_Drawing_Array,
        index: usize,
    ) -> *mut OH_Drawing_Point;
    /// Releases the memory run of position array.
    ///
    ///
    /// Required System Capabilities: SystemCapability.Graphic.Graphic2D.NativeDrawing
    /// # Arguments
    ///
    /// * `positions` - The run of position array object <b>OH_Drawing_Array</b>.
    ///
    /// Available since API-level: 18
    #[cfg(feature = "api-18")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-18")))]
    pub fn OH_Drawing_DestroyRunPositions(positions: *mut OH_Drawing_Array);
    /// Gets the number of glyph.
    ///
    ///
    /// Required System Capabilities: SystemCapability.Graphic.Graphic2D.NativeDrawing
    /// # Arguments
    ///
    /// * `run` - Indicates the pointer to an <b>OH_Drawing_Run</b> object.
    ///
    /// # Returns
    ///
    /// * The number of glyph.
    ///
    /// Available since API-level: 18
    #[cfg(feature = "api-18")]
    #[cfg_attr(docsrs, doc(cfg(feature = "api-18")))]
    pub fn OH_Drawing_GetRunGlyphCount(run: *mut OH_Drawing_Run) -> u32;
}
